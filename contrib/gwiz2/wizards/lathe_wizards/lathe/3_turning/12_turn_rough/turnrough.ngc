O<TurnRough> sub (outside diameter turning)
    #<startX> = #1
    #<endX> = #2
    #<startZ> = #3
    #<endZ> = #4
    #<plungeRate> = #5
    #<roughRate> = #6
    #<roughDepth> = #7
    #<finishRate> = #8
    #<finishDepth> = #9
    #<clearance> = #10
    #<approachAngle> = #11
    #<clearanceAngle> = #12

    (verify parameters)
    o5 if [ #<endX> GT #<startX> ]
        ! endX coordinate must be less than or equal to startX
    o5 endif
    o6 if [ #<endZ> GT #<startZ> ]
        ! endZ coordinate must be less than or equal to startZ
    o6 endif

    (save start position)
    G30.1

    (Make sure spindle is on)
    M3

    (compute the first cut point backwards, allowing for a full finishing cut)
    o10 if [#<finishDepth> EQ 0]
    	#<xRoughFinish> = #<endX>
        #<xFinishCount> = 0
    o10 else
    	#<xRoughFinish> = [#<endX> + #<finishDepth>]
        #<xFinishCount> = 1
    o10 endif


    #<xRoughCount> = fup[[#<startX> - #<xRoughFinish>] / #<roughDepth>]
    #<xFirst> = [[#<xRoughCount>-1] * #<roughDepth> + #<xRoughFinish>]

    (do the loop)
    G0 X[#<startX>+#<clearance>]
    G0 Z#<startZ>
    #<xPos> = #<xFirst>
    o20 repeat [ #<xRoughCount> ]
        #<dX> = [#<startX> - #<xPos>]
        #<dZStart> = [ #<dX> * sin[#<approachAngle>] ]
        #<dZEnd> = [ #<dX> * sin[#<clearanceAngle>] ]

        G0 Z[ #<startZ> - #<dZStart> - #<finishDepth> ]
        G1 X#<xPos> F#<roughRate>
        G1 Z[#<endZ> + #<dZEnd> + #<finishDepth>] F#<roughRate>
        G0 X[#<xPos>+#<clearance>]
        
	#<xPos> = [#<xPos> - #<roughDepth>]
    o20 endrepeat


    o30 if [ #<xFinishCount> NE 0 ]
        #<xEnd> = #<endX>
        #<xStart> = [#<startX> + #<clearance>]
        #<zStartOut> = [ #<startZ> + #<clearance> * sin[#<approachAngle>] ]
        #<zStartIn> = [ #<startZ> - [ #<startX> - #<endX> ] * sin[#<approachAngle>] ]
        #<zEndOut> = [ #<endZ> - #<clearance> * sin[#<clearanceAngle>] ]
        #<zEndIn> = [ #<endZ> + [ #<startX> - #<endX> ] * sin[#<clearanceAngle>] ]
        
        G0 X#<xStart>
        G0 Z#<zStartOut>
        G1 X#<xEnd> Z#<zStartIn> F#<finishRate>
        G1 Z#<zEndIn>
        G1 X#<xStart> Z#<zEndOut>
    o30 endif

    (return to start position)
    G30
O<TurnRough> endsub
