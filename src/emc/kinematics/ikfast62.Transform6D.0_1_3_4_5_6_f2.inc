/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// C version for linuxcnc adapted by \author Frank Tkalcevic
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 62 generated on 2013-12-12 22:20:20.990775
///
///    /usr/local/bin/openrave.py --database inversekinematics --robot=src/robots/barrettwam.robot.xml --outputlang=c 
///
/// To compile with gcc:
///     gcc ik.c -lm
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp

#define IKFAST_HAS_LIBRARY
#define IKFAST_NUM_DOF 4
#define IKFAST_NUM_JOINTS 7
#define IKFAST_NUM_FREE_VARS 1

// For a standalone binary
#ifndef IKFAST_NO_MAIN
    #define j0 math_h_j0
    #define j1 math_h_j1

    #include <math.h>
    #include <complex.h>
    #include <stdlib.h>
    #include <stdio.h>

    #undef j0
    #undef j1

    #define rtapi_exit  exit
    #define rtapi_print printf
#endif

#include "ikfast_c.h" // found inside share/openrave-X.Y/python/ikfast_c.h

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==62);

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { rtapi_print( "ikfast exception: " __FILE__ ":" IKFAST_STRINGIZE(__LINE__) ": " IKFAST_STRINGIZE(_PRETTY_FUNCTION__) ": Assertion '"  #b "' failed" ); rtapi_exit(-1); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
void zgetrf_ (const int* m, const int* n, double complex * a, const int* lda, int* ipiv, int* info);
void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);


inline double IKabs(double f) { return fabs(f); }

inline double IKsqr(double f) { return f*f; }

inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline double IKsin(double f) { return sin(f); }
inline double IKcos(double f) { return cos(f); }
inline double IKtan(double f) { return tan(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}


inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

// Forward declaration even if they aren't used
static inline void polyroots1(IkReal rawcoeffs[1+1], IkReal rawroots[1], int *numroots );
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int *numroots );
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int *numroots );
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int *numroots );
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int *numroots );
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int *numroots );
static inline void polyroots7(IkReal rawcoeffs[7+1], IkReal rawroots[7], int *numroots );
static inline void polyroots8(IkReal rawcoeffs[8+1], IkReal rawroots[8], int *numroots );


static const struct JointInfo
{
    double limitMin;
    double limitMax;
} JointInfo[] =
{
{ .limitMin=-150.0, .limitMax=150.0 },
{ .limitMin=-113.0, .limitMax=113.0 },
{ .limitMin=-157.0, .limitMax=157.0 },
{ .limitMin=-50.0, .limitMax=180.0 },
{ .limitMin=-275.0, .limitMax=75.0 },
{ .limitMin=-90.0, .limitMax=90.0 },
{ .limitMin=-172.0, .limitMax=172.0 },
{ .limitMin=0.0, .limitMax=140.0 },
{ .limitMin=0.0, .limitMax=140.0 },
{ .limitMin=0.0, .limitMax=140.0 },
{ .limitMin=-1.0, .limitMax=181.0 },
};
static IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j2,cj2,sj2,htj2,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
static unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij2[2], _nj2;

static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int* numroots) {
    IkReal det = rawcoeffs[1]*rawcoeffs[1]-4*rawcoeffs[0]*rawcoeffs[2];
    if( det < 0 ) {
        *numroots=0;
    }
    else if( det == 0 ) {
        rawroots[0] = -0.5*rawcoeffs[1]/rawcoeffs[0];
        *numroots = 1;
    }
    else {
        det = IKsqrt(det);
        rawroots[0] = (-rawcoeffs[1]+det)/(2*rawcoeffs[0]);
        rawroots[1] = (-rawcoeffs[1]-det)/(2*rawcoeffs[0]);//rawcoeffs[2]/(rawcoeffs[0]*rawroots[0]);
        *numroots = 2;
    }
}
inline void rotationfunction0(IkSolutionList* solutions) {
int rotationiter = 0;
for(rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x92=(((IkReal)(1.00000000000000))*(cj3));
IkReal x93=((sj0)*(sj2));
IkReal x94=((cj2)*(sj1));
IkReal x95=(((IkReal)(1.00000000000000))*(sj3));
IkReal x96=((cj1)*(cj2));
IkReal x97=((sj1)*(sj2));
IkReal x98=((cj0)*(sj2));
IkReal x99=(((IkReal)(1.00000000000000))*(cj1));
IkReal x100=((((cj3)*(x96)))+((((IkReal)(-1.00000000000000))*(sj1)*(x95))));
IkReal x101=(((((IkReal)(-1.00000000000000))*(x93)*(x99)))+(((cj0)*(cj2))));
IkReal x102=((((cj3)*(sj1)))+(((sj3)*(x96))));
IkReal x103=(((((IkReal)(-1.00000000000000))*(x94)*(x95)))+(((cj1)*(cj3))));
IkReal x104=((cj0)*(x100));
IkReal x105=(((((IkReal)(-1.00000000000000))*(x92)*(x94)))+((((IkReal)(-1.00000000000000))*(cj1)*(x95))));
IkReal x106=(((((IkReal)(-1.00000000000000))*(cj2)*(sj0)))+((((IkReal)(-1.00000000000000))*(x98)*(x99))));
IkReal x107=((((cj3)*(x98)))+(((sj0)*(x100))));
IkReal x108=(((((IkReal)(-1.00000000000000))*(x92)*(x93)))+(x104));
IkReal x109=((((sj0)*(x102)))+(((sj3)*(x98))));
IkReal x110=(((((IkReal)(-1.00000000000000))*(x93)*(x95)))+(((cj0)*(x102))));
new_r00=((((r20)*(x105)))+(((r10)*(x107)))+(((r00)*(x108))));
new_r01=((((r21)*(x105)))+(((r11)*(x107)))+(((r01)*(x108))));
new_r02=((((r22)*(x105)))+(((r12)*(x107)))+(((r02)*((((((IkReal)(-1.00000000000000))*(cj3)*(x93)))+(x104))))));
new_r10=((((r10)*(x101)))+(((r00)*(x106)))+(((r20)*(x97))));
new_r11=((((r21)*(x97)))+(((r11)*(x101)))+(((r01)*(x106))));
new_r12=((((r02)*(x106)))+(((r12)*(x101)))+(((r22)*(x97))));
new_r20=((((r10)*(x109)))+(((r20)*(x103)))+(((r00)*(x110))));
new_r21=((((r01)*(x110)))+(((r21)*(x103)))+(((r11)*(x109))));
new_r22=((((r12)*(x109)))+(((r22)*(x103)))+(((r02)*(x110))));
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
cj5array[0]=new_r22;
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
int ij5;
for(ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x111=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=x111;
evalcond[2]=x111;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
IkReal j6mul = 1;
j6=0;
IkReal j4mul=(IkReal)(-1.00000000000000);
if( IKabs((((IkReal)(-1.00000000000000))*(new_r01))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r01)))+IKsqr(new_r00)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4=IKatan2((((IkReal)(-1.00000000000000))*(new_r01)), new_r00);
{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].fmul = j4mul;
vinfos[4].freeind = 0;
vinfos[4].maxsolutions = 0;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].fmul = j6mul;
vinfos[6].freeind = 0;
vinfos[6].maxsolutions = 0;
int vfree[1];
vfree[0] = 6;
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 1);
}

} else
{
IkReal x112=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959))));
evalcond[1]=x112;
evalcond[2]=x112;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x112;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
if( IKabs(new_r02) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r12) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x113=IKatan2(new_r02, new_r12);
j4array[0]=(((IkReal)(-1.00000000000000))*(x113));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
j4array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x113))));
sj4array[1]=IKsin(j4array[1]);
cj4array[1]=IKcos(j4array[1]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
if( j4array[1] > IKPI )
{
    j4array[1]-=IK2PI;
}
else if( j4array[1] < -IKPI )
{    j4array[1]+=IK2PI;
}
j4valid[1] = true;
int ij4;
for(ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[1];
evalcond[0]=((((new_r12)*(IKcos(j4))))+((((IkReal)(-1.00000000000000))*(new_r02)*(IKsin(j4)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj4)*(sj4))+((cj4)*(cj4))));
dummyeval[0]=(((sj4)*(sj4))+((cj4)*(cj4)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign((((sj4)*(sj4))+((cj4)*(cj4))));
dummyeval[0]=(((sj4)*(sj4))+((cj4)*(cj4)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x114=(((IkReal)(1.00000000000000))*(new_r00));
if( IKabs(((gconst63)*((((((IkReal)(-1.00000000000000))*(sj4)*(x114)))+(((cj4)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*((((((IkReal)(-1.00000000000000))*(cj4)*(x114)))+((((IkReal)(-1.00000000000000))*(new_r10)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst63)*((((((IkReal)(-1.00000000000000))*(sj4)*(x114)))+(((cj4)*(new_r10)))))), ((gconst63)*((((((IkReal)(-1.00000000000000))*(cj4)*(x114)))+((((IkReal)(-1.00000000000000))*(new_r10)*(sj4)))))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x115=IKcos(j6);
IkReal x116=IKsin(j6);
IkReal x117=(((IkReal)(1.00000000000000))*(sj4));
IkReal x118=(((IkReal)(1.00000000000000))*(x116));
IkReal x119=((sj4)*(x115));
IkReal x120=(((IkReal)(1.00000000000000))*(x115));
IkReal x121=((cj4)*(x118));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x118)))+(((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x117))));
evalcond[1]=((((cj4)*(new_r11)))+((((IkReal)(-1.00000000000000))*(x120)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x117))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x118)))+(((new_r11)*(sj4)))+(((cj4)*(new_r01))));
evalcond[3]=((new_r01)+(x119)+((((IkReal)(-1.00000000000000))*(x121))));
evalcond[4]=((((cj4)*(new_r00)))+(((new_r10)*(sj4)))+(x115));
evalcond[5]=((((sj4)*(x116)))+(new_r00)+(((cj4)*(x115))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x116)*(x117)))+((((IkReal)(-1.00000000000000))*(cj4)*(x120)))+(new_r11));
evalcond[7]=((x119)+(new_r10)+((((IkReal)(-1.00000000000000))*(x121))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x122=(((IkReal)(1.00000000000000))*(new_r00));
if( IKabs(((gconst62)*((((((IkReal)(-1.00000000000000))*(sj4)*(x122)))+(((cj4)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*((((((IkReal)(-1.00000000000000))*(cj4)*(x122)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst62)*((((((IkReal)(-1.00000000000000))*(sj4)*(x122)))+(((cj4)*(new_r01)))))), ((gconst62)*((((((IkReal)(-1.00000000000000))*(cj4)*(x122)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x123=IKcos(j6);
IkReal x124=IKsin(j6);
IkReal x125=(((IkReal)(1.00000000000000))*(sj4));
IkReal x126=(((IkReal)(1.00000000000000))*(x124));
IkReal x127=((sj4)*(x123));
IkReal x128=(((IkReal)(1.00000000000000))*(x123));
IkReal x129=((cj4)*(x126));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x125)))+(((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x126))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x128)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x125)))+(((cj4)*(new_r11))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x126)))+(((new_r11)*(sj4)))+(((cj4)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x129)))+(x127)+(new_r01));
evalcond[4]=((x123)+(((cj4)*(new_r00)))+(((new_r10)*(sj4))));
evalcond[5]=((((cj4)*(x123)))+(new_r00)+(((sj4)*(x124))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj4)*(x128)))+(new_r11)+((((IkReal)(-1.00000000000000))*(x124)*(x125))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x129)))+(x127)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst52)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst52)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst52)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst52)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[2];
evalcond[0]=((new_r20)+(((sj5)*(IKcos(j6)))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj5)*(IKsin(j6)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x130=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=x130;
evalcond[2]=x130;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((((IkReal)(-1.00000000000000))*(cj6)*(new_r02)))+(((new_r12)*(sj6)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(cj6)*(new_r02)))+(((new_r12)*(sj6))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x131=((gconst56)*(new_r01));
if( IKabs(((new_r02)*(x131))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x131))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((new_r02)*(x131)), (((IkReal)(-1.00000000000000))*(new_r12)*(x131)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[10];
IkReal x132=IKsin(j4);
IkReal x133=IKcos(j4);
IkReal x134=(((IkReal)(1.00000000000000))*(cj6));
IkReal x135=(((IkReal)(1.00000000000000))*(sj6));
IkReal x136=((sj6)*(x132));
IkReal x137=(((IkReal)(1.00000000000000))*(x132));
IkReal x138=((x133)*(x134));
evalcond[0]=((((new_r12)*(x133)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x137))));
evalcond[1]=((((new_r12)*(x132)))+(((new_r02)*(x133))));
evalcond[2]=((((new_r10)*(x133)))+((((IkReal)(-1.00000000000000))*(x135)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x137))));
evalcond[3]=((((new_r11)*(x133)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x137)))+((((IkReal)(-1.00000000000000))*(x134))));
evalcond[4]=((sj6)+(((new_r01)*(x133)))+(((new_r11)*(x132))));
evalcond[5]=((((sj6)*(x133)))+(new_r01)+(((cj6)*(x132))));
evalcond[6]=((((new_r00)*(x133)))+(((new_r10)*(x132)))+((((IkReal)(-1.00000000000000))*(x134))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x138)))+(new_r00)+(x136));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x138)))+(x136)+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x132)*(x134)))+((((IkReal)(-1.00000000000000))*(x133)*(x135)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x139=((gconst55)*(sj6));
if( IKabs(((new_r02)*(x139))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x139))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((new_r02)*(x139)), (((IkReal)(-1.00000000000000))*(new_r12)*(x139)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[10];
IkReal x140=IKsin(j4);
IkReal x141=IKcos(j4);
IkReal x142=(((IkReal)(1.00000000000000))*(cj6));
IkReal x143=(((IkReal)(1.00000000000000))*(sj6));
IkReal x144=((sj6)*(x140));
IkReal x145=(((IkReal)(1.00000000000000))*(x140));
IkReal x146=((x141)*(x142));
evalcond[0]=((((new_r12)*(x141)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x145))));
evalcond[1]=((((new_r02)*(x141)))+(((new_r12)*(x140))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x145)))+(((new_r10)*(x141)))+((((IkReal)(-1.00000000000000))*(x143))));
evalcond[3]=((((new_r11)*(x141)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x145)))+((((IkReal)(-1.00000000000000))*(x142))));
evalcond[4]=((((new_r11)*(x140)))+(((new_r01)*(x141)))+(sj6));
evalcond[5]=((((sj6)*(x141)))+(((cj6)*(x140)))+(new_r01));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x142)))+(((new_r00)*(x141)))+(((new_r10)*(x140))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x146)))+(new_r00)+(x144));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x146)))+(x144)+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x140)*(x142)))+((((IkReal)(-1.00000000000000))*(x141)*(x143)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x147=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959))));
evalcond[1]=x147;
evalcond[2]=x147;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x147;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign(((((new_r00)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(new_r10)))));
dummyeval[0]=((((new_r00)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(new_r10))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(sj6)))+(((cj6)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(sj6)))+(((cj6)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x148=((gconst58)*(new_r00));
if( IKabs(((new_r02)*(x148))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x148))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((new_r02)*(x148)), (((IkReal)(-1.00000000000000))*(new_r12)*(x148)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[10];
IkReal x149=IKsin(j4);
IkReal x150=IKcos(j4);
IkReal x151=(((IkReal)(1.00000000000000))*(sj6));
IkReal x152=(((IkReal)(1.00000000000000))*(cj6));
IkReal x153=((cj6)*(x149));
IkReal x154=(((IkReal)(1.00000000000000))*(x149));
IkReal x155=((x150)*(x151));
evalcond[0]=((((new_r12)*(x150)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x154))));
evalcond[1]=((((new_r02)*(x150)))+(((new_r12)*(x149))));
evalcond[2]=((((new_r10)*(x150)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x154)))+((((IkReal)(-1.00000000000000))*(x151))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x154)))+((((IkReal)(-1.00000000000000))*(x152)))+(((new_r11)*(x150))));
evalcond[4]=((((new_r11)*(x149)))+((((IkReal)(-1.00000000000000))*(x151)))+(((new_r01)*(x150))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x155)))+(x153)+(new_r01));
evalcond[6]=((cj6)+(((new_r00)*(x150)))+(((new_r10)*(x149))));
evalcond[7]=((((cj6)*(x150)))+(((sj6)*(x149)))+(new_r00));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x149)*(x151)))+((((IkReal)(-1.00000000000000))*(x150)*(x152)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x155)))+(x153)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x156=((cj6)*(gconst57));
if( IKabs(((new_r02)*(x156))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x156))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((new_r02)*(x156)), (((IkReal)(-1.00000000000000))*(new_r12)*(x156)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[10];
IkReal x157=IKsin(j4);
IkReal x158=IKcos(j4);
IkReal x159=(((IkReal)(1.00000000000000))*(sj6));
IkReal x160=(((IkReal)(1.00000000000000))*(cj6));
IkReal x161=((cj6)*(x157));
IkReal x162=(((IkReal)(1.00000000000000))*(x157));
IkReal x163=((x158)*(x159));
evalcond[0]=((((new_r12)*(x158)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x162))));
evalcond[1]=((((new_r12)*(x157)))+(((new_r02)*(x158))));
evalcond[2]=((((new_r10)*(x158)))+((((IkReal)(-1.00000000000000))*(x159)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x162))));
evalcond[3]=((((new_r11)*(x158)))+((((IkReal)(-1.00000000000000))*(x160)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x162))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x159)))+(((new_r11)*(x157)))+(((new_r01)*(x158))));
evalcond[5]=((x161)+((((IkReal)(-1.00000000000000))*(x163)))+(new_r01));
evalcond[6]=((((new_r00)*(x158)))+(((new_r10)*(x157)))+(cj6));
evalcond[7]=((((sj6)*(x157)))+(new_r00)+(((cj6)*(x158))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x157)*(x159)))+((((IkReal)(-1.00000000000000))*(x158)*(x160)))+(new_r11));
evalcond[9]=((x161)+((((IkReal)(-1.00000000000000))*(x163)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst54)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(new_r12)), ((gconst54)*(new_r02)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[18];
IkReal x164=IKcos(j4);
IkReal x165=IKsin(j4);
IkReal x166=(((IkReal)(1.00000000000000))*(cj6));
IkReal x167=((cj5)*(sj6));
IkReal x168=(((IkReal)(1.00000000000000))*(cj5));
IkReal x169=(((IkReal)(1.00000000000000))*(sj5));
IkReal x170=(((IkReal)(1.00000000000000))*(x164));
IkReal x171=((cj5)*(x165));
IkReal x172=((new_r11)*(x165));
IkReal x173=((cj5)*(x164));
IkReal x174=((new_r12)*(x165));
IkReal x175=((new_r10)*(x165));
IkReal x176=(((IkReal)(1.00000000000000))*(x165));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x164)*(x169)))+(new_r02));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x165)*(x169)))+(new_r12));
evalcond[2]=((((new_r12)*(x164)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x176))));
evalcond[3]=((x174)+(((new_r02)*(x164)))+((((IkReal)(-1.00000000000000))*(x169))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj6)))+(((new_r10)*(x164)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x176))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x176)))+((((IkReal)(-1.00000000000000))*(x166)))+(((new_r11)*(x164))));
evalcond[6]=((x172)+(((new_r01)*(x164)))+(x167));
evalcond[7]=((((x164)*(x167)))+(((cj6)*(x165)))+(new_r01));
evalcond[8]=((((new_r00)*(x164)))+(x175)+((((IkReal)(-1.00000000000000))*(cj5)*(x166))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x166)*(x173)))+(((sj6)*(x165)))+(new_r00));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x164)*(x166)))+(((x165)*(x167)))+(new_r11));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x166)*(x171)))+(new_r10)+((((IkReal)(-1.00000000000000))*(sj6)*(x170))));
evalcond[12]=(((((IkReal)(-1.00000000000000))*(new_r22)*(x169)))+(((new_r12)*(x171)))+(((new_r02)*(x173))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x164)*(x169)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x168)))+((((IkReal)(-1.00000000000000))*(x169)*(x175))));
evalcond[14]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x168)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x164)*(x169)))+((((IkReal)(-1.00000000000000))*(x169)*(x172))));
evalcond[15]=((((new_r01)*(x173)))+(sj6)+((((IkReal)(-1.00000000000000))*(new_r21)*(x169)))+(((new_r11)*(x171))));
evalcond[16]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x168)))+((((IkReal)(-1.00000000000000))*(x169)*(x174)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x164)*(x169))));
evalcond[17]=(((((IkReal)(-1.00000000000000))*(x166)))+(((new_r00)*(x173)))+(((new_r10)*(x171)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x169))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst53)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(new_r12)), ((gconst53)*(new_r02)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[18];
IkReal x177=IKcos(j4);
IkReal x178=IKsin(j4);
IkReal x179=(((IkReal)(1.00000000000000))*(cj6));
IkReal x180=((cj5)*(sj6));
IkReal x181=(((IkReal)(1.00000000000000))*(cj5));
IkReal x182=(((IkReal)(1.00000000000000))*(sj5));
IkReal x183=(((IkReal)(1.00000000000000))*(x177));
IkReal x184=((cj5)*(x178));
IkReal x185=((new_r11)*(x178));
IkReal x186=((cj5)*(x177));
IkReal x187=((new_r12)*(x178));
IkReal x188=((new_r10)*(x178));
IkReal x189=(((IkReal)(1.00000000000000))*(x178));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x177)*(x182)))+(new_r02));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x178)*(x182)))+(new_r12));
evalcond[2]=((((new_r12)*(x177)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x189))));
evalcond[3]=((((new_r02)*(x177)))+(x187)+((((IkReal)(-1.00000000000000))*(x182))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj6)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x189)))+(((new_r10)*(x177))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x179)))+(((new_r11)*(x177)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x189))));
evalcond[6]=((x185)+(x180)+(((new_r01)*(x177))));
evalcond[7]=((((cj6)*(x178)))+(((x177)*(x180)))+(new_r01));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj5)*(x179)))+(((new_r00)*(x177)))+(x188));
evalcond[9]=((((sj6)*(x178)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x179)*(x186))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x177)*(x179)))+(((x178)*(x180)))+(new_r11));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(sj6)*(x183)))+((((IkReal)(-1.00000000000000))*(x179)*(x184)))+(new_r10));
evalcond[12]=((((new_r02)*(x186)))+(((new_r12)*(x184)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x182))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x177)*(x182)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x181)))+((((IkReal)(-1.00000000000000))*(x182)*(x188))));
evalcond[14]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x181)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x177)*(x182)))+((((IkReal)(-1.00000000000000))*(x182)*(x185))));
evalcond[15]=((sj6)+(((new_r01)*(x186)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x182)))+(((new_r11)*(x184))));
evalcond[16]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(x182)*(x187)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x177)*(x182)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x181))));
evalcond[17]=((((new_r00)*(x186)))+((((IkReal)(-1.00000000000000))*(x179)))+(((new_r10)*(x184)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x182))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst51)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(new_r12)), ((gconst51)*(new_r02)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x190=IKcos(j4);
IkReal x191=IKsin(j4);
IkReal x192=(((IkReal)(1.00000000000000))*(sj5));
IkReal x193=(((IkReal)(1.00000000000000))*(cj5));
IkReal x194=((new_r12)*(x191));
IkReal x195=((new_r02)*(x190));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x190)*(x192)))+(new_r02));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x191)*(x192)))+(new_r12));
evalcond[2]=((((new_r12)*(x190)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x191))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x192)))+(x195)+(x194));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(new_r22)*(x192)))+(((cj5)*(x194)))+(((cj5)*(x195))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x193)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x191)*(x192)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x190)*(x192))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x193)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x190)*(x192)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x191)*(x192))));
evalcond[7]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x193)))+((((IkReal)(-1.00000000000000))*(x192)*(x195)))+((((IkReal)(-1.00000000000000))*(x192)*(x194))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[3];
dummyeval[0]=cj4;
dummyeval[1]=cj5;
dummyeval[2]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  || IKabs(dummyeval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x196=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x197=((new_r12)+((((IkReal)(-1.00000000000000))*(sj5))));
IkReal x198=(((IkReal)(1.00000000000000))*(cj5));
IkReal x199=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x196;
evalcond[2]=x196;
evalcond[3]=new_r02;
evalcond[4]=x197;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x197;
evalcond[7]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x199))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x198)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x199))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x198)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x199))));
evalcond[10]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x198)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x199))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj5;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x200=(((IkReal)(-1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x200;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x200;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r10));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r11));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x201=IKcos(j6);
IkReal x202=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x201));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x202)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x202)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x201)))+((((IkReal)(-1.00000000000000))*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x203=(((IkReal)(1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x203;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x203;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=new_r22;
evalcond[12]=new_r10;
evalcond[13]=new_r11;
evalcond[14]=x203;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x204=IKsin(j6);
IkReal x205=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x205))));
evalcond[1]=((new_r21)+(x204));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x204)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x205))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x206=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=x206;
evalcond[2]=x206;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=new_r12;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x207=IKsin(j6);
IkReal x208=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x207))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x208))));
evalcond[2]=((x207)+(new_r11));
evalcond[3]=((new_r10)+((((IkReal)(-1.00000000000000))*(x208))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x209=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959))));
evalcond[1]=x209;
evalcond[2]=x209;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[12]=new_r20;
evalcond[13]=new_r21;
evalcond[14]=x209;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r10))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r10)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r10)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x210=IKcos(j6);
IkReal x211=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x211))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x210))));
evalcond[2]=((new_r11)+((((IkReal)(-1.00000000000000))*(x211))));
evalcond[3]=((x210)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))), (((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x212=IKsin(j6);
IkReal x213=IKcos(j6);
IkReal x214=(((IkReal)(1.00000000000000))*(sj5));
IkReal x215=(((IkReal)(1.00000000000000))*(x213));
evalcond[0]=((new_r20)+(((sj5)*(x213))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x212)*(x214)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x212)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x215)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[4]=((((cj5)*(x212)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x215)))+(new_r10));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x214)))+(x212)+(((cj5)*(new_r11))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x215)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x214))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst60)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst60)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst60)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst60)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x216=IKsin(j6);
IkReal x217=IKcos(j6);
IkReal x218=(((IkReal)(1.00000000000000))*(sj5));
IkReal x219=(((IkReal)(1.00000000000000))*(x217));
evalcond[0]=((new_r20)+(((sj5)*(x217))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x216)*(x218))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x216)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x219))));
evalcond[4]=((((cj5)*(x216)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x219)))+(new_r10));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x218)))+(x216)+(((cj5)*(new_r11))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x218)))+((((IkReal)(-1.00000000000000))*(x219))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x220=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x221=((new_r12)+((((IkReal)(-1.00000000000000))*(sj5))));
IkReal x222=(((IkReal)(1.00000000000000))*(cj5));
IkReal x223=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=x220;
evalcond[2]=x220;
evalcond[3]=new_r02;
evalcond[4]=x221;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x221;
evalcond[7]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x223))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x223)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x222))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r11)*(x223)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x222))));
evalcond[10]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x222)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x223))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj5;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x224=(((IkReal)(-1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x224;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x224;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r10));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r11));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x225=IKcos(j6);
IkReal x226=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x225));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x226))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x226))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x225)))+((((IkReal)(-1.00000000000000))*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x227=(((IkReal)(1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x227;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x227;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=new_r22;
evalcond[12]=new_r10;
evalcond[13]=new_r11;
evalcond[14]=x227;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x228=IKsin(j6);
IkReal x229=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x229))));
evalcond[1]=((new_r21)+(x228));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x228))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x229))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x230=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=x230;
evalcond[2]=x230;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=new_r12;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x231=IKsin(j6);
IkReal x232=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x231)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x232))));
evalcond[2]=((x231)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x232)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x233=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959))));
evalcond[1]=x233;
evalcond[2]=x233;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[12]=new_r20;
evalcond[13]=new_r21;
evalcond[14]=x233;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r10))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r10)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r10)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x234=IKcos(j6);
IkReal x235=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x235)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x234))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x235)))+(new_r11));
evalcond[3]=((x234)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))), (((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x236=IKsin(j6);
IkReal x237=IKcos(j6);
IkReal x238=(((IkReal)(1.00000000000000))*(sj5));
IkReal x239=(((IkReal)(1.00000000000000))*(x237));
evalcond[0]=((new_r20)+(((sj5)*(x237))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x236)*(x238))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x236))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x239)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[4]=((((cj5)*(x236)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x239)))+(new_r10));
evalcond[6]=((x236)+((((IkReal)(-1.00000000000000))*(new_r21)*(x238)))+(((cj5)*(new_r11))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x239)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x238))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst61)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst61)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst61)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst61)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x240=IKsin(j6);
IkReal x241=IKcos(j6);
IkReal x242=(((IkReal)(1.00000000000000))*(sj5));
IkReal x243=(((IkReal)(1.00000000000000))*(x241));
evalcond[0]=((new_r20)+(((sj5)*(x241))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x240)*(x242))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x240))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x243)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[4]=((((cj5)*(x240)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x243)))+(new_r10));
evalcond[6]=((x240)+(((cj5)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x242))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x242)))+((((IkReal)(-1.00000000000000))*(x243))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x244=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x245=(((IkReal)(1.00000000000000))*(cj5));
IkReal x246=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x244;
evalcond[2]=x244;
evalcond[3]=new_r02;
evalcond[4]=((sj5)+(new_r12));
evalcond[5]=new_r02;
evalcond[6]=new_r02;
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x246)))+((((IkReal)(-1.00000000000000))*(new_r12))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r12)*(x245)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x246))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x245)))+(((new_r10)*(sj5))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x245)))+(((new_r11)*(sj5))));
evalcond[11]=(((IkReal)(1.00000000000000))+(((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x245))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r01) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r00)+IKsqr(new_r01)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r00, new_r01);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x247=IKsin(j6);
IkReal x248=IKcos(j6);
IkReal x249=(((IkReal)(1.00000000000000))*(sj5));
IkReal x250=(((IkReal)(1.00000000000000))*(new_r11));
IkReal x251=(((IkReal)(1.00000000000000))*(new_r10));
IkReal x252=(((IkReal)(1.00000000000000))*(x248));
evalcond[0]=((new_r20)+(((sj5)*(x248))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x247)*(x249)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x247)))+(new_r00));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x252)))+(new_r01));
evalcond[4]=((((cj5)*(x247)))+((((IkReal)(-1.00000000000000))*(x250))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x252)))+((((IkReal)(-1.00000000000000))*(x251))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj5)*(x250)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x249)))+(x247));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj5)*(x251)))+((((IkReal)(-1.00000000000000))*(x252)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x249))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x253=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x254=(((IkReal)(1.00000000000000))*(cj5));
IkReal x255=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=x253;
evalcond[2]=x253;
evalcond[3]=new_r02;
evalcond[4]=((sj5)+(new_r12));
evalcond[5]=new_r02;
evalcond[6]=new_r02;
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x255)))+((((IkReal)(-1.00000000000000))*(new_r12))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r12)*(x254)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x255))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x254)))+(((new_r10)*(sj5))));
evalcond[10]=((((new_r11)*(sj5)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x254))));
evalcond[11]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x254)))+(((new_r12)*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r01) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r00)+IKsqr(new_r01)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r00, new_r01);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x256=IKsin(j6);
IkReal x257=IKcos(j6);
IkReal x258=(((IkReal)(1.00000000000000))*(sj5));
IkReal x259=(((IkReal)(1.00000000000000))*(new_r11));
IkReal x260=(((IkReal)(1.00000000000000))*(new_r10));
IkReal x261=(((IkReal)(1.00000000000000))*(x257));
evalcond[0]=((new_r20)+(((sj5)*(x257))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x256)*(x258))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x256)))+(new_r00));
evalcond[3]=((new_r01)+((((IkReal)(-1.00000000000000))*(x261))));
evalcond[4]=((((cj5)*(x256)))+((((IkReal)(-1.00000000000000))*(x259))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x260)))+((((IkReal)(-1.00000000000000))*(cj5)*(x261))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj5)*(x259)))+(x256)+((((IkReal)(-1.00000000000000))*(new_r21)*(x258))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x258)))+((((IkReal)(-1.00000000000000))*(cj5)*(x260)))+((((IkReal)(-1.00000000000000))*(x261))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x262=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=x262;
evalcond[4]=new_r12;
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=x262;
evalcond[8]=new_r01;
evalcond[9]=new_r01;
evalcond[10]=new_r00;
evalcond[11]=new_r00;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[15]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x263=IKcos(j6);
IkReal x264=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x263));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x264))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x264)))+(new_r10));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x263)))+(new_r11));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[4]=new_r12;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[7]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[8]=new_r01;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[10]=new_r00;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x265=IKcos(j6);
IkReal x266=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x265));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x266))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x266)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r11)))+((((IkReal)(-1.00000000000000))*(x265))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x267=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=x267;
evalcond[4]=new_r12;
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=x267;
evalcond[8]=new_r01;
evalcond[9]=new_r01;
evalcond[10]=new_r00;
evalcond[11]=new_r00;
evalcond[12]=new_r22;
evalcond[13]=new_r00;
evalcond[14]=new_r01;
evalcond[15]=x267;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x268=IKsin(j6);
IkReal x269=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x269))));
evalcond[1]=((new_r21)+(x268));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x268)))+(new_r10));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x269)))+(new_r11));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[4]=new_r12;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[7]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[8]=new_r01;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[10]=new_r00;
evalcond[11]=new_r22;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x270=IKsin(j6);
IkReal x271=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x271))));
evalcond[1]=((new_r21)+(x270));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x270)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r11)))+((((IkReal)(-1.00000000000000))*(x271))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x272=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x272;
evalcond[2]=x272;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=new_r12;
evalcond[10]=new_r12;
evalcond[11]=new_r02;
evalcond[12]=new_r02;
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r01))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r01)))+IKsqr(new_r11)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r01)), new_r11);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x273=IKsin(j6);
IkReal x274=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x273)))+(new_r10));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x274)))+(new_r11));
evalcond[2]=((x273)+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x274)))+(new_r00));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x275=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x275;
evalcond[2]=x275;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[13]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r01) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r01)+IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r01, (((IkReal)(-1.00000000000000))*(new_r11)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x276=IKsin(j6);
IkReal x277=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x276)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r11)))+((((IkReal)(-1.00000000000000))*(x277))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r01)))+(x276));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x277))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x278=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959)))))));
evalcond[1]=x278;
evalcond[2]=x278;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=new_r12;
evalcond[10]=new_r12;
evalcond[11]=new_r02;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x278;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r00))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r10)+IKsqr((((IkReal)(-1.00000000000000))*(new_r00)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r10, (((IkReal)(-1.00000000000000))*(new_r00)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x279=IKcos(j6);
IkReal x280=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r10)+((((IkReal)(-1.00000000000000))*(x280))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x279)))+(new_r11));
evalcond[2]=((new_r01)+((((IkReal)(-1.00000000000000))*(x280))));
evalcond[3]=((x279)+(new_r00));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x281=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959)))))));
evalcond[1]=x281;
evalcond[2]=x281;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[11]=new_r20;
evalcond[12]=new_r21;
evalcond[13]=x281;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r10))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r10)))+IKsqr(new_r00)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r10)), new_r00);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x282=IKcos(j6);
IkReal x283=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x283)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r11)))+((((IkReal)(-1.00000000000000))*(x282))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x283))));
evalcond[3]=((x282)+((((IkReal)(-1.00000000000000))*(new_r00))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x284=((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30);
if( IKabs(((x284)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(x284))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x284)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj5)))))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(x284)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(((x284)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj5)))))), (((IkReal)(-1.00000000000000))*(new_r20)*(x284)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[12];
IkReal x285=IKsin(j6);
IkReal x286=IKcos(j6);
IkReal x287=(((IkReal)(1.00000000000000))*(sj5));
IkReal x288=(((IkReal)(1.00000000000000))*(sj4));
IkReal x289=((cj5)*(sj4));
IkReal x290=((cj4)*(new_r01));
IkReal x291=((cj4)*(new_r00));
IkReal x292=(((IkReal)(1.00000000000000))*(x286));
IkReal x293=((cj5)*(x285));
IkReal x294=(((IkReal)(1.00000000000000))*(x285));
evalcond[0]=((((sj5)*(x286)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x285)*(x287))));
evalcond[2]=((((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x288)))+((((IkReal)(-1.00000000000000))*(x294))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x292)))+(((cj4)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x288))));
evalcond[4]=((x290)+(x293)+(((new_r11)*(sj4))));
evalcond[5]=((((cj4)*(x293)))+(((sj4)*(x286)))+(new_r01));
evalcond[6]=((x291)+((((IkReal)(-1.00000000000000))*(cj5)*(x292)))+(((new_r10)*(sj4))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(x292)))+(((sj4)*(x285)))+(new_r00));
evalcond[8]=((((x285)*(x289)))+(new_r11)+((((IkReal)(-1.00000000000000))*(cj4)*(x292))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj5)*(x286)*(x288)))+((((IkReal)(-1.00000000000000))*(cj4)*(x294)))+(new_r10));
evalcond[10]=((x285)+((((IkReal)(-1.00000000000000))*(new_r21)*(x287)))+(((new_r11)*(x289)))+(((cj5)*(x290))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x287)))+((((IkReal)(-1.00000000000000))*(x292)))+(((new_r10)*(x289)))+(((cj5)*(x291))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x295=((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30);
if( IKabs(((x295)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(x295))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x295)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(sj5)))))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(x295)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(((x295)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(sj5)))))), (((IkReal)(-1.00000000000000))*(new_r20)*(x295)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[12];
IkReal x296=IKsin(j6);
IkReal x297=IKcos(j6);
IkReal x298=(((IkReal)(1.00000000000000))*(sj5));
IkReal x299=(((IkReal)(1.00000000000000))*(sj4));
IkReal x300=((cj5)*(sj4));
IkReal x301=((cj4)*(new_r01));
IkReal x302=((cj4)*(new_r00));
IkReal x303=(((IkReal)(1.00000000000000))*(x297));
IkReal x304=((cj5)*(x296));
IkReal x305=(((IkReal)(1.00000000000000))*(x296));
evalcond[0]=((((sj5)*(x297)))+(new_r20));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x296)*(x298)))+(new_r21));
evalcond[2]=((((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x299)))+((((IkReal)(-1.00000000000000))*(x305))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x299)))+(((cj4)*(new_r11)))+((((IkReal)(-1.00000000000000))*(x303))));
evalcond[4]=((x304)+(x301)+(((new_r11)*(sj4))));
evalcond[5]=((((sj4)*(x297)))+(new_r01)+(((cj4)*(x304))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj5)*(x303)))+(x302)+(((new_r10)*(sj4))));
evalcond[7]=((((sj4)*(x296)))+((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(x303)))+(new_r00));
evalcond[8]=((((x296)*(x300)))+((((IkReal)(-1.00000000000000))*(cj4)*(x303)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj5)*(x297)*(x299)))+((((IkReal)(-1.00000000000000))*(cj4)*(x305)))+(new_r10));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x298)))+(x296)+(((cj5)*(x301)))+(((new_r11)*(x300))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x298)))+(((new_r10)*(x300)))+((((IkReal)(-1.00000000000000))*(x303)))+(((cj5)*(x302))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst59)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst59)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst59)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst59)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[12];
IkReal x306=IKsin(j6);
IkReal x307=IKcos(j6);
IkReal x308=(((IkReal)(1.00000000000000))*(sj5));
IkReal x309=(((IkReal)(1.00000000000000))*(sj4));
IkReal x310=((cj5)*(sj4));
IkReal x311=((cj4)*(new_r01));
IkReal x312=((cj4)*(new_r00));
IkReal x313=(((IkReal)(1.00000000000000))*(x307));
IkReal x314=((cj5)*(x306));
IkReal x315=(((IkReal)(1.00000000000000))*(x306));
evalcond[0]=((new_r20)+(((sj5)*(x307))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x306)*(x308))));
evalcond[2]=((((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x309)))+((((IkReal)(-1.00000000000000))*(x315))));
evalcond[3]=((((cj4)*(new_r11)))+((((IkReal)(-1.00000000000000))*(x313)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x309))));
evalcond[4]=((((new_r11)*(sj4)))+(x314)+(x311));
evalcond[5]=((((cj4)*(x314)))+(((sj4)*(x307)))+(new_r01));
evalcond[6]=((x312)+(((new_r10)*(sj4)))+((((IkReal)(-1.00000000000000))*(cj5)*(x313))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(x313)))+(new_r00)+(((sj4)*(x306))));
evalcond[8]=((((x306)*(x310)))+((((IkReal)(-1.00000000000000))*(cj4)*(x313)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj4)*(x315)))+((((IkReal)(-1.00000000000000))*(cj5)*(x307)*(x309)))+(new_r10));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x308)))+(x306)+(((cj5)*(x311)))+(((new_r11)*(x310))));
evalcond[11]=((((new_r10)*(x310)))+(((cj5)*(x312)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x308)))+((((IkReal)(-1.00000000000000))*(x313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst50)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(new_r12)), ((gconst50)*(new_r02)));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
int ij4;
for(ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x316=IKcos(j4);
IkReal x317=IKsin(j4);
IkReal x318=(((IkReal)(1.00000000000000))*(sj5));
IkReal x319=(((IkReal)(1.00000000000000))*(cj5));
IkReal x320=((new_r12)*(x317));
IkReal x321=((new_r02)*(x316));
evalcond[0]=((new_r02)+((((IkReal)(-1.00000000000000))*(x316)*(x318))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x317)*(x318)))+(new_r12));
evalcond[2]=((((new_r12)*(x316)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x317))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x318)))+(x320)+(x321));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(new_r22)*(x318)))+(((cj5)*(x320)))+(((cj5)*(x321))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x319)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x317)*(x318)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x316)*(x318))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x319)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x316)*(x318)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x317)*(x318))));
evalcond[7]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x319)))+((((IkReal)(-1.00000000000000))*(x318)*(x320)))+((((IkReal)(-1.00000000000000))*(x318)*(x321))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[3];
dummyeval[0]=cj4;
dummyeval[1]=cj5;
dummyeval[2]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  || IKabs(dummyeval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x322=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x323=((new_r12)+((((IkReal)(-1.00000000000000))*(sj5))));
IkReal x324=(((IkReal)(1.00000000000000))*(cj5));
IkReal x325=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x322;
evalcond[2]=x322;
evalcond[3]=new_r02;
evalcond[4]=x323;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x323;
evalcond[7]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x325))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x324)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x325))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r11)*(x325)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x324))));
evalcond[10]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12)*(x325)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x324))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj5;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x326=(((IkReal)(-1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x326;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x326;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r10));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r11));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x327=IKcos(j6);
IkReal x328=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x327));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x328))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x328))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x327)))+((((IkReal)(-1.00000000000000))*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x329=(((IkReal)(1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x329;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x329;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=new_r22;
evalcond[12]=new_r10;
evalcond[13]=new_r11;
evalcond[14]=x329;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x330=IKsin(j6);
IkReal x331=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x331))));
evalcond[1]=((new_r21)+(x330));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x330))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x331)))+((((IkReal)(-1.00000000000000))*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x332=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=x332;
evalcond[2]=x332;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=new_r12;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x333=IKsin(j6);
IkReal x334=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x333))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x334)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[2]=((x333)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x334)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x335=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959))));
evalcond[1]=x335;
evalcond[2]=x335;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[12]=new_r20;
evalcond[13]=new_r21;
evalcond[14]=x335;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r10))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r10)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r10)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x336=IKcos(j6);
IkReal x337=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x337)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x336)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x337)))+(new_r11));
evalcond[3]=((x336)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))), (((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x338=IKsin(j6);
IkReal x339=IKcos(j6);
IkReal x340=(((IkReal)(1.00000000000000))*(sj5));
IkReal x341=(((IkReal)(1.00000000000000))*(x339));
evalcond[0]=((new_r20)+(((sj5)*(x339))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x338)*(x340)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x338)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x341))));
evalcond[4]=((((cj5)*(x338)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x341)))+(new_r10));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x340)))+(x338)+(((cj5)*(new_r11))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x340)))+((((IkReal)(-1.00000000000000))*(x341))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst60)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst60)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst60)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst60)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x342=IKsin(j6);
IkReal x343=IKcos(j6);
IkReal x344=(((IkReal)(1.00000000000000))*(sj5));
IkReal x345=(((IkReal)(1.00000000000000))*(x343));
evalcond[0]=((new_r20)+(((sj5)*(x343))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x342)*(x344))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x342)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x345)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[4]=((((cj5)*(x342)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x345)))+(new_r10));
evalcond[6]=((x342)+((((IkReal)(-1.00000000000000))*(new_r21)*(x344)))+(((cj5)*(new_r11))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x344)))+((((IkReal)(-1.00000000000000))*(x345))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x346=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x347=((new_r12)+((((IkReal)(-1.00000000000000))*(sj5))));
IkReal x348=(((IkReal)(1.00000000000000))*(cj5));
IkReal x349=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=x346;
evalcond[2]=x346;
evalcond[3]=new_r02;
evalcond[4]=x347;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x347;
evalcond[7]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x349))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x348)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x349))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x348)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x349))));
evalcond[10]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22)*(x348)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x349))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj5;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x350=(((IkReal)(-1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x350;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x350;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r10));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r11));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x351=IKcos(j6);
IkReal x352=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x351));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x352))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x352))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x351)))+((((IkReal)(-1.00000000000000))*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x353=(((IkReal)(1.00000000000000))+(new_r12));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r02;
evalcond[4]=x353;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[6]=x353;
evalcond[7]=new_r11;
evalcond[8]=new_r10;
evalcond[9]=new_r11;
evalcond[10]=new_r10;
evalcond[11]=new_r22;
evalcond[12]=new_r10;
evalcond[13]=new_r11;
evalcond[14]=x353;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x354=IKsin(j6);
IkReal x355=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x355)))+(new_r20));
evalcond[1]=((new_r21)+(x354));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x354))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x355)))+((((IkReal)(-1.00000000000000))*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x356=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959))));
evalcond[1]=x356;
evalcond[2]=x356;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=new_r12;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[14]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x357=IKsin(j6);
IkReal x358=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x357)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x358))));
evalcond[2]=((x357)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x358)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x359=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959))));
evalcond[1]=x359;
evalcond[2]=x359;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[10]=new_r12;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[12]=new_r20;
evalcond[13]=new_r21;
evalcond[14]=x359;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r10))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r10)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r10)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x360=IKcos(j6);
IkReal x361=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x361)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x360))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x361)))+(new_r11));
evalcond[3]=((x360)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))), (((IkReal)(-1.00000000000000))*(new_r20)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x362=IKsin(j6);
IkReal x363=IKcos(j6);
IkReal x364=(((IkReal)(1.00000000000000))*(sj5));
IkReal x365=(((IkReal)(1.00000000000000))*(x363));
evalcond[0]=((new_r20)+(((sj5)*(x363))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x362)*(x364)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r00)))+((((IkReal)(-1.00000000000000))*(x362))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)))+((((IkReal)(-1.00000000000000))*(x365))));
evalcond[4]=((((cj5)*(x362)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x365)))+(new_r10));
evalcond[6]=((x362)+((((IkReal)(-1.00000000000000))*(new_r21)*(x364)))+(((cj5)*(new_r11))));
evalcond[7]=((((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x364)))+((((IkReal)(-1.00000000000000))*(x365))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst61)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst61)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst61)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst61)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x366=IKsin(j6);
IkReal x367=IKcos(j6);
IkReal x368=(((IkReal)(1.00000000000000))*(sj5));
IkReal x369=(((IkReal)(1.00000000000000))*(x367));
evalcond[0]=((new_r20)+(((sj5)*(x367))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x366)*(x368))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x366)))+((((IkReal)(-1.00000000000000))*(new_r00))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x369)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[4]=((((cj5)*(x366)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x369)))+(new_r10));
evalcond[6]=((x366)+((((IkReal)(-1.00000000000000))*(new_r21)*(x368)))+(((cj5)*(new_r11))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x369)))+(((cj5)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x368))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x370=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x371=(((IkReal)(1.00000000000000))*(cj5));
IkReal x372=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x370;
evalcond[2]=x370;
evalcond[3]=new_r02;
evalcond[4]=((sj5)+(new_r12));
evalcond[5]=new_r02;
evalcond[6]=new_r02;
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x372)))+((((IkReal)(-1.00000000000000))*(new_r12))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r12)*(x371)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x372))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x371)))+(((new_r10)*(sj5))));
evalcond[10]=((((new_r11)*(sj5)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x371))));
evalcond[11]=(((IkReal)(1.00000000000000))+(((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x371))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r01) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r00)+IKsqr(new_r01)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r00, new_r01);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x373=IKsin(j6);
IkReal x374=IKcos(j6);
IkReal x375=(((IkReal)(1.00000000000000))*(sj5));
IkReal x376=(((IkReal)(1.00000000000000))*(new_r11));
IkReal x377=(((IkReal)(1.00000000000000))*(new_r10));
IkReal x378=(((IkReal)(1.00000000000000))*(x374));
evalcond[0]=((((sj5)*(x374)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x373)*(x375))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x373)))+(new_r00));
evalcond[3]=((new_r01)+((((IkReal)(-1.00000000000000))*(x378))));
evalcond[4]=((((cj5)*(x373)))+((((IkReal)(-1.00000000000000))*(x376))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj5)*(x378)))+((((IkReal)(-1.00000000000000))*(x377))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x375)))+(x373)+((((IkReal)(-1.00000000000000))*(cj5)*(x376))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x375)))+((((IkReal)(-1.00000000000000))*(cj5)*(x377)))+((((IkReal)(-1.00000000000000))*(x378))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x379=(((((IkReal)(-1.00000000000000))*(cj5)))+(new_r22));
IkReal x380=(((IkReal)(1.00000000000000))*(cj5));
IkReal x381=(((IkReal)(1.00000000000000))*(sj5));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=x379;
evalcond[2]=x379;
evalcond[3]=new_r02;
evalcond[4]=((sj5)+(new_r12));
evalcond[5]=new_r02;
evalcond[6]=new_r02;
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x381)))+((((IkReal)(-1.00000000000000))*(new_r12))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r22)*(x381)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x380))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x380)))+(((new_r10)*(sj5))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(new_r21)*(x380)))+(((new_r11)*(sj5))));
evalcond[11]=(((IkReal)(1.00000000000000))+(((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(new_r22)*(x380))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r01) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r00)+IKsqr(new_r01)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r00, new_r01);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[8];
IkReal x382=IKsin(j6);
IkReal x383=IKcos(j6);
IkReal x384=(((IkReal)(1.00000000000000))*(sj5));
IkReal x385=(((IkReal)(1.00000000000000))*(new_r11));
IkReal x386=(((IkReal)(1.00000000000000))*(new_r10));
IkReal x387=(((IkReal)(1.00000000000000))*(x383));
evalcond[0]=((new_r20)+(((sj5)*(x383))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x382)*(x384))));
evalcond[2]=((new_r00)+((((IkReal)(-1.00000000000000))*(x382))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x387)))+(new_r01));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x385)))+(((cj5)*(x382))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x386)))+((((IkReal)(-1.00000000000000))*(cj5)*(x387))));
evalcond[6]=((x382)+((((IkReal)(-1.00000000000000))*(new_r21)*(x384)))+((((IkReal)(-1.00000000000000))*(cj5)*(x385))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r20)*(x384)))+((((IkReal)(-1.00000000000000))*(x387)))+((((IkReal)(-1.00000000000000))*(cj5)*(x386))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x388=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=x388;
evalcond[4]=new_r12;
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=x388;
evalcond[8]=new_r01;
evalcond[9]=new_r01;
evalcond[10]=new_r00;
evalcond[11]=new_r00;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[15]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x389=IKcos(j6);
IkReal x390=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((x389)+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x390))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x390)))+(new_r10));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x389)))+(new_r11));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j5)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[4]=new_r12;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[7]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[8]=new_r01;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[10]=new_r00;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r21)+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r21, (((IkReal)(-1.00000000000000))*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x391=IKcos(j6);
IkReal x392=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=((new_r20)+(x391));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x392)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x392)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r11)))+((((IkReal)(-1.00000000000000))*(x391))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x393=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=x393;
evalcond[4]=new_r12;
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=x393;
evalcond[8]=new_r01;
evalcond[9]=new_r01;
evalcond[10]=new_r00;
evalcond[11]=new_r00;
evalcond[12]=new_r22;
evalcond[13]=new_r00;
evalcond[14]=new_r01;
evalcond[15]=x393;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x394=IKsin(j6);
IkReal x395=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x395))));
evalcond[1]=((new_r21)+(x394));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x394)))+(new_r10));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x395)))+(new_r11));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j5)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[4]=new_r12;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[7]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[8]=new_r01;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[10]=new_r00;
evalcond[11]=new_r22;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))+IKsqr(new_r20)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r21)), new_r20);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x396=IKsin(j6);
IkReal x397=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x397)))+(new_r20));
evalcond[1]=((new_r21)+(x396));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x396)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x397)))+((((IkReal)(-1.00000000000000))*(new_r11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x398=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x398;
evalcond[2]=x398;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=new_r12;
evalcond[10]=new_r12;
evalcond[11]=new_r02;
evalcond[12]=new_r02;
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r01))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r01)))+IKsqr(new_r11)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r01)), new_r11);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x399=IKsin(j6);
IkReal x400=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x399)))+(new_r10));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x400)))+(new_r11));
evalcond[2]=((new_r01)+(x399));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x400)))+(new_r00));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x401=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j5)), (IkReal)(6.28318530717959)))))));
evalcond[1]=x401;
evalcond[2]=x401;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[13]=(((IkReal)(1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r01) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r01)+IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r01, (((IkReal)(-1.00000000000000))*(new_r11)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x402=IKsin(j6);
IkReal x403=(((IkReal)(1.00000000000000))*(IKcos(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x402)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x403)))+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r01)))+(x402));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x403)))+((((IkReal)(-1.00000000000000))*(new_r00))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x404=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959)))))));
evalcond[1]=x404;
evalcond[2]=x404;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=new_r12;
evalcond[10]=new_r12;
evalcond[11]=new_r02;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x404;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r00))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r10)+IKsqr((((IkReal)(-1.00000000000000))*(new_r00)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(new_r10, (((IkReal)(-1.00000000000000))*(new_r00)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x405=IKcos(j6);
IkReal x406=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x406)))+(new_r10));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x405)))+(new_r11));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x406)))+(new_r01));
evalcond[3]=((x405)+(new_r00));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x407=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j5, (IkReal)(6.28318530717959)))))));
evalcond[1]=x407;
evalcond[2]=x407;
evalcond[3]=new_r20;
evalcond[4]=new_r20;
evalcond[5]=new_r02;
evalcond[6]=new_r12;
evalcond[7]=new_r21;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r02));
evalcond[11]=new_r20;
evalcond[12]=new_r21;
evalcond[13]=x407;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  )
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r10))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r10)))+IKsqr(new_r00)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r10)), new_r00);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[4];
IkReal x408=IKcos(j6);
IkReal x409=(((IkReal)(1.00000000000000))*(IKsin(j6)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x409)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(new_r11)))+((((IkReal)(-1.00000000000000))*(x408))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x409)))+((((IkReal)(-1.00000000000000))*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r00)))+(x408));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x410=((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30);
if( IKabs(((x410)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(x410))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x410)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj5)))))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(x410)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(((x410)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj5)))))), (((IkReal)(-1.00000000000000))*(new_r20)*(x410)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[12];
IkReal x411=IKsin(j6);
IkReal x412=IKcos(j6);
IkReal x413=(((IkReal)(1.00000000000000))*(sj5));
IkReal x414=(((IkReal)(1.00000000000000))*(sj4));
IkReal x415=((cj5)*(sj4));
IkReal x416=((cj4)*(new_r01));
IkReal x417=((cj4)*(new_r00));
IkReal x418=(((IkReal)(1.00000000000000))*(x412));
IkReal x419=((cj5)*(x411));
IkReal x420=(((IkReal)(1.00000000000000))*(x411));
evalcond[0]=((new_r20)+(((sj5)*(x412))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x411)*(x413))));
evalcond[2]=((((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x414)))+((((IkReal)(-1.00000000000000))*(x420))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x418)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x414)))+(((cj4)*(new_r11))));
evalcond[4]=((((new_r11)*(sj4)))+(x416)+(x419));
evalcond[5]=((((cj4)*(x419)))+(((sj4)*(x412)))+(new_r01));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj5)*(x418)))+(((new_r10)*(sj4)))+(x417));
evalcond[7]=((((sj4)*(x411)))+((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(x418)))+(new_r00));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj4)*(x418)))+(((x411)*(x415)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj4)*(x420)))+(new_r10)+((((IkReal)(-1.00000000000000))*(cj5)*(x412)*(x414))));
evalcond[10]=((((cj5)*(x416)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x413)))+(((new_r11)*(x415)))+(x411));
evalcond[11]=((((new_r10)*(x415)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x413)))+((((IkReal)(-1.00000000000000))*(x418)))+(((cj5)*(x417))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x421=((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30);
if( IKabs(((x421)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r20)*(x421))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x421)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(sj5)))))))+IKsqr((((IkReal)(-1.00000000000000))*(new_r20)*(x421)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(((x421)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(sj5)))))), (((IkReal)(-1.00000000000000))*(new_r20)*(x421)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[12];
IkReal x422=IKsin(j6);
IkReal x423=IKcos(j6);
IkReal x424=(((IkReal)(1.00000000000000))*(sj5));
IkReal x425=(((IkReal)(1.00000000000000))*(sj4));
IkReal x426=((cj5)*(sj4));
IkReal x427=((cj4)*(new_r01));
IkReal x428=((cj4)*(new_r00));
IkReal x429=(((IkReal)(1.00000000000000))*(x423));
IkReal x430=((cj5)*(x422));
IkReal x431=(((IkReal)(1.00000000000000))*(x422));
evalcond[0]=((new_r20)+(((sj5)*(x423))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x422)*(x424)))+(new_r21));
evalcond[2]=((((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x431)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x425))));
evalcond[3]=((((cj4)*(new_r11)))+((((IkReal)(-1.00000000000000))*(x429)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x425))));
evalcond[4]=((x430)+(x427)+(((new_r11)*(sj4))));
evalcond[5]=((((sj4)*(x423)))+(new_r01)+(((cj4)*(x430))));
evalcond[6]=((x428)+((((IkReal)(-1.00000000000000))*(cj5)*(x429)))+(((new_r10)*(sj4))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(x429)))+(((sj4)*(x422)))+(new_r00));
evalcond[8]=((((x422)*(x426)))+((((IkReal)(-1.00000000000000))*(cj4)*(x429)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj5)*(x423)*(x425)))+((((IkReal)(-1.00000000000000))*(cj4)*(x431)))+(new_r10));
evalcond[10]=((x422)+(((new_r11)*(x426)))+(((cj5)*(x427)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x424))));
evalcond[11]=((((new_r10)*(x426)))+(((cj5)*(x428)))+((((IkReal)(-1.00000000000000))*(x429)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x424))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((gconst59)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst59)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((gconst59)*(new_r21)), (((IkReal)(-1.00000000000000))*(gconst59)*(new_r20)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
int ij6;
for(ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
int iij6;
for(iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[12];
IkReal x432=IKsin(j6);
IkReal x433=IKcos(j6);
IkReal x434=(((IkReal)(1.00000000000000))*(sj5));
IkReal x435=(((IkReal)(1.00000000000000))*(sj4));
IkReal x436=((cj5)*(sj4));
IkReal x437=((cj4)*(new_r01));
IkReal x438=((cj4)*(new_r00));
IkReal x439=(((IkReal)(1.00000000000000))*(x433));
IkReal x440=((cj5)*(x432));
IkReal x441=(((IkReal)(1.00000000000000))*(x432));
evalcond[0]=((new_r20)+(((sj5)*(x433))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x432)*(x434))));
evalcond[2]=((((cj4)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x435)))+((((IkReal)(-1.00000000000000))*(x441))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x435)))+(((cj4)*(new_r11)))+((((IkReal)(-1.00000000000000))*(x439))));
evalcond[4]=((x437)+(x440)+(((new_r11)*(sj4))));
evalcond[5]=((((sj4)*(x433)))+(new_r01)+(((cj4)*(x440))));
evalcond[6]=((x438)+((((IkReal)(-1.00000000000000))*(cj5)*(x439)))+(((new_r10)*(sj4))));
evalcond[7]=((((sj4)*(x432)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj4)*(cj5)*(x439))));
evalcond[8]=((((x432)*(x436)))+((((IkReal)(-1.00000000000000))*(cj4)*(x439)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj4)*(x441)))+((((IkReal)(-1.00000000000000))*(cj5)*(x433)*(x435)))+(new_r10));
evalcond[10]=((((new_r11)*(x436)))+(x432)+(((cj5)*(x437)))+((((IkReal)(-1.00000000000000))*(new_r21)*(x434))));
evalcond[11]=((((new_r10)*(x436)))+((((IkReal)(-1.00000000000000))*(new_r20)*(x434)))+(((cj5)*(x438)))+((((IkReal)(-1.00000000000000))*(x439))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}
}
}
}
}/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[0]);
x4=IKsin(j[2]);
x5=IKcos(j[4]);
x6=IKcos(j[3]);
x7=IKsin(j[1]);
x8=IKsin(j[3]);
x9=IKsin(j[4]);
x10=IKsin(j[6]);
x11=IKcos(j[5]);
x12=IKsin(j[5]);
x13=IKcos(j[6]);
x14=(((IkReal)(1.00000000000000))*(x6));
x15=(((IkReal)(1.00000000000000))*(x8));
x16=(((IkReal)(1.00000000000000))*(x3));
x17=(((IkReal)(0.220000000000000))*(x8));
x18=(((IkReal)(0.0450000000000000))*(x8));
x19=(((IkReal)(0.220000000000000))*(x6));
x20=(((IkReal)(0.300000000000000))*(x6));
x21=(((IkReal)(0.220000000000000))*(x5));
x22=(((IkReal)(1.00000000000000))*(x12));
x23=(((IkReal)(1.00000000000000))*(x11));
x24=(((IkReal)(1.00000000000000))*(x1));
x25=(((IkReal)(0.220000000000000))*(x9));
x26=((x2)*(x7));
x27=((x3)*(x7));
x28=((x0)*(x4));
x29=((x0)*(x7));
x30=((x0)*(x2));
x31=((x3)*(x4));
x32=((x16)*(x4));
x33=(((IkReal)(0.0450000000000000))*(x31));
x34=(((IkReal)(0.0450000000000000))*(x28));
x35=((x1)*(x14));
x36=((x1)*(x2)*(x3));
x37=((x4)*(x7)*(x9));
x38=((x15)*(x29));
x39=((x14)*(x29));
x40=(((IkReal)(0.0450000000000000))*(x1)*(x30));
x41=((x15)*(x27));
x42=((x14)*(x27));
x43=(((IkReal)(0.0450000000000000))*(x36));
x44=((((x1)*(x30)))+((((IkReal)(-1.00000000000000))*(x32))));
x45=(((((IkReal)(-1.00000000000000))*(x1)*(x32)))+(x30));
x46=((x28)+(x36));
x47=((((x26)*(x8)))+((((IkReal)(-1.00000000000000))*(x35))));
x48=((x32)+((((IkReal)(-1.00000000000000))*(x24)*(x30))));
x49=(((((IkReal)(-1.00000000000000))*(x24)*(x28)))+((((IkReal)(-1.00000000000000))*(x16)*(x2))));
x50=((x44)*(x6));
x51=(((((IkReal)(-1.00000000000000))*(x28)))+((((IkReal)(-1.00000000000000))*(x1)*(x16)*(x2))));
x52=((((x14)*(x26)))+(((x1)*(x15))));
x53=(((IkReal)(-1.00000000000000))*(x52));
x54=((x43)+(x34));
x55=((x12)*(x47));
x56=((x45)*(x9));
x57=((x49)*(x9));
x58=((x49)*(x5));
x59=((x50)+((((IkReal)(-1.00000000000000))*(x38))));
x60=((((x46)*(x6)))+((((IkReal)(-1.00000000000000))*(x41))));
x61=(((((IkReal)(-1.00000000000000))*(x39)))+(((x48)*(x8))));
x62=((((x51)*(x8)))+((((IkReal)(-1.00000000000000))*(x42))));
x63=((x37)+(((x5)*(x53))));
x64=((((x4)*(x5)*(x7)))+(((x52)*(x9))));
x65=((x12)*(x61));
x66=((x12)*(x62));
x67=((x56)+(((x5)*(x60))));
x68=((((x45)*(x5)))+(((x9)*(((x41)+((((IkReal)(-1.00000000000000))*(x14)*(x46))))))));
x69=((x57)+(((x5)*(x59))));
x70=((x11)*(x67));
eerot[0]=((((x13)*(((x65)+(((x11)*(((x57)+(((x5)*(((x50)+((((IkReal)(-1.00000000000000))*(x29)*(x8)))))))))))))))+(((x10)*(((x58)+(((x9)*((((((IkReal)(-1.00000000000000))*(x14)*(x44)))+(x38))))))))));
eerot[1]=((((x13)*(((x58)+(((x9)*((((((IkReal)(-1.00000000000000))*(x50)))+(x38)))))))))+(((x10)*((((((IkReal)(-1.00000000000000))*(x22)*(x61)))+((((IkReal)(-1.00000000000000))*(x23)*(x69))))))));
eerot[2]=((((x11)*((((((IkReal)(-1.00000000000000))*(x15)*(x48)))+(x39)))))+(((x12)*(x69))));
eetrans[0]=(((IkReal)(0.220000000000000))+((((IkReal)(0.550000000000000))*(x29)))+(((x12)*(((((x25)*(x49)))+(((x21)*(x59)))))))+(((x18)*(x29)))+(((x8)*((((((IkReal)(-0.300000000000000))*(x31)))+((((IkReal)(0.300000000000000))*(x1)*(x30)))))))+(x40)+(((x20)*(x29)))+((((IkReal)(-1.00000000000000))*(x33)))+(((x6)*(((x33)+((((IkReal)(-1.00000000000000))*(x40)))))))+(((x11)*(((((x19)*(x29)))+((((IkReal)(-1.00000000000000))*(x17)*(x48))))))));
eerot[3]=((((x13)*(((x66)+(x70)))))+(((x10)*(x68))));
eerot[4]=((((x10)*((((((IkReal)(-1.00000000000000))*(x23)*(x67)))+((((IkReal)(-1.00000000000000))*(x22)*(x62)))))))+(((x13)*(x68))));
eerot[5]=((((x12)*(x67)))+(((x11)*((((((IkReal)(-1.00000000000000))*(x15)*(x51)))+(x42))))));
eetrans[1]=(((IkReal)(0.140000000000000))+(x54)+(((x8)*((((((IkReal)(0.300000000000000))*(x28)))+((((IkReal)(0.300000000000000))*(x36)))))))+((((IkReal)(0.550000000000000))*(x27)))+(((x18)*(x27)))+((((IkReal)(-1.00000000000000))*(x54)*(x6)))+(((x12)*(((((x25)*(x45)))+(((x21)*(x60)))))))+(((x20)*(x27)))+(((x11)*(((((x19)*(x27)))+((((IkReal)(-1.00000000000000))*(x17)*(x51))))))));
eerot[6]=((((x13)*(((x55)+(((x11)*(x63)))))))+(((x10)*(x64))));
eerot[7]=((((x10)*((((((IkReal)(-1.00000000000000))*(x22)*(x47)))+((((IkReal)(-1.00000000000000))*(x23)*(x63)))))))+(((x13)*(x64))));
eerot[8]=((((x11)*(((x35)+((((IkReal)(-1.00000000000000))*(x15)*(x26)))))))+(((x12)*(x63))));
IkReal x71=(((IkReal)(0.0450000000000000))*(x26));
eetrans[2]=(((IkReal)(0.346000000000000))+(((x1)*(x20)))+(((x12)*(((((x25)*(x4)*(x7)))+(((x21)*(x53)))))))+((((IkReal)(-0.300000000000000))*(x26)*(x8)))+(((x6)*(x71)))+(((x1)*(x18)))+(((x11)*((((((IkReal)(-1.00000000000000))*(x17)*(x26)))+(((x1)*(x19)))))))+((((IkReal)(-1.00000000000000))*(x71)))+((((IkReal)(0.550000000000000))*(x1))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int GetNumJoints() { return IKFAST_NUM_JOINTS; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

int ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionList * solutions) {
j0=NAN; _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=NAN; _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j3=NAN; _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=NAN; _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=NAN; _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=NAN; _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1;  _ij2[0] = -1; _ij2[1] = -1; _nj2 = 0; 
int dummyiter;
for(dummyiter = 0; dummyiter < 1; ++dummyiter) {
    IkSolutionList_Clear(solutions);
j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=r01;
new_r02=r02;
new_px=(((IkReal)(-0.220000000000000))+((((IkReal)(-0.220000000000000))*(r02)))+(px));
new_r10=r10;
new_r11=r11;
new_r12=r12;
new_py=(((IkReal)(-0.140000000000000))+((((IkReal)(-0.220000000000000))*(r12)))+(py));
new_r20=r20;
new_r21=r21;
new_r22=r22;
new_pz=(((IkReal)(-0.346000000000000))+((((IkReal)(-0.220000000000000))*(r22)))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=(((((IkReal)(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+((((IkReal)(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+((((IkReal)(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+((((IkReal)(-1.00000000000000))*(py)*(r21))));
rxp1_1=(((((IkReal)(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+((((IkReal)(-1.00000000000000))*(px)*(r11))));
rxp2_0=(((((IkReal)(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+((((IkReal)(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+((((IkReal)(-1.00000000000000))*(px)*(r12))));
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
if( ((((IkReal)(-1.18441410190393))+((((IkReal)(2.98679637348110))*(pp))))) < -1-IKFAST_SINCOS_THRESH || ((((IkReal)(-1.18441410190393))+((((IkReal)(2.98679637348110))*(pp))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x72=IKasin((((IkReal)(-1.18441410190393))+((((IkReal)(2.98679637348110))*(pp)))));
j3array[0]=(((IkReal)(-1.34027003705633))+((((IkReal)(1.00000000000000))*(x72))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=(((IkReal)(1.80132261653346))+((((IkReal)(-1.00000000000000))*(x72))));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
int ij3;
for(ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[1];
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x73=(cj2)*(cj2);
IkReal x74=(cj3)*(cj3);
IkReal x75=(sj3)*(sj3);
IkReal x76=(((IkReal)(13.3333333333333))*(sj3));
IkReal x77=((cj3)*(x73));
dummyeval[0]=(((IkReal)(149.382716049383))+((((IkReal)(24.4444444444444))*(sj3)))+((((IkReal)(44.4444444444444))*(x74)))+(((cj3)*(x76)))+((((IkReal)(-1.00000000000000))*(x76)*(x77)))+(((x73)*(x76)))+(x75)+(x73)+((((IkReal)(162.962962962963))*(cj3)))+((((IkReal)(44.4444444444444))*(x73)*(x75)))+((((IkReal)(-2.00000000000000))*(x77)))+(((x73)*(x74))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
IkReal x78=(((IkReal)(0.0450000000000000))*(cj2));
IkReal x79=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
IkReal x80=(((((IkReal)(0.300000000000000))*(cj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x78)))+(x78));
if( IKabs(x79) < IKFAST_ATAN2_MAGTHRESH && IKabs(x80) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x81=(((IkReal)(1.00000000000000))*(IKatan2(x79, x80)));
if( ((((x80)*(x80))+((x79)*(x79)))) < (IkReal)-0.00001 )
    continue;
if( (((pz)*(((IKabs(IKabs(IKsqrt((((x80)*(x80))+((x79)*(x79)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x80)*(x80))+((x79)*(x79))))))):(IkReal)1.0e30)))) < -1-IKFAST_SINCOS_THRESH || (((pz)*(((IKabs(IKabs(IKsqrt((((x80)*(x80))+((x79)*(x79)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x80)*(x80))+((x79)*(x79))))))):(IkReal)1.0e30)))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x82=IKasin(((pz)*(((IKabs(IKabs(IKsqrt((((x80)*(x80))+((x79)*(x79)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x80)*(x80))+((x79)*(x79))))))):(IkReal)1.0e30))));
j1array[0]=(((((IkReal)(-1.00000000000000))*(x82)))+((((IkReal)(-1.00000000000000))*(x81))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x81)))+(x82));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(((((sj1)*((py)*(py))))+(((sj1)*((px)*(px))))));
dummyeval[0]=((((sj1)*((py)*(py))))+(((sj1)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x83=(((IkReal)(1.00000000000000))*(cj2)*(sj1));
gconst1=IKsign((((((IkReal)(-1.00000000000000))*(x83)*((px)*(px))))+((((IkReal)(-1.00000000000000))*(x83)*((py)*(py))))));
IkReal x84=(((IkReal)(1.00000000000000))*(cj2)*(sj1));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x84)*((py)*(py))))+((((IkReal)(-1.00000000000000))*(x84)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-0.550000000000000))*(cj1)))+((((IkReal)(-0.300000000000000))*(cj1)*(cj3)))+(pz)+((((IkReal)(-0.0450000000000000))*(cj1)*(sj3))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((cj1)*((py)*(py))))+(((cj1)*((px)*(px))))));
dummyeval[0]=((((cj1)*((py)*(py))))+(((cj1)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((sj1)*((py)*(py))))+(((sj1)*((px)*(px))))));
dummyeval[0]=((((sj1)*((py)*(py))))+(((sj1)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x85=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x85;
evalcond[3]=x85;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((((IkReal)(9.00000000000000))*((px)*(px))))+((((IkReal)(9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x86=(((IkReal)(110.000000000000))*(pz));
IkReal x87=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst5)*(((((px)*(x86)))+((((IkReal)(-1.00000000000000))*(px)*(x87)))+((((IkReal)(-21.2500000000000))*(px))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*((((((IkReal)(21.2500000000000))*(py)))+(((py)*(x87)))+((((IkReal)(-1.00000000000000))*(py)*(x86))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((px)*(x86)))+((((IkReal)(-1.00000000000000))*(px)*(x87)))+((((IkReal)(-21.2500000000000))*(px)))))), ((gconst5)*((((((IkReal)(21.2500000000000))*(py)))+(((py)*(x87)))+((((IkReal)(-1.00000000000000))*(py)*(x86)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x88=IKsin(j0);
IkReal x89=IKcos(j0);
IkReal x90=((px)*(x88));
IkReal x91=((py)*(x89));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x91)))+(x90));
evalcond[1]=((((px)*(x89)))+(((py)*(x88))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x90)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(x91))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x442=(((IkReal)(0.0450000000000000))*(py));
IkReal x443=(((IkReal)(0.300000000000000))*(sj3));
IkReal x444=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst4)*(((((px)*(x443)))+(x444)+((((IkReal)(-1.00000000000000))*(cj3)*(x444))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj3)*(x442)))+((((IkReal)(-1.00000000000000))*(x442)))+((((IkReal)(-1.00000000000000))*(py)*(x443))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst4)*(((((px)*(x443)))+(x444)+((((IkReal)(-1.00000000000000))*(cj3)*(x444)))))), ((gconst4)*(((((cj3)*(x442)))+((((IkReal)(-1.00000000000000))*(x442)))+((((IkReal)(-1.00000000000000))*(py)*(x443)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x445=IKsin(j0);
IkReal x446=IKcos(j0);
IkReal x447=((px)*(x445));
IkReal x448=((py)*(x446));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x448)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x447));
evalcond[1]=((((py)*(x445)))+(((px)*(x446))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x448)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x447)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x449=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x449;
evalcond[3]=x449;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(9.00000000000000))*((px)*(px))))+((((IkReal)(9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x450=(((IkReal)(110.000000000000))*(pz));
IkReal x451=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(px)*(x451)))+((((IkReal)(-21.2500000000000))*(px)))+(((px)*(x450))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((py)*(x451)))+((((IkReal)(21.2500000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x450))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst7)*((((((IkReal)(-1.00000000000000))*(px)*(x451)))+((((IkReal)(-21.2500000000000))*(px)))+(((px)*(x450)))))), ((gconst7)*(((((py)*(x451)))+((((IkReal)(21.2500000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x450)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x452=IKsin(j0);
IkReal x453=IKcos(j0);
IkReal x454=((px)*(x452));
IkReal x455=((py)*(x453));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+(x454)+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x455))));
evalcond[1]=((((py)*(x452)))+(((px)*(x453))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x454)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(x455))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x456=(((IkReal)(0.0450000000000000))*(py));
IkReal x457=(((IkReal)(0.300000000000000))*(sj3));
IkReal x458=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst6)*(((x458)+((((IkReal)(-1.00000000000000))*(cj3)*(x458)))+(((px)*(x457))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*((((((IkReal)(-1.00000000000000))*(x456)))+((((IkReal)(-1.00000000000000))*(py)*(x457)))+(((cj3)*(x456))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((x458)+((((IkReal)(-1.00000000000000))*(cj3)*(x458)))+(((px)*(x457)))))), ((gconst6)*((((((IkReal)(-1.00000000000000))*(x456)))+((((IkReal)(-1.00000000000000))*(py)*(x457)))+(((cj3)*(x456)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x459=IKsin(j0);
IkReal x460=IKcos(j0);
IkReal x461=((px)*(x459));
IkReal x462=((py)*(x460));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x462)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x461));
evalcond[1]=((((py)*(x459)))+(((px)*(x460))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x462)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(x461))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x463=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x463;
evalcond[3]=x463;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x464=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x464)))+((((IkReal)(-12.2222222222222))*(pz)*(x464)))+((((IkReal)(11.1111111111111))*(pp)*(x464))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x465=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x466=(((IkReal)(0.0450000000000000))*(x465));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x466)))+(x466)+((((IkReal)(0.300000000000000))*(sj3)*(x465))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x467=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(px))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x467;
evalcond[3]=x467;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x468=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x468)))+((((IkReal)(2.36111111111111))*(x468)))+((((IkReal)(-12.2222222222222))*(pz)*(x468))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x469=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x470=(((IkReal)(0.0450000000000000))*(x469));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x470)))+((((IkReal)(0.300000000000000))*(sj3)*(x469)))+(x470));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x471=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x471;
evalcond[3]=x471;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x472=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-2.36111111111111))*(x472)))+((((IkReal)(12.2222222222222))*(pz)*(x472)))+((((IkReal)(-11.1111111111111))*(pp)*(x472))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x473=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x474=(((IkReal)(0.0450000000000000))*(x473));
sj0array[0]=((((cj3)*(x474)))+((((IkReal)(-1.00000000000000))*(x474)))+((((IkReal)(-0.300000000000000))*(sj3)*(x473))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x475=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x475;
evalcond[3]=x475;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x476=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x476)))+((((IkReal)(-2.36111111111111))*(x476)))+((((IkReal)(-11.1111111111111))*(pp)*(x476))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x477=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x478=(((IkReal)(0.0450000000000000))*(x477));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x478)))+((((IkReal)(-0.300000000000000))*(sj3)*(x477)))+(((cj3)*(x478))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x479=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x480=(((IkReal)(0.300000000000000))*(cj3));
IkReal x481=((x479)+(x480));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x481))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x481));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(9.00000000000000))*((px)*(px))))+((((IkReal)(9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x482=(((IkReal)(110.000000000000))*(pz));
IkReal x483=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(px)*(x483)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x482))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(21.2500000000000))*(py)))+(((py)*(x482)))+(((py)*(x483))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst9)*((((((IkReal)(-1.00000000000000))*(px)*(x483)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x482)))))), ((gconst9)*((((((IkReal)(21.2500000000000))*(py)))+(((py)*(x482)))+(((py)*(x483)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x484=IKcos(j0);
IkReal x485=IKsin(j0);
IkReal x486=((px)*(x485));
IkReal x487=(((IkReal)(1.00000000000000))*(x484));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x486)+((((IkReal)(-1.00000000000000))*(py)*(x487))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(x487)))+((((IkReal)(-1.00000000000000))*(py)*(x485))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(py)*(x484)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(x486)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x488=(((IkReal)(0.0450000000000000))*(py));
IkReal x489=(((IkReal)(0.300000000000000))*(sj3));
IkReal x490=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst8)*(((((px)*(x489)))+(x490)+((((IkReal)(-1.00000000000000))*(cj3)*(x490))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(py)*(x489)))+((((IkReal)(-1.00000000000000))*(x488)))+(((cj3)*(x488))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst8)*(((((px)*(x489)))+(x490)+((((IkReal)(-1.00000000000000))*(cj3)*(x490)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(py)*(x489)))+((((IkReal)(-1.00000000000000))*(x488)))+(((cj3)*(x488)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x491=IKcos(j0);
IkReal x492=IKsin(j0);
IkReal x493=((px)*(x492));
IkReal x494=(((IkReal)(1.00000000000000))*(x491));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(x494)))+(x493));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(py)*(x492)))+((((IkReal)(-1.00000000000000))*(px)*(x494))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x493)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(x491))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x495=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x496=(((IkReal)(0.300000000000000))*(cj3));
IkReal x497=((x496)+(x495));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x497)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x497)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((((IkReal)(9.00000000000000))*((px)*(px))))+((((IkReal)(9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x498=(((IkReal)(110.000000000000))*(pz));
IkReal x499=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst11)*((((((IkReal)(-1.00000000000000))*(px)*(x499)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x498))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((py)*(x498)))+((((IkReal)(21.2500000000000))*(py)))+(((py)*(x499))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst11)*((((((IkReal)(-1.00000000000000))*(px)*(x499)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x498)))))), ((gconst11)*(((((py)*(x498)))+((((IkReal)(21.2500000000000))*(py)))+(((py)*(x499)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x500=IKcos(j0);
IkReal x501=IKsin(j0);
IkReal x502=((px)*(x501));
IkReal x503=(((IkReal)(1.00000000000000))*(x500));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(x503)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x502));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(x503)))+((((IkReal)(-1.00000000000000))*(py)*(x501))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x502)))+((((IkReal)(0.0900000000000000))*(py)*(x500))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x504=(((IkReal)(0.0450000000000000))*(py));
IkReal x505=(((IkReal)(0.300000000000000))*(sj3));
IkReal x506=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst10)*(((((px)*(x505)))+((((IkReal)(-1.00000000000000))*(cj3)*(x506)))+(x506))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*((((((IkReal)(-1.00000000000000))*(py)*(x505)))+((((IkReal)(-1.00000000000000))*(x504)))+(((cj3)*(x504))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst10)*(((((px)*(x505)))+((((IkReal)(-1.00000000000000))*(cj3)*(x506)))+(x506)))), ((gconst10)*((((((IkReal)(-1.00000000000000))*(py)*(x505)))+((((IkReal)(-1.00000000000000))*(x504)))+(((cj3)*(x504)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x507=IKcos(j0);
IkReal x508=IKsin(j0);
IkReal x509=((px)*(x508));
IkReal x510=(((IkReal)(1.00000000000000))*(x507));
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(x510)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x509));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(py)*(x508)))+((((IkReal)(-1.00000000000000))*(px)*(x510))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(py)*(x507)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x509))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x511=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x512=(((IkReal)(0.300000000000000))*(cj3));
IkReal x513=((x512)+(x511));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x513))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x513)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x514=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x514)))+((((IkReal)(2.36111111111111))*(x514)))+((((IkReal)(12.2222222222222))*(pz)*(x514))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x515=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x516=(((IkReal)(0.0450000000000000))*(x515));
cj0array[0]=((x516)+((((IkReal)(0.300000000000000))*(sj3)*(x515)))+((((IkReal)(-1.00000000000000))*(cj3)*(x516))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x517=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x518=(((IkReal)(0.300000000000000))*(cj3));
IkReal x519=((x518)+(x517));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(px))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x519))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x519)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x520=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x520)))+((((IkReal)(12.2222222222222))*(pz)*(x520)))+((((IkReal)(11.1111111111111))*(pp)*(x520))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x521=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x522=(((IkReal)(0.0450000000000000))*(x521));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x522)))+((((IkReal)(0.300000000000000))*(sj3)*(x521)))+(x522));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x523=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x524=(((IkReal)(0.300000000000000))*(cj3));
IkReal x525=((x523)+(x524));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x525))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x525));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x526=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x526)))+((((IkReal)(-2.36111111111111))*(x526)))+((((IkReal)(-12.2222222222222))*(pz)*(x526))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x527=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x528=(((IkReal)(0.0450000000000000))*(x527));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x528)))+(((cj3)*(x528)))+((((IkReal)(-0.300000000000000))*(sj3)*(x527))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x529=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x530=(((IkReal)(0.300000000000000))*(cj3));
IkReal x531=((x529)+(x530));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x531))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x531));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x532=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-2.36111111111111))*(x532)))+((((IkReal)(-12.2222222222222))*(pz)*(x532)))+((((IkReal)(-11.1111111111111))*(pp)*(x532))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x533=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x534=(((IkReal)(0.0450000000000000))*(x533));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x534)))+(((cj3)*(x534)))+((((IkReal)(-0.300000000000000))*(sj3)*(x533))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x535=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x535;
evalcond[3]=x535;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x536=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x536)))+((((IkReal)(11.1111111111111))*(pp)*(x536)))+((((IkReal)(-12.2222222222222))*(pz)*(x536))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x537=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x538=(((IkReal)(0.0450000000000000))*(x537));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x538)))+((((IkReal)(0.300000000000000))*(sj3)*(x537)))+(x538));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x539=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x539;
evalcond[3]=x539;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x540=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x540)))+((((IkReal)(11.1111111111111))*(pp)*(x540)))+((((IkReal)(2.36111111111111))*(x540))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x541=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x542=(((IkReal)(0.0450000000000000))*(x541));
cj0array[0]=((x542)+((((IkReal)(-1.00000000000000))*(cj3)*(x542)))+((((IkReal)(0.300000000000000))*(sj3)*(x541))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x543=IKabs(px);
IkReal x544=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((x543)+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(x543))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x544;
evalcond[3]=x544;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x545=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x545)))+((((IkReal)(-12.2222222222222))*(pz)*(x545)))+((((IkReal)(11.1111111111111))*(pp)*(x545))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x546=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x547=(((IkReal)(0.0450000000000000))*(x546));
cj0array[0]=((x547)+((((IkReal)(-1.00000000000000))*(cj3)*(x547)))+((((IkReal)(0.300000000000000))*(sj3)*(x546))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x548=IKabs(px);
IkReal x549=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(x548))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x548)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x549;
evalcond[3]=x549;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x550=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x550)))+((((IkReal)(11.1111111111111))*(pp)*(x550)))+((((IkReal)(-12.2222222222222))*(pz)*(x550))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x551=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x552=(((IkReal)(0.0450000000000000))*(x551));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x552)))+((((IkReal)(0.300000000000000))*(sj3)*(x551)))+(x552));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x553=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x554=(((IkReal)(0.300000000000000))*(cj3));
IkReal x555=((x553)+(x554));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x555))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x555));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x556=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x556)))+((((IkReal)(2.36111111111111))*(x556)))+((((IkReal)(12.2222222222222))*(pz)*(x556))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x557=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x558=(((IkReal)(0.0450000000000000))*(x557));
cj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x557)))+((((IkReal)(-1.00000000000000))*(cj3)*(x558)))+(x558));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x559=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x560=(((IkReal)(0.300000000000000))*(cj3));
IkReal x561=((x560)+(x559));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x561))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x561)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x562=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x562)))+((((IkReal)(2.36111111111111))*(x562)))+((((IkReal)(12.2222222222222))*(pz)*(x562))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x563=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x564=(((IkReal)(0.0450000000000000))*(x563));
cj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x563)))+(x564)+((((IkReal)(-1.00000000000000))*(cj3)*(x564))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x565=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x566=(((IkReal)(0.300000000000000))*(cj3));
IkReal x567=((x566)+(x565));
evalcond[0]=(((((IkReal)(2.00000000000000))*(IKabs(px))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x567)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x567)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x568=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x568)))+((((IkReal)(12.2222222222222))*(pz)*(x568)))+((((IkReal)(11.1111111111111))*(pp)*(x568))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x569=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x570=(((IkReal)(0.0450000000000000))*(x569));
cj0array[0]=((x570)+((((IkReal)(0.300000000000000))*(sj3)*(x569)))+((((IkReal)(-1.00000000000000))*(cj3)*(x570))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x571=IKabs(px);
IkReal x572=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x573=(((IkReal)(0.300000000000000))*(cj3));
IkReal x574=((x573)+(x572));
evalcond[0]=((x571)+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x571)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x574)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x574)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x575=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x575)))+((((IkReal)(2.36111111111111))*(x575)))+((((IkReal)(11.1111111111111))*(pp)*(x575))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x576=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x577=(((IkReal)(0.0450000000000000))*(x576));
cj0array[0]=((x577)+((((IkReal)(0.300000000000000))*(sj3)*(x576)))+((((IkReal)(-1.00000000000000))*(cj3)*(x577))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x578=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x578;
evalcond[3]=x578;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x579=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-2.36111111111111))*(x579)))+((((IkReal)(-11.1111111111111))*(pp)*(x579)))+((((IkReal)(12.2222222222222))*(pz)*(x579))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x580=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x581=(((IkReal)(0.0450000000000000))*(x580));
sj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x580)))+((((IkReal)(-1.00000000000000))*(x581)))+(((cj3)*(x581))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x582=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x582;
evalcond[3]=x582;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x583=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x583)))+((((IkReal)(12.2222222222222))*(pz)*(x583)))+((((IkReal)(-2.36111111111111))*(x583))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x584=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x585=(((IkReal)(0.0450000000000000))*(x584));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x585)))+((((IkReal)(-0.300000000000000))*(sj3)*(x584)))+(((cj3)*(x585))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x586=IKabs(py);
IkReal x587=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(x586))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+(x586));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x587;
evalcond[3]=x587;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x588=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x588)))+((((IkReal)(12.2222222222222))*(pz)*(x588)))+((((IkReal)(-2.36111111111111))*(x588))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x589=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x590=(((IkReal)(0.0450000000000000))*(x589));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x590)))+(((cj3)*(x590)))+((((IkReal)(-0.300000000000000))*(sj3)*(x589))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x591=IKabs(py);
IkReal x592=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x591))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(x591)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x592;
evalcond[3]=x592;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x593=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x593)))+((((IkReal)(12.2222222222222))*(pz)*(x593)))+((((IkReal)(-2.36111111111111))*(x593))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x594=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x595=(((IkReal)(0.0450000000000000))*(x594));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x595)))+((((IkReal)(-0.300000000000000))*(sj3)*(x594)))+(((cj3)*(x595))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x596=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x597=(((IkReal)(0.300000000000000))*(cj3));
IkReal x598=((x597)+(x596));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x598))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x598));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x599=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x599)))+((((IkReal)(-2.36111111111111))*(x599)))+((((IkReal)(-11.1111111111111))*(pp)*(x599))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x600=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x601=(((IkReal)(0.0450000000000000))*(x600));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x601)))+((((IkReal)(-0.300000000000000))*(sj3)*(x600)))+(((cj3)*(x601))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x602=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x603=(((IkReal)(0.300000000000000))*(cj3));
IkReal x604=((x603)+(x602));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x604))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x604));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x605=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-2.36111111111111))*(x605)))+((((IkReal)(-12.2222222222222))*(pz)*(x605)))+((((IkReal)(-11.1111111111111))*(pp)*(x605))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x606=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x607=(((IkReal)(0.0450000000000000))*(x606));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x607)))+((((IkReal)(-0.300000000000000))*(sj3)*(x606)))+(((cj3)*(x607))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x608=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x609=(((IkReal)(0.300000000000000))*(cj3));
IkReal x610=((x609)+(x608));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+((((IkReal)(2.00000000000000))*(IKabs(py)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x610))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x610));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x611=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x611)))+((((IkReal)(-12.2222222222222))*(pz)*(x611)))+((((IkReal)(-2.36111111111111))*(x611))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x612=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x613=(((IkReal)(0.0450000000000000))*(x612));
sj0array[0]=((((cj3)*(x613)))+((((IkReal)(-1.00000000000000))*(x613)))+((((IkReal)(-0.300000000000000))*(sj3)*(x612))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x614=IKabs(py);
IkReal x615=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x616=(((IkReal)(0.300000000000000))*(cj3));
IkReal x617=((x615)+(x616));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x614))))+(x614));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x617))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x617));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x618=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x618)))+((((IkReal)(-11.1111111111111))*(pp)*(x618)))+((((IkReal)(-2.36111111111111))*(x618))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x619=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x620=(((IkReal)(0.0450000000000000))*(x619));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x620)))+((((IkReal)(-0.300000000000000))*(sj3)*(x619)))+(((cj3)*(x620))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x621=((px)*(sj3));
IkReal x622=((cj3)*(py));
IkReal x623=(((IkReal)(0.0450000000000000))*(sj1));
IkReal x624=(((IkReal)(0.300000000000000))*(sj1));
IkReal x625=((py)*(sj3));
IkReal x626=((cj3)*(px));
IkReal x627=(((IkReal)(1.00000000000000))*(cj1)*(pz));
if( IKabs(((gconst3)*((((((IkReal)(0.550000000000000))*(py)))+((((IkReal)(0.300000000000000))*(x622)))+((((IkReal)(0.0450000000000000))*(x625)))+(((x623)*(x626)))+((((IkReal)(-1.00000000000000))*(px)*(x623)))+((((IkReal)(-1.00000000000000))*(x621)*(x624)))+((((IkReal)(-1.00000000000000))*(py)*(x627))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((py)*(x623)))+((((IkReal)(-1.00000000000000))*(px)*(x627)))+(((x624)*(x625)))+((((IkReal)(0.550000000000000))*(px)))+((((IkReal)(0.0450000000000000))*(x621)))+((((IkReal)(-1.00000000000000))*(x622)*(x623)))+((((IkReal)(0.300000000000000))*(x626))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst3)*((((((IkReal)(0.550000000000000))*(py)))+((((IkReal)(0.300000000000000))*(x622)))+((((IkReal)(0.0450000000000000))*(x625)))+(((x623)*(x626)))+((((IkReal)(-1.00000000000000))*(px)*(x623)))+((((IkReal)(-1.00000000000000))*(x621)*(x624)))+((((IkReal)(-1.00000000000000))*(py)*(x627)))))), ((gconst3)*(((((py)*(x623)))+((((IkReal)(-1.00000000000000))*(px)*(x627)))+(((x624)*(x625)))+((((IkReal)(0.550000000000000))*(px)))+((((IkReal)(0.0450000000000000))*(x621)))+((((IkReal)(-1.00000000000000))*(x622)*(x623)))+((((IkReal)(0.300000000000000))*(x626)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x628=IKsin(j0);
IkReal x629=IKcos(j0);
IkReal x630=(((IkReal)(0.300000000000000))*(cj3));
IkReal x631=(((IkReal)(1.10000000000000))*(sj1));
IkReal x632=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x633=((cj1)*(pz));
IkReal x634=((px)*(x628));
IkReal x635=((px)*(x629));
IkReal x636=((py)*(x629));
IkReal x637=((py)*(x628));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x630)))+(((sj1)*(x637)))+(((sj1)*(x635)))+(x633)+((((IkReal)(-1.00000000000000))*(x632))));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x636)))+(x634));
evalcond[2]=((((cj1)*(x635)))+(((cj1)*(x637)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x637)))+(((sj1)*(x632)))+((((IkReal)(0.550000000000000))*(sj1)))+(((sj1)*(x630)))+((((IkReal)(-1.00000000000000))*(x635))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x636)))+((((IkReal)(-0.0900000000000000))*(x634)))+((((IkReal)(1.10000000000000))*(x633)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x631)*(x637)))+(((x631)*(x635))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x638=((cj1)*(py));
IkReal x639=(((IkReal)(0.300000000000000))*(sj3));
IkReal x640=((pz)*(sj1));
IkReal x641=(((IkReal)(0.0450000000000000))*(cj1)*(px));
if( IKabs(((gconst2)*(((((cj3)*(x641)))+((((IkReal)(-1.00000000000000))*(x641)))+(((py)*(x640)))+((((IkReal)(-1.00000000000000))*(cj1)*(px)*(x639))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x638)*(x639)))+((((IkReal)(-0.0450000000000000))*(cj3)*(x638)))+(((px)*(x640)))+((((IkReal)(0.0450000000000000))*(x638))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst2)*(((((cj3)*(x641)))+((((IkReal)(-1.00000000000000))*(x641)))+(((py)*(x640)))+((((IkReal)(-1.00000000000000))*(cj1)*(px)*(x639)))))), ((gconst2)*(((((x638)*(x639)))+((((IkReal)(-0.0450000000000000))*(cj3)*(x638)))+(((px)*(x640)))+((((IkReal)(0.0450000000000000))*(x638)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x642=IKsin(j0);
IkReal x643=IKcos(j0);
IkReal x644=(((IkReal)(0.300000000000000))*(cj3));
IkReal x645=(((IkReal)(1.10000000000000))*(sj1));
IkReal x646=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x647=((cj1)*(pz));
IkReal x648=((px)*(x642));
IkReal x649=((px)*(x643));
IkReal x650=((py)*(x643));
IkReal x651=((py)*(x642));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x646)))+(((sj1)*(x651)))+(((sj1)*(x649)))+(x647)+((((IkReal)(-1.00000000000000))*(x644))));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x648)+((((IkReal)(-1.00000000000000))*(x650))));
evalcond[2]=((((cj1)*(x651)))+(((cj1)*(x649)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x649)))+((((IkReal)(-1.00000000000000))*(x651)))+(((sj1)*(x646)))+(((sj1)*(x644)))+((((IkReal)(0.550000000000000))*(sj1))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+(((x645)*(x651)))+((((IkReal)(-0.0900000000000000))*(x648)))+((((IkReal)(1.10000000000000))*(x647)))+(((x645)*(x649)))+((((IkReal)(0.0900000000000000))*(x650))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-0.550000000000000))*(cj1)))+((((IkReal)(-0.300000000000000))*(cj1)*(cj3)))+(pz)+((((IkReal)(-0.0450000000000000))*(cj1)*(sj3))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((cj1)*((py)*(py))))+(((cj1)*((px)*(px))))));
dummyeval[0]=((((cj1)*((py)*(py))))+(((cj1)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((sj1)*((py)*(py))))+(((sj1)*((px)*(px))))));
dummyeval[0]=((((sj1)*((py)*(py))))+(((sj1)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x652=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x652;
evalcond[3]=x652;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((((IkReal)(-9.00000000000000))*((px)*(px))))+((((IkReal)(-9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x653=(((IkReal)(110.000000000000))*(pz));
IkReal x654=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst15)*((((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x654)))+(((px)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*((((((IkReal)(21.2500000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x653)))+(((py)*(x654))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst15)*((((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x654)))+(((px)*(x653)))))), ((gconst15)*((((((IkReal)(21.2500000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x653)))+(((py)*(x654)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x655=IKcos(j0);
IkReal x656=IKsin(j0);
IkReal x657=((px)*(x656));
IkReal x658=(((IkReal)(1.00000000000000))*(x655));
evalcond[0]=(((IkReal)(-0.0450000000000000))+(x657)+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(x658)))+((((IkReal)(0.0450000000000000))*(cj3))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(x658)))+((((IkReal)(-1.00000000000000))*(py)*(x656))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x657)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(x655))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x659=(((IkReal)(0.0450000000000000))*(py));
IkReal x660=(((IkReal)(0.300000000000000))*(sj3));
IkReal x661=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst14)*((((((IkReal)(-1.00000000000000))*(px)*(x660)))+(((cj3)*(x661)))+((((IkReal)(-1.00000000000000))*(x661))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((x659)+(((py)*(x660)))+((((IkReal)(-1.00000000000000))*(cj3)*(x659))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst14)*((((((IkReal)(-1.00000000000000))*(px)*(x660)))+(((cj3)*(x661)))+((((IkReal)(-1.00000000000000))*(x661)))))), ((gconst14)*(((x659)+(((py)*(x660)))+((((IkReal)(-1.00000000000000))*(cj3)*(x659)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x662=IKcos(j0);
IkReal x663=IKsin(j0);
IkReal x664=((px)*(x663));
IkReal x665=(((IkReal)(1.00000000000000))*(x662));
evalcond[0]=(((IkReal)(-0.0450000000000000))+(x664)+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(x665))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(py)*(x663)))+((((IkReal)(-1.00000000000000))*(px)*(x665))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(py)*(x662)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(x664))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x666=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x666;
evalcond[3]=x666;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((((IkReal)(-9.00000000000000))*((px)*(px))))+((((IkReal)(-9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x667=(((IkReal)(110.000000000000))*(pz));
IkReal x668=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst17)*(((((px)*(x667)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x668))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((py)*(x668)))+((((IkReal)(21.2500000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x667))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst17)*(((((px)*(x667)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x668)))))), ((gconst17)*(((((py)*(x668)))+((((IkReal)(21.2500000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x667)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x669=IKcos(j0);
IkReal x670=IKsin(j0);
IkReal x671=((px)*(x670));
IkReal x672=(((IkReal)(1.00000000000000))*(x669));
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(x672)))+((((IkReal)(0.0450000000000000))*(cj3)))+(x671));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(x672)))+((((IkReal)(-1.00000000000000))*(py)*(x670))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x671)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(py)*(x669)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x673=(((IkReal)(0.0450000000000000))*(py));
IkReal x674=(((IkReal)(0.300000000000000))*(sj3));
IkReal x675=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst16)*((((((IkReal)(-1.00000000000000))*(px)*(x674)))+(((cj3)*(x675)))+((((IkReal)(-1.00000000000000))*(x675))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*((((((IkReal)(-1.00000000000000))*(cj3)*(x673)))+(((py)*(x674)))+(x673))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst16)*((((((IkReal)(-1.00000000000000))*(px)*(x674)))+(((cj3)*(x675)))+((((IkReal)(-1.00000000000000))*(x675)))))), ((gconst16)*((((((IkReal)(-1.00000000000000))*(cj3)*(x673)))+(((py)*(x674)))+(x673)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x676=IKcos(j0);
IkReal x677=IKsin(j0);
IkReal x678=((px)*(x677));
IkReal x679=(((IkReal)(1.00000000000000))*(x676));
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(x679)))+(x678));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(x679)))+((((IkReal)(-1.00000000000000))*(py)*(x677))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x678)))+((((IkReal)(-0.0900000000000000))*(py)*(x676)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x680=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x680;
evalcond[3]=x680;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x681=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x681)))+((((IkReal)(12.2222222222222))*(pz)*(x681)))+((((IkReal)(-2.36111111111111))*(x681))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x682=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x683=(((IkReal)(0.0450000000000000))*(x682));
cj0array[0]=((((cj3)*(x683)))+((((IkReal)(-0.300000000000000))*(sj3)*(x682)))+((((IkReal)(-1.00000000000000))*(x683))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x684=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(px))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x684;
evalcond[3]=x684;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x685=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x685)))+((((IkReal)(-11.1111111111111))*(pp)*(x685)))+((((IkReal)(-2.36111111111111))*(x685))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x686=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x687=(((IkReal)(0.0450000000000000))*(x686));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x686)))+(((cj3)*(x687)))+((((IkReal)(-1.00000000000000))*(x687))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x688=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x688;
evalcond[3]=x688;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x689=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x689)))+((((IkReal)(-12.2222222222222))*(pz)*(x689)))+((((IkReal)(2.36111111111111))*(x689))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x690=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x691=(((IkReal)(0.0450000000000000))*(x690));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x690)))+(x691)+((((IkReal)(-1.00000000000000))*(cj3)*(x691))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x692=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x692;
evalcond[3]=x692;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x693=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x693)))+((((IkReal)(2.36111111111111))*(x693)))+((((IkReal)(-12.2222222222222))*(pz)*(x693))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x694=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x695=(((IkReal)(0.0450000000000000))*(x694));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x695)))+(x695)+((((IkReal)(0.300000000000000))*(sj3)*(x694))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x696=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x697=(((IkReal)(0.300000000000000))*(cj3));
IkReal x698=((x696)+(x697));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x698))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x698)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign((((((IkReal)(-9.00000000000000))*((px)*(px))))+((((IkReal)(-9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x699=(((IkReal)(110.000000000000))*(pz));
IkReal x700=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst19)*((((((IkReal)(-1.00000000000000))*(px)*(x699)))+((((IkReal)(-1.00000000000000))*(px)*(x700)))+((((IkReal)(-21.2500000000000))*(px))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((py)*(x699)))+((((IkReal)(21.2500000000000))*(py)))+(((py)*(x700))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst19)*((((((IkReal)(-1.00000000000000))*(px)*(x699)))+((((IkReal)(-1.00000000000000))*(px)*(x700)))+((((IkReal)(-21.2500000000000))*(px)))))), ((gconst19)*(((((py)*(x699)))+((((IkReal)(21.2500000000000))*(py)))+(((py)*(x700)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x701=IKsin(j0);
IkReal x702=IKcos(j0);
IkReal x703=((px)*(x701));
IkReal x704=((py)*(x702));
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x704)))+((((IkReal)(0.0450000000000000))*(cj3)))+(x703));
evalcond[1]=((((py)*(x701)))+(((px)*(x702))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x703)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x704))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x705=(((IkReal)(0.0450000000000000))*(py));
IkReal x706=(((IkReal)(0.300000000000000))*(sj3));
IkReal x707=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst18)*((((((IkReal)(-1.00000000000000))*(px)*(x706)))+((((IkReal)(-1.00000000000000))*(x707)))+(((cj3)*(x707))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((py)*(x706)))+(x705)+((((IkReal)(-1.00000000000000))*(cj3)*(x705))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst18)*((((((IkReal)(-1.00000000000000))*(px)*(x706)))+((((IkReal)(-1.00000000000000))*(x707)))+(((cj3)*(x707)))))), ((gconst18)*(((((py)*(x706)))+(x705)+((((IkReal)(-1.00000000000000))*(cj3)*(x705)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x708=IKsin(j0);
IkReal x709=IKcos(j0);
IkReal x710=((px)*(x708));
IkReal x711=((py)*(x709));
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x711)))+(x710));
evalcond[1]=((((px)*(x709)))+(((py)*(x708))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x711)))+((((IkReal)(0.0900000000000000))*(x710))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x712=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x713=(((IkReal)(0.300000000000000))*(cj3));
IkReal x714=((x713)+(x712));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x714)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x714));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((((IkReal)(-9.00000000000000))*((px)*(px))))+((((IkReal)(-9.00000000000000))*((py)*(py))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))))+((((IkReal)(-1.00000000000000))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x715=(((IkReal)(110.000000000000))*(pz));
IkReal x716=(((IkReal)(100.000000000000))*(pp));
if( IKabs(((gconst21)*((((((IkReal)(-1.00000000000000))*(px)*(x715)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x716))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((py)*(x715)))+((((IkReal)(21.2500000000000))*(py)))+(((py)*(x716))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst21)*((((((IkReal)(-1.00000000000000))*(px)*(x715)))+((((IkReal)(-21.2500000000000))*(px)))+((((IkReal)(-1.00000000000000))*(px)*(x716)))))), ((gconst21)*(((((py)*(x715)))+((((IkReal)(21.2500000000000))*(py)))+(((py)*(x716)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x717=IKsin(j0);
IkReal x718=IKcos(j0);
IkReal x719=((px)*(x717));
IkReal x720=((py)*(x718));
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x720)))+(x719));
evalcond[1]=((((px)*(x718)))+(((py)*(x717))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x720)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x719))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x721=(((IkReal)(0.0450000000000000))*(py));
IkReal x722=(((IkReal)(0.300000000000000))*(sj3));
IkReal x723=(((IkReal)(0.0450000000000000))*(px));
if( IKabs(((gconst20)*(((((cj3)*(x723)))+((((IkReal)(-1.00000000000000))*(px)*(x722)))+((((IkReal)(-1.00000000000000))*(x723))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*((((((IkReal)(-1.00000000000000))*(cj3)*(x721)))+(x721)+(((py)*(x722))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst20)*(((((cj3)*(x723)))+((((IkReal)(-1.00000000000000))*(px)*(x722)))+((((IkReal)(-1.00000000000000))*(x723)))))), ((gconst20)*((((((IkReal)(-1.00000000000000))*(cj3)*(x721)))+(x721)+(((py)*(x722)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x724=IKsin(j0);
IkReal x725=IKcos(j0);
IkReal x726=((px)*(x724));
IkReal x727=((py)*(x725));
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+(x726)+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x727))));
evalcond[1]=((((px)*(x725)))+(((py)*(x724))));
evalcond[2]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(x726)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x727))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x728=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x729=(((IkReal)(0.300000000000000))*(cj3));
IkReal x730=((x728)+(x729));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x730))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x730)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x731=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x731)))+((((IkReal)(-12.2222222222222))*(pz)*(x731)))+((((IkReal)(-11.1111111111111))*(pp)*(x731))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x732=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x733=(((IkReal)(0.0450000000000000))*(x732));
cj0array[0]=((((cj3)*(x733)))+((((IkReal)(-0.300000000000000))*(sj3)*(x732)))+((((IkReal)(-1.00000000000000))*(x733))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x734=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x735=(((IkReal)(0.300000000000000))*(cj3));
IkReal x736=((x735)+(x734));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(px))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x736))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x736)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x737=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x737)))+((((IkReal)(-12.2222222222222))*(pz)*(x737)))+((((IkReal)(-2.36111111111111))*(x737))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x738=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x739=(((IkReal)(0.0450000000000000))*(x738));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x739)))+(((cj3)*(x739)))+((((IkReal)(-0.300000000000000))*(sj3)*(x738))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x740=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x741=(((IkReal)(0.300000000000000))*(cj3));
IkReal x742=((x740)+(x741));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x742)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x742)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x743=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x743)))+((((IkReal)(12.2222222222222))*(pz)*(x743)))+((((IkReal)(2.36111111111111))*(x743))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x744=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x745=(((IkReal)(0.0450000000000000))*(x744));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x744)))+(x745)+((((IkReal)(-1.00000000000000))*(cj3)*(x745))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x746=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x747=(((IkReal)(0.300000000000000))*(cj3));
IkReal x748=((x746)+(x747));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x748))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x748)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x749=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x749)))+((((IkReal)(11.1111111111111))*(pp)*(x749)))+((((IkReal)(12.2222222222222))*(pz)*(x749))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x750=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x751=(((IkReal)(0.0450000000000000))*(x750));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x750)))+(x751)+((((IkReal)(-1.00000000000000))*(cj3)*(x751))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x752=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x752;
evalcond[3]=x752;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x753=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x753)))+((((IkReal)(-11.1111111111111))*(pp)*(x753)))+((((IkReal)(-2.36111111111111))*(x753))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x754=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x755=(((IkReal)(0.0450000000000000))*(x754));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x754)))+((((IkReal)(-1.00000000000000))*(x755)))+(((cj3)*(x755))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x756=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x756;
evalcond[3]=x756;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x757=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x757)))+((((IkReal)(-2.36111111111111))*(x757)))+((((IkReal)(-11.1111111111111))*(pp)*(x757))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x758=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x759=(((IkReal)(0.0450000000000000))*(x758));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x759)))+((((IkReal)(-0.300000000000000))*(sj3)*(x758)))+(((cj3)*(x759))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x760=IKabs(px);
IkReal x761=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((x760)+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(x760))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x761;
evalcond[3]=x761;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x762=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x762)))+((((IkReal)(-11.1111111111111))*(pp)*(x762)))+((((IkReal)(-2.36111111111111))*(x762))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x763=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x764=(((IkReal)(0.0450000000000000))*(x763));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x763)))+(((cj3)*(x764)))+((((IkReal)(-1.00000000000000))*(x764))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x765=IKabs(px);
IkReal x766=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(x765))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x765)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x766;
evalcond[3]=x766;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x767=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x767)))+((((IkReal)(-2.36111111111111))*(x767)))+((((IkReal)(12.2222222222222))*(pz)*(x767))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x768=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x769=(((IkReal)(0.0450000000000000))*(x768));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x769)))+(((cj3)*(x769)))+((((IkReal)(-0.300000000000000))*(sj3)*(x768))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x770=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x771=(((IkReal)(0.300000000000000))*(cj3));
IkReal x772=((x771)+(x770));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x772))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x772));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x773=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x773)))+((((IkReal)(-11.1111111111111))*(pp)*(x773)))+((((IkReal)(-2.36111111111111))*(x773))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x774=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x775=(((IkReal)(0.0450000000000000))*(x774));
cj0array[0]=((((cj3)*(x775)))+((((IkReal)(-1.00000000000000))*(x775)))+((((IkReal)(-0.300000000000000))*(sj3)*(x774))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x776=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x777=(((IkReal)(0.300000000000000))*(cj3));
IkReal x778=((x777)+(x776));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x778))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x778));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x779=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x779)))+((((IkReal)(-12.2222222222222))*(pz)*(x779)))+((((IkReal)(-11.1111111111111))*(pp)*(x779))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x780=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x781=(((IkReal)(0.0450000000000000))*(x780));
cj0array[0]=((((cj3)*(x781)))+((((IkReal)(-0.300000000000000))*(sj3)*(x780)))+((((IkReal)(-1.00000000000000))*(x781))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x782=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x783=(((IkReal)(0.300000000000000))*(cj3));
IkReal x784=((x782)+(x783));
evalcond[0]=(((((IkReal)(2.00000000000000))*(IKabs(px))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x784)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x784)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x785=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x785)))+((((IkReal)(-2.36111111111111))*(x785)))+((((IkReal)(-12.2222222222222))*(pz)*(x785))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x786=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x787=(((IkReal)(0.0450000000000000))*(x786));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x787)))+((((IkReal)(-0.300000000000000))*(sj3)*(x786)))+(((cj3)*(x787))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x788=IKabs(px);
IkReal x789=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x790=(((IkReal)(0.300000000000000))*(cj3));
IkReal x791=((x789)+(x790));
evalcond[0]=((x788)+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x788)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x791))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x791)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x792=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x792)))+((((IkReal)(-11.1111111111111))*(pp)*(x792)))+((((IkReal)(-2.36111111111111))*(x792))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x793=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x794=(((IkReal)(0.0450000000000000))*(x793));
cj0array[0]=((((cj3)*(x794)))+((((IkReal)(-1.00000000000000))*(x794)))+((((IkReal)(-0.300000000000000))*(sj3)*(x793))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x795=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x795;
evalcond[3]=x795;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x796=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x796)))+((((IkReal)(11.1111111111111))*(pp)*(x796)))+((((IkReal)(-12.2222222222222))*(pz)*(x796))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x797=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x798=(((IkReal)(0.0450000000000000))*(x797));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x797)))+(x798)+((((IkReal)(-1.00000000000000))*(cj3)*(x798))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x799=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x799;
evalcond[3]=x799;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x800=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x800)))+((((IkReal)(11.1111111111111))*(pp)*(x800)))+((((IkReal)(-12.2222222222222))*(pz)*(x800))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x801=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x802=(((IkReal)(0.0450000000000000))*(x801));
sj0array[0]=((x802)+((((IkReal)(-1.00000000000000))*(cj3)*(x802)))+((((IkReal)(0.300000000000000))*(sj3)*(x801))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x803=IKabs(py);
IkReal x804=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((x803)+(IKabs(((x803)+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x804;
evalcond[3]=x804;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x805=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x805)))+((((IkReal)(2.36111111111111))*(x805)))+((((IkReal)(-12.2222222222222))*(pz)*(x805))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x806=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x807=(((IkReal)(0.0450000000000000))*(x806));
sj0array[0]=((x807)+((((IkReal)(-1.00000000000000))*(cj3)*(x807)))+((((IkReal)(0.300000000000000))*(sj3)*(x806))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x808=IKabs(py);
IkReal x809=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x808))))+(IKabs(((x808)+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x809;
evalcond[3]=x809;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x810=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x810)))+((((IkReal)(11.1111111111111))*(pp)*(x810)))+((((IkReal)(-12.2222222222222))*(pz)*(x810))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x811=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x812=(((IkReal)(0.0450000000000000))*(x811));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x812)))+((((IkReal)(0.300000000000000))*(sj3)*(x811)))+(x812));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x813=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x814=(((IkReal)(0.300000000000000))*(cj3));
IkReal x815=((x814)+(x813));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x815))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x815));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x816=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x816)))+((((IkReal)(11.1111111111111))*(pp)*(x816)))+((((IkReal)(2.36111111111111))*(x816))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x817=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x818=(((IkReal)(0.0450000000000000))*(x817));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x818)))+(x818)+((((IkReal)(0.300000000000000))*(sj3)*(x817))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x819=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x820=(((IkReal)(0.300000000000000))*(cj3));
IkReal x821=((x820)+(x819));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x821))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x821)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x822=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x822)))+((((IkReal)(12.2222222222222))*(pz)*(x822)))+((((IkReal)(2.36111111111111))*(x822))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x823=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x824=(((IkReal)(0.0450000000000000))*(x823));
sj0array[0]=((x824)+((((IkReal)(0.300000000000000))*(sj3)*(x823)))+((((IkReal)(-1.00000000000000))*(cj3)*(x824))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x825=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x826=(((IkReal)(0.300000000000000))*(cj3));
IkReal x827=((x826)+(x825));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959))))))+((((IkReal)(2.00000000000000))*(IKabs(py)))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x827))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x827)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x828=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x828)))+((((IkReal)(11.1111111111111))*(pp)*(x828)))+((((IkReal)(12.2222222222222))*(pz)*(x828))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x829=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x830=(((IkReal)(0.0450000000000000))*(x829));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x829)))+(x830)+((((IkReal)(-1.00000000000000))*(cj3)*(x830))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x831=IKabs(py);
IkReal x832=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x833=(((IkReal)(0.300000000000000))*(cj3));
IkReal x834=((x832)+(x833));
evalcond[0]=((IKabs(((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(x831))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(x831));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x834)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x834));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x835=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x835)))+((((IkReal)(11.1111111111111))*(pp)*(x835)))+((((IkReal)(12.2222222222222))*(pz)*(x835))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x836=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x837=(((IkReal)(0.0450000000000000))*(x836));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x837)))+((((IkReal)(0.300000000000000))*(sj3)*(x836)))+(x837));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x838=((px)*(sj3));
IkReal x839=((cj3)*(py));
IkReal x840=(((IkReal)(0.0450000000000000))*(sj1));
IkReal x841=(((IkReal)(0.300000000000000))*(sj1));
IkReal x842=((py)*(sj3));
IkReal x843=((cj3)*(px));
IkReal x844=(((IkReal)(1.00000000000000))*(cj1)*(pz));
if( IKabs(((gconst13)*(((((x838)*(x841)))+(((px)*(x840)))+((((IkReal)(0.550000000000000))*(py)))+((((IkReal)(0.300000000000000))*(x839)))+((((IkReal)(-1.00000000000000))*(x840)*(x843)))+((((IkReal)(-1.00000000000000))*(py)*(x844)))+((((IkReal)(0.0450000000000000))*(x842))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*((((((IkReal)(0.0450000000000000))*(x838)))+((((IkReal)(-1.00000000000000))*(py)*(x840)))+(((x839)*(x840)))+((((IkReal)(0.550000000000000))*(px)))+((((IkReal)(-1.00000000000000))*(x841)*(x842)))+((((IkReal)(-1.00000000000000))*(px)*(x844)))+((((IkReal)(0.300000000000000))*(x843))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst13)*(((((x838)*(x841)))+(((px)*(x840)))+((((IkReal)(0.550000000000000))*(py)))+((((IkReal)(0.300000000000000))*(x839)))+((((IkReal)(-1.00000000000000))*(x840)*(x843)))+((((IkReal)(-1.00000000000000))*(py)*(x844)))+((((IkReal)(0.0450000000000000))*(x842)))))), ((gconst13)*((((((IkReal)(0.0450000000000000))*(x838)))+((((IkReal)(-1.00000000000000))*(py)*(x840)))+(((x839)*(x840)))+((((IkReal)(0.550000000000000))*(px)))+((((IkReal)(-1.00000000000000))*(x841)*(x842)))+((((IkReal)(-1.00000000000000))*(px)*(x844)))+((((IkReal)(0.300000000000000))*(x843)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x845=IKsin(j0);
IkReal x846=IKcos(j0);
IkReal x847=(((IkReal)(0.300000000000000))*(cj3));
IkReal x848=(((IkReal)(1.10000000000000))*(sj1));
IkReal x849=(((IkReal)(1.00000000000000))*(cj1));
IkReal x850=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x851=((cj1)*(pz));
IkReal x852=((px)*(x845));
IkReal x853=((px)*(x846));
IkReal x854=((py)*(x846));
IkReal x855=((py)*(x845));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((sj1)*(x855)))+((((IkReal)(-1.00000000000000))*(x850)))+(((sj1)*(x853)))+(x851)+((((IkReal)(-1.00000000000000))*(x847))));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(x852)+((((IkReal)(-1.00000000000000))*(x854))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x849)*(x853)))+(((pz)*(sj1)))+((((IkReal)(-1.00000000000000))*(x849)*(x855))));
evalcond[3]=((((sj1)*(x847)))+((((IkReal)(0.550000000000000))*(sj1)))+(((sj1)*(x850)))+((((IkReal)(-1.00000000000000))*(x853)))+((((IkReal)(-1.00000000000000))*(x855))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x851)))+((((IkReal)(0.0900000000000000))*(x852)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x854)))+(((x848)*(x853)))+(((x848)*(x855))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x856=((cj1)*(py));
IkReal x857=(((IkReal)(0.300000000000000))*(sj3));
IkReal x858=((pz)*(sj1));
IkReal x859=(((IkReal)(0.0450000000000000))*(cj1)*(px));
if( IKabs(((gconst12)*((((((IkReal)(-1.00000000000000))*(cj3)*(x859)))+(((cj1)*(px)*(x857)))+(x859)+(((py)*(x858))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*((((((IkReal)(-0.0450000000000000))*(x856)))+((((IkReal)(-1.00000000000000))*(x856)*(x857)))+(((px)*(x858)))+((((IkReal)(0.0450000000000000))*(cj3)*(x856))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst12)*((((((IkReal)(-1.00000000000000))*(cj3)*(x859)))+(((cj1)*(px)*(x857)))+(x859)+(((py)*(x858)))))), ((gconst12)*((((((IkReal)(-0.0450000000000000))*(x856)))+((((IkReal)(-1.00000000000000))*(x856)*(x857)))+(((px)*(x858)))+((((IkReal)(0.0450000000000000))*(cj3)*(x856)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x860=IKsin(j0);
IkReal x861=IKcos(j0);
IkReal x862=(((IkReal)(0.300000000000000))*(cj3));
IkReal x863=(((IkReal)(1.10000000000000))*(sj1));
IkReal x864=(((IkReal)(1.00000000000000))*(cj1));
IkReal x865=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x866=((cj1)*(pz));
IkReal x867=((px)*(x860));
IkReal x868=((px)*(x861));
IkReal x869=((py)*(x861));
IkReal x870=((py)*(x860));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((sj1)*(x870)))+(((sj1)*(x868)))+(x866)+((((IkReal)(-1.00000000000000))*(x862)))+((((IkReal)(-1.00000000000000))*(x865))));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x869)))+(x867)+((((IkReal)(0.0450000000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x864)*(x870)))+(((pz)*(sj1)))+((((IkReal)(-1.00000000000000))*(x864)*(x868))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x868)))+(((sj1)*(x865)))+((((IkReal)(0.550000000000000))*(sj1)))+(((sj1)*(x862)))+((((IkReal)(-1.00000000000000))*(x870))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x863)*(x870)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x869)))+((((IkReal)(1.10000000000000))*(x866)))+((((IkReal)(0.0900000000000000))*(x867)))+(((x863)*(x868))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x871=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x871;
evalcond[3]=x871;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
gconst23=IKsign((((px)*(px))+((py)*(py))));
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x872=(((IkReal)(1.00000000000000))*(sj2));
gconst22=IKsign((((((IkReal)(-1.00000000000000))*(x872)*((py)*(py))))+((((IkReal)(-1.00000000000000))*(x872)*((px)*(px))))));
IkReal x873=(((IkReal)(1.00000000000000))*(sj2));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x873)*((py)*(py))))+((((IkReal)(-1.00000000000000))*(x873)*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x874=(sj2)*(sj2);
IkReal x875=((cj2)*(sj2));
IkReal x876=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x877=(((IkReal)(0.300000000000000))*(sj3));
IkReal x878=((px)*(x877));
IkReal x879=((py)*(x874));
IkReal x880=((px)*(x874));
if( IKabs(((gconst22)*((((((IkReal)(-1.00000000000000))*(x876)*(x880)))+(((py)*(x875)*(x876)))+(((x874)*(x878)))+((((IkReal)(0.0450000000000000))*(x880)))+((((IkReal)(-0.0450000000000000))*(py)*(x875)))+((((IkReal)(-1.00000000000000))*(py)*(x875)*(x877))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*((((((IkReal)(-0.0450000000000000))*(x879)))+(((px)*(x875)*(x876)))+((((IkReal)(-0.0450000000000000))*(px)*(x875)))+((((IkReal)(-1.00000000000000))*(x875)*(x878)))+(((x876)*(x879)))+((((IkReal)(-1.00000000000000))*(x877)*(x879))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst22)*((((((IkReal)(-1.00000000000000))*(x876)*(x880)))+(((py)*(x875)*(x876)))+(((x874)*(x878)))+((((IkReal)(0.0450000000000000))*(x880)))+((((IkReal)(-0.0450000000000000))*(py)*(x875)))+((((IkReal)(-1.00000000000000))*(py)*(x875)*(x877)))))), ((gconst22)*((((((IkReal)(-0.0450000000000000))*(x879)))+(((px)*(x875)*(x876)))+((((IkReal)(-0.0450000000000000))*(px)*(x875)))+((((IkReal)(-1.00000000000000))*(x875)*(x878)))+(((x876)*(x879)))+((((IkReal)(-1.00000000000000))*(x877)*(x879)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x881=IKcos(j0);
IkReal x882=IKsin(j0);
IkReal x883=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x884=(((IkReal)(0.300000000000000))*(sj3));
IkReal x885=(((IkReal)(0.0900000000000000))*(sj2));
IkReal x886=(((IkReal)(1.00000000000000))*(cj2));
IkReal x887=(((IkReal)(0.0900000000000000))*(cj2));
IkReal x888=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x889=((px)*(x882));
IkReal x890=((px)*(x881));
IkReal x891=((py)*(x881));
IkReal x892=((py)*(x882));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x883)))+(x883)+(x889)+((((IkReal)(-1.00000000000000))*(x891)))+(((sj2)*(x884))));
evalcond[1]=((((sj2)*(x892)))+(((sj2)*(x890)))+((((IkReal)(-1.00000000000000))*(x886)*(x891)))+(((cj2)*(x889))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x884)+(((sj2)*(x889)))+((((IkReal)(-1.00000000000000))*(x886)*(x890)))+((((IkReal)(-1.00000000000000))*(x886)*(x892)))+((((IkReal)(-1.00000000000000))*(x888)))+((((IkReal)(-1.00000000000000))*(sj2)*(x891))));
evalcond[3]=((((cj2)*(x884)))+((((IkReal)(-1.00000000000000))*(cj2)*(x888)))+((((IkReal)(-1.00000000000000))*(x890)))+((((IkReal)(-1.00000000000000))*(x892)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x887)*(x892)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x885)*(x891)))+((((IkReal)(-1.00000000000000))*(x885)*(x889)))+((((IkReal)(1.10000000000000))*(pz)))+(((x887)*(x890))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x893=(((IkReal)(0.0450000000000000))*(py));
IkReal x894=((cj3)*(sj2));
IkReal x895=(((IkReal)(0.300000000000000))*(sj3));
IkReal x896=(((IkReal)(0.0450000000000000))*(px));
IkReal x897=((cj2)*(cj3));
if( IKabs(((gconst23)*(((((cj2)*(x893)))+(((x894)*(x896)))+((((IkReal)(-1.00000000000000))*(px)*(sj2)*(x895)))+((((IkReal)(-1.00000000000000))*(x893)*(x897)))+(((cj2)*(py)*(x895)))+((((IkReal)(-1.00000000000000))*(sj2)*(x896))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*((((((IkReal)(-1.00000000000000))*(x893)*(x894)))+((((IkReal)(-1.00000000000000))*(x896)*(x897)))+(((cj2)*(px)*(x895)))+(((cj2)*(x896)))+(((py)*(sj2)*(x895)))+(((sj2)*(x893))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst23)*(((((cj2)*(x893)))+(((x894)*(x896)))+((((IkReal)(-1.00000000000000))*(px)*(sj2)*(x895)))+((((IkReal)(-1.00000000000000))*(x893)*(x897)))+(((cj2)*(py)*(x895)))+((((IkReal)(-1.00000000000000))*(sj2)*(x896)))))), ((gconst23)*((((((IkReal)(-1.00000000000000))*(x893)*(x894)))+((((IkReal)(-1.00000000000000))*(x896)*(x897)))+(((cj2)*(px)*(x895)))+(((cj2)*(x896)))+(((py)*(sj2)*(x895)))+(((sj2)*(x893)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x898=IKcos(j0);
IkReal x899=IKsin(j0);
IkReal x900=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x901=(((IkReal)(0.300000000000000))*(sj3));
IkReal x902=(((IkReal)(0.0900000000000000))*(sj2));
IkReal x903=(((IkReal)(1.00000000000000))*(cj2));
IkReal x904=(((IkReal)(0.0900000000000000))*(cj2));
IkReal x905=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x906=((px)*(x899));
IkReal x907=((px)*(x898));
IkReal x908=((py)*(x898));
IkReal x909=((py)*(x899));
evalcond[0]=((((sj2)*(x901)))+((((IkReal)(-1.00000000000000))*(cj3)*(x900)))+(x906)+(x900)+((((IkReal)(-1.00000000000000))*(x908))));
evalcond[1]=((((cj2)*(x906)))+(((sj2)*(x907)))+(((sj2)*(x909)))+((((IkReal)(-1.00000000000000))*(x903)*(x908))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((sj2)*(x906)))+((((IkReal)(-1.00000000000000))*(x905)))+((((IkReal)(-1.00000000000000))*(x903)*(x909)))+((((IkReal)(-1.00000000000000))*(sj2)*(x908)))+(x901)+((((IkReal)(-1.00000000000000))*(x903)*(x907))));
evalcond[3]=((((cj2)*(x901)))+((((IkReal)(-1.00000000000000))*(x907)))+((((IkReal)(-1.00000000000000))*(x909)))+((((IkReal)(-1.00000000000000))*(cj2)*(x905)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x904)*(x907)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x904)*(x909)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x902)*(x906)))+(((x902)*(x908))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x910=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x911=(((IkReal)(0.300000000000000))*(cj3));
IkReal x912=((x911)+(x910));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x912)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x912));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst24;
gconst24=IKsign((((px)*(px))+((py)*(py))));
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
gconst25=IKsign(((((sj2)*((px)*(px))))+(((sj2)*((py)*(py))))));
dummyeval[0]=((((sj2)*((px)*(px))))+(((sj2)*((py)*(py)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x913=(sj2)*(sj2);
IkReal x914=((cj2)*(sj2));
IkReal x915=(((IkReal)(0.300000000000000))*(sj3));
IkReal x916=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x917=((py)*(x913));
IkReal x918=((px)*(x913));
if( IKabs(((gconst25)*(((((x916)*(x918)))+((((IkReal)(-1.00000000000000))*(py)*(x914)*(x915)))+((((IkReal)(-0.0450000000000000))*(x918)))+((((IkReal)(-1.00000000000000))*(x915)*(x918)))+((((IkReal)(-0.0450000000000000))*(py)*(x914)))+(((py)*(x914)*(x916))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((x915)*(x917)))+((((IkReal)(-1.00000000000000))*(px)*(x914)*(x915)))+((((IkReal)(0.0450000000000000))*(x917)))+((((IkReal)(-0.0450000000000000))*(px)*(x914)))+(((px)*(x914)*(x916)))+((((IkReal)(-1.00000000000000))*(x916)*(x917))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst25)*(((((x916)*(x918)))+((((IkReal)(-1.00000000000000))*(py)*(x914)*(x915)))+((((IkReal)(-0.0450000000000000))*(x918)))+((((IkReal)(-1.00000000000000))*(x915)*(x918)))+((((IkReal)(-0.0450000000000000))*(py)*(x914)))+(((py)*(x914)*(x916)))))), ((gconst25)*(((((x915)*(x917)))+((((IkReal)(-1.00000000000000))*(px)*(x914)*(x915)))+((((IkReal)(0.0450000000000000))*(x917)))+((((IkReal)(-0.0450000000000000))*(px)*(x914)))+(((px)*(x914)*(x916)))+((((IkReal)(-1.00000000000000))*(x916)*(x917)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x919=IKsin(j0);
IkReal x920=IKcos(j0);
IkReal x921=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x922=(((IkReal)(0.300000000000000))*(sj3));
IkReal x923=(((IkReal)(0.0900000000000000))*(sj2));
IkReal x924=((py)*(sj2));
IkReal x925=((cj2)*(py));
IkReal x926=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x927=((px)*(x919));
IkReal x928=(((IkReal)(1.00000000000000))*(x920));
IkReal x929=(((IkReal)(1.00000000000000))*(x919));
IkReal x930=((cj2)*(px)*(x920));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x921)))+(x927)+(x921)+(((sj2)*(x922)))+((((IkReal)(-1.00000000000000))*(py)*(x928))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(sj2)*(x928)))+(((cj2)*(x927)))+((((IkReal)(-1.00000000000000))*(x924)*(x929)))+((((IkReal)(-1.00000000000000))*(x925)*(x928))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x922)+(((x919)*(x925)))+((((IkReal)(-1.00000000000000))*(x924)*(x928)))+(x930)+((((IkReal)(-1.00000000000000))*(x926)))+(((sj2)*(x927))));
evalcond[3]=((((cj2)*(x926)))+((((IkReal)(-1.00000000000000))*(cj2)*(x922)))+((((IkReal)(-1.00000000000000))*(py)*(x929)))+((((IkReal)(-0.0450000000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(px)*(x928))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x930)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x923)*(x927)))+((((IkReal)(-0.0900000000000000))*(x919)*(x925)))+((((IkReal)(-1.00000000000000))*(pp)))+(((py)*(x920)*(x923))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x931=(((IkReal)(0.0450000000000000))*(py));
IkReal x932=((cj3)*(sj2));
IkReal x933=(((IkReal)(0.300000000000000))*(sj3));
IkReal x934=(((IkReal)(0.0450000000000000))*(px));
IkReal x935=((cj2)*(cj3));
if( IKabs(((gconst24)*((((((IkReal)(-1.00000000000000))*(sj2)*(x934)))+(((x931)*(x935)))+((((IkReal)(-1.00000000000000))*(px)*(sj2)*(x933)))+(((x932)*(x934)))+((((IkReal)(-1.00000000000000))*(cj2)*(x931)))+((((IkReal)(-1.00000000000000))*(cj2)*(py)*(x933))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((x934)*(x935)))+((((IkReal)(-1.00000000000000))*(cj2)*(x934)))+((((IkReal)(-1.00000000000000))*(x931)*(x932)))+(((sj2)*(x931)))+((((IkReal)(-1.00000000000000))*(cj2)*(px)*(x933)))+(((py)*(sj2)*(x933))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst24)*((((((IkReal)(-1.00000000000000))*(sj2)*(x934)))+(((x931)*(x935)))+((((IkReal)(-1.00000000000000))*(px)*(sj2)*(x933)))+(((x932)*(x934)))+((((IkReal)(-1.00000000000000))*(cj2)*(x931)))+((((IkReal)(-1.00000000000000))*(cj2)*(py)*(x933)))))), ((gconst24)*(((((x934)*(x935)))+((((IkReal)(-1.00000000000000))*(cj2)*(x934)))+((((IkReal)(-1.00000000000000))*(x931)*(x932)))+(((sj2)*(x931)))+((((IkReal)(-1.00000000000000))*(cj2)*(px)*(x933)))+(((py)*(sj2)*(x933)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x936=IKsin(j0);
IkReal x937=IKcos(j0);
IkReal x938=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x939=(((IkReal)(0.300000000000000))*(sj3));
IkReal x940=(((IkReal)(0.0900000000000000))*(sj2));
IkReal x941=((py)*(sj2));
IkReal x942=((cj2)*(py));
IkReal x943=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x944=((px)*(x936));
IkReal x945=(((IkReal)(1.00000000000000))*(x937));
IkReal x946=(((IkReal)(1.00000000000000))*(x936));
IkReal x947=((cj2)*(px)*(x937));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x938)))+(x944)+(x938)+((((IkReal)(-1.00000000000000))*(py)*(x945)))+(((sj2)*(x939))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x942)*(x945)))+(((cj2)*(x944)))+((((IkReal)(-1.00000000000000))*(x941)*(x946)))+((((IkReal)(-1.00000000000000))*(px)*(sj2)*(x945))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x936)*(x942)))+((((IkReal)(-1.00000000000000))*(x941)*(x945)))+((((IkReal)(-1.00000000000000))*(x943)))+(x947)+(x939)+(((sj2)*(x944))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(px)*(x945)))+((((IkReal)(-1.00000000000000))*(py)*(x946)))+((((IkReal)(-0.0450000000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(cj2)*(x939)))+(((cj2)*(x943))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x940)*(x944)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(x936)*(x942)))+((((IkReal)(-0.0900000000000000))*(x947)))+((((IkReal)(-1.00000000000000))*(pp)))+(((py)*(x937)*(x940))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-0.550000000000000))*(cj1)))+((((IkReal)(-0.300000000000000))*(cj1)*(cj3)))+(pz)+((((IkReal)(-0.0450000000000000))*(cj1)*(sj3))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
gconst26=IKsign(py);
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj1;
dummyeval[1]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x948=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x948;
evalcond[3]=x948;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x949=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x949)))+((((IkReal)(11.1111111111111))*(pp)*(x949)))+((((IkReal)(-12.2222222222222))*(pz)*(x949))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x950=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x951=(((IkReal)(0.0450000000000000))*(x950));
cj0array[0]=((x951)+((((IkReal)(-1.00000000000000))*(cj3)*(x951)))+((((IkReal)(0.300000000000000))*(sj3)*(x950))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x952=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x952;
evalcond[3]=x952;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x953=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x953)))+((((IkReal)(11.1111111111111))*(pp)*(x953)))+((((IkReal)(-12.2222222222222))*(pz)*(x953))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x954=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x955=(((IkReal)(0.0450000000000000))*(x954));
cj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x954)))+(x955)+((((IkReal)(-1.00000000000000))*(cj3)*(x955))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x956=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x957=(((IkReal)(0.300000000000000))*(cj3));
IkReal x958=((x957)+(x956));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x958))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x958)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x959=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x959)))+((((IkReal)(2.36111111111111))*(x959)))+((((IkReal)(11.1111111111111))*(pp)*(x959))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x960=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x961=(((IkReal)(0.0450000000000000))*(x960));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x961)))+(x961)+((((IkReal)(0.300000000000000))*(sj3)*(x960))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x962=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x963=(((IkReal)(0.300000000000000))*(cj3));
IkReal x964=((x962)+(x963));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x964)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x964));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x965=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x965)))+((((IkReal)(2.36111111111111))*(x965)))+((((IkReal)(11.1111111111111))*(pp)*(x965))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x966=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x967=(((IkReal)(0.0450000000000000))*(x966));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x967)))+((((IkReal)(0.300000000000000))*(sj3)*(x966)))+(x967));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x968=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
if( IKabs(((x968)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x968)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x968)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))))+IKsqr(((x968)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x968)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))), ((x968)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x969=IKsin(j0);
IkReal x970=IKcos(j0);
IkReal x971=((cj1)*(pz));
IkReal x972=(((IkReal)(0.300000000000000))*(cj3));
IkReal x973=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x974=((py)*(x969));
IkReal x975=((py)*(x970));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x973)))+(x971)+((((IkReal)(-1.00000000000000))*(x972)))+(((sj1)*(x974))));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x975))));
evalcond[2]=((((cj1)*(x974)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=((((sj1)*(x973)))+(((sj1)*(x972)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x974))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x971)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x975)))+((((IkReal)(1.10000000000000))*(sj1)*(x974))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x976=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
if( IKabs(((pz)*(sj1)*(x976)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x976)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((pz)*(sj1)*(x976)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))))+IKsqr(((x976)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((pz)*(sj1)*(x976)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))), ((x976)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x977=IKsin(j0);
IkReal x978=IKcos(j0);
IkReal x979=((cj1)*(pz));
IkReal x980=(((IkReal)(0.300000000000000))*(cj3));
IkReal x981=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x982=((py)*(x977));
IkReal x983=((py)*(x978));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x979)+((((IkReal)(-1.00000000000000))*(x981)))+(((sj1)*(x982)))+((((IkReal)(-1.00000000000000))*(x980))));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x983))));
evalcond[2]=((((cj1)*(x982)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=((((sj1)*(x981)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x982)))+(((sj1)*(x980))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x979)))+((((IkReal)(0.0900000000000000))*(x983)))+((((IkReal)(1.10000000000000))*(sj1)*(x982))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst26)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst26)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3)))))), ((gconst26)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x984=IKsin(j0);
IkReal x985=IKcos(j0);
IkReal x986=((cj1)*(pz));
IkReal x987=(((IkReal)(0.300000000000000))*(cj3));
IkReal x988=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x989=((py)*(x984));
IkReal x990=((py)*(x985));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x986)+((((IkReal)(-1.00000000000000))*(x988)))+((((IkReal)(-1.00000000000000))*(x987)))+(((sj1)*(x989))));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x990))));
evalcond[2]=((((cj1)*(x989)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=(((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x989)))+(((sj1)*(x987)))+(((sj1)*(x988))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x990)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(sj1)*(x989)))+((((IkReal)(1.10000000000000))*(x986))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-0.550000000000000))*(cj1)))+((((IkReal)(-0.300000000000000))*(cj1)*(cj3)))+(pz)+((((IkReal)(-0.0450000000000000))*(cj1)*(sj3))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(py);
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj1;
dummyeval[1]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x991=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x991;
evalcond[3]=x991;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x992=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x992)))+((((IkReal)(-11.1111111111111))*(pp)*(x992)))+((((IkReal)(-2.36111111111111))*(x992))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x993=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x994=(((IkReal)(0.0450000000000000))*(x993));
cj0array[0]=((((cj3)*(x994)))+((((IkReal)(-1.00000000000000))*(x994)))+((((IkReal)(-0.300000000000000))*(sj3)*(x993))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x995=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x995;
evalcond[3]=x995;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x996=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x996)))+((((IkReal)(12.2222222222222))*(pz)*(x996)))+((((IkReal)(-11.1111111111111))*(pp)*(x996))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x997=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x998=(((IkReal)(0.0450000000000000))*(x997));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x997)))+(((cj3)*(x998)))+((((IkReal)(-1.00000000000000))*(x998))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x999=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1000=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1001=((x1000)+(x999));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1001))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x1001)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1002=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x1002)))+((((IkReal)(-11.1111111111111))*(pp)*(x1002)))+((((IkReal)(-12.2222222222222))*(pz)*(x1002))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1003=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1004=(((IkReal)(0.0450000000000000))*(x1003));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1003)))+((((IkReal)(-1.00000000000000))*(x1004)))+(((cj3)*(x1004))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1005=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1006=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1007=((x1006)+(x1005));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1007)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x1007)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1008=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x1008)))+((((IkReal)(-12.2222222222222))*(pz)*(x1008)))+((((IkReal)(-2.36111111111111))*(x1008))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1009=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1010=(((IkReal)(0.0450000000000000))*(x1009));
cj0array[0]=((((cj3)*(x1010)))+((((IkReal)(-1.00000000000000))*(x1010)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1009))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1011=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
if( IKabs(((x1011)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1011)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1011)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))))+IKsqr(((x1011)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1011)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))), ((x1011)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1012=IKsin(j0);
IkReal x1013=IKcos(j0);
IkReal x1014=((cj1)*(pz));
IkReal x1015=(((IkReal)(1.00000000000000))*(py));
IkReal x1016=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1017=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1018=((py)*(sj1)*(x1012));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1017)))+(x1018)+(x1014)+((((IkReal)(-1.00000000000000))*(x1016))));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1013)*(x1015)))+((((IkReal)(0.0450000000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj1)*(x1012)*(x1015)))+(((pz)*(sj1))));
evalcond[3]=((((sj1)*(x1017)))+((((IkReal)(0.550000000000000))*(sj1)))+(((sj1)*(x1016)))+((((IkReal)(-1.00000000000000))*(x1012)*(x1015))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1018)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1014)))+((((IkReal)(-0.0900000000000000))*(py)*(x1013))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1019=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
if( IKabs(((pz)*(sj1)*(x1019)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1019)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((pz)*(sj1)*(x1019)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))))+IKsqr(((x1019)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((pz)*(sj1)*(x1019)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))), ((x1019)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1020=IKsin(j0);
IkReal x1021=IKcos(j0);
IkReal x1022=((cj1)*(pz));
IkReal x1023=(((IkReal)(1.00000000000000))*(py));
IkReal x1024=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1025=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1026=((py)*(sj1)*(x1020));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1024)))+((((IkReal)(-1.00000000000000))*(x1025)))+(x1026)+(x1022));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1021)*(x1023)))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj1)*(x1020)*(x1023)))+(((pz)*(sj1))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1020)*(x1023)))+((((IkReal)(0.550000000000000))*(sj1)))+(((sj1)*(x1024)))+(((sj1)*(x1025))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(x1021)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1026)))+((((IkReal)(1.10000000000000))*(x1022))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst27)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst27)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3)))))), ((gconst27)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1027=IKsin(j0);
IkReal x1028=IKcos(j0);
IkReal x1029=((cj1)*(pz));
IkReal x1030=(((IkReal)(1.00000000000000))*(py));
IkReal x1031=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1032=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1033=((py)*(sj1)*(x1027));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1032)))+(x1033)+((((IkReal)(-1.00000000000000))*(x1031)))+(x1029));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1028)*(x1030))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj1)*(x1027)*(x1030)))+(((pz)*(sj1))));
evalcond[3]=((((sj1)*(x1031)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x1027)*(x1030)))+(((sj1)*(x1032))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(x1028)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1029)))+((((IkReal)(1.10000000000000))*(x1033))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1034=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1034;
evalcond[3]=x1034;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((py)*((sj2)*(sj2))))+(((py)*((cj2)*(cj2))))));
dummyeval[0]=((((py)*((sj2)*(sj2))))+(((py)*((cj2)*(cj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1035=x1034;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1035;
evalcond[3]=x1035;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1036=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x1036)))+((((IkReal)(2.36111111111111))*(x1036)))+((((IkReal)(-12.2222222222222))*(pz)*(x1036))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1037=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1038=(((IkReal)(0.0450000000000000))*(x1037));
cj0array[0]=((x1038)+((((IkReal)(-1.00000000000000))*(cj3)*(x1038)))+((((IkReal)(0.300000000000000))*(sj3)*(x1037))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1039=x1034;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1039;
evalcond[3]=x1039;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1040=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x1040)))+((((IkReal)(2.36111111111111))*(x1040)))+((((IkReal)(11.1111111111111))*(pp)*(x1040))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1041=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1042=(((IkReal)(0.0450000000000000))*(x1041));
cj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1041)))+(x1042)+((((IkReal)(-1.00000000000000))*(cj3)*(x1042))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1043=x1034;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1043;
evalcond[3]=x1043;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1044=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x1044)))+((((IkReal)(-11.1111111111111))*(pp)*(x1044)))+((((IkReal)(12.2222222222222))*(pz)*(x1044))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1045=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1046=(((IkReal)(0.0450000000000000))*(x1045));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x1046)))+(((cj3)*(x1046)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1045))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1047=x1034;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1047;
evalcond[3]=x1047;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1048=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x1048)))+((((IkReal)(-2.36111111111111))*(x1048)))+((((IkReal)(-11.1111111111111))*(pp)*(x1048))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1049=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1050=(((IkReal)(0.0450000000000000))*(x1049));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1049)))+((((IkReal)(-1.00000000000000))*(x1050)))+(((cj3)*(x1050))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1051=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1052=((cj2)*(sj2));
IkReal x1053=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1054=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((x1051)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1054)))+(((cj2)*(x1053)))+(x1054))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1051)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1052)))+(((x1052)*(x1053)))+((((IkReal)(0.0450000000000000))*(x1052))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1051)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1054)))+(((cj2)*(x1053)))+(x1054)))))+IKsqr(((x1051)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1052)))+(((x1052)*(x1053)))+((((IkReal)(0.0450000000000000))*(x1052)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1051)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1054)))+(((cj2)*(x1053)))+(x1054)))), ((x1051)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1052)))+(((x1052)*(x1053)))+((((IkReal)(0.0450000000000000))*(x1052)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1055=IKcos(j0);
IkReal x1056=IKsin(j0);
IkReal x1057=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1058=(((IkReal)(1.00000000000000))*(py));
IkReal x1059=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1060=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1061=((py)*(x1056));
IkReal x1062=((py)*(sj2)*(x1055));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1057)))+(x1057)+((((IkReal)(-1.00000000000000))*(x1055)*(x1058)))+(((sj2)*(x1060))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1055)*(x1058)))+(((sj2)*(x1061))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(sj2)*(x1055)*(x1058)))+((((IkReal)(-1.00000000000000))*(x1059)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1056)*(x1058)))+(x1060));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1059)))+((((IkReal)(-1.00000000000000))*(x1056)*(x1058)))+(((cj2)*(x1060)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(cj2)*(x1061)))+((((IkReal)(0.0900000000000000))*(x1062)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1063=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1064=((cj2)*(sj2));
IkReal x1065=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1066=(((IkReal)(0.0450000000000000))*(sj2));
if( IKabs(((x1063)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1064)))+(((x1064)*(x1065)))+((((IkReal)(0.0450000000000000))*(x1064))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1063)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1066)))+(((sj2)*(x1065)))+(x1066))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1063)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1064)))+(((x1064)*(x1065)))+((((IkReal)(0.0450000000000000))*(x1064)))))))+IKsqr(((x1063)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1066)))+(((sj2)*(x1065)))+(x1066)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1063)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1064)))+(((x1064)*(x1065)))+((((IkReal)(0.0450000000000000))*(x1064)))))), ((x1063)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1066)))+(((sj2)*(x1065)))+(x1066)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1067=IKcos(j0);
IkReal x1068=IKsin(j0);
IkReal x1069=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1070=(((IkReal)(1.00000000000000))*(py));
IkReal x1071=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1072=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1073=((py)*(x1068));
IkReal x1074=((py)*(sj2)*(x1067));
evalcond[0]=((((sj2)*(x1072)))+(x1069)+((((IkReal)(-1.00000000000000))*(x1067)*(x1070)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1069))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1067)*(x1070)))+(((sj2)*(x1073))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(sj2)*(x1067)*(x1070)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1068)*(x1070)))+((((IkReal)(-1.00000000000000))*(x1071)))+(x1072));
evalcond[3]=((((cj2)*(x1072)))+((((IkReal)(-1.00000000000000))*(x1068)*(x1070)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1071)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1074)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(cj2)*(x1073))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1075=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1076=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1077=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((gconst28)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1077)))+(x1077)+(((cj2)*(x1076))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((sj2)*(x1076)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1075)))+(x1075))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst28)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1077)))+(x1077)+(((cj2)*(x1076)))))), ((gconst28)*(((((sj2)*(x1076)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1075)))+(x1075)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1078=IKcos(j0);
IkReal x1079=IKsin(j0);
IkReal x1080=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1081=(((IkReal)(1.00000000000000))*(py));
IkReal x1082=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1083=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1084=((py)*(x1079));
IkReal x1085=((py)*(sj2)*(x1078));
evalcond[0]=((x1080)+((((IkReal)(-1.00000000000000))*(x1078)*(x1081)))+(((sj2)*(x1083)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1080))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1078)*(x1081)))+(((sj2)*(x1084))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1083)+((((IkReal)(-1.00000000000000))*(cj2)*(x1079)*(x1081)))+((((IkReal)(-1.00000000000000))*(x1082)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1078)*(x1081))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1082)))+(((cj2)*(x1083)))+((((IkReal)(-1.00000000000000))*(x1079)*(x1081)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1085)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(cj2)*(x1084))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1086=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1087=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1088=((x1087)+(x1086));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1088)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x1088)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign(((((py)*((sj2)*(sj2))))+(((py)*((cj2)*(cj2))))));
dummyeval[0]=((((py)*((sj2)*(sj2))))+(((py)*((cj2)*(cj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1089=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1090=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1091=((x1089)+(x1090));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1091)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1091));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1092=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x1092)))+((((IkReal)(12.2222222222222))*(pz)*(x1092)))+((((IkReal)(11.1111111111111))*(pp)*(x1092))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1093=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1094=(((IkReal)(0.0450000000000000))*(x1093));
cj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1093)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1094)))+(x1094));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1095=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1096=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1097=((x1095)+(x1096));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1097)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1097));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1098=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x1098)))+((((IkReal)(2.36111111111111))*(x1098)))+((((IkReal)(12.2222222222222))*(pz)*(x1098))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1099=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1100=(((IkReal)(0.0450000000000000))*(x1099));
cj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1099)))+(x1100)+((((IkReal)(-1.00000000000000))*(cj3)*(x1100))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(py)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1101=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1102=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1103=((x1102)+(x1101));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1103))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x1103)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1104=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x1104)))+((((IkReal)(-11.1111111111111))*(pp)*(x1104)))+((((IkReal)(-12.2222222222222))*(pz)*(x1104))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1105=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1106=(((IkReal)(0.0450000000000000))*(x1105));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x1106)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1105)))+(((cj3)*(x1106))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1107=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1108=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1109=((x1107)+(x1108));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1109))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x1109)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=py;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1110=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-2.36111111111111))*(x1110)))+((((IkReal)(-12.2222222222222))*(pz)*(x1110)))+((((IkReal)(-11.1111111111111))*(pp)*(x1110))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(py)*(IKcos(j0)))));
evalcond[1]=((py)*(IKsin(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1111=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1112=(((IkReal)(0.0450000000000000))*(x1111));
cj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1111)))+(((cj3)*(x1112)))+((((IkReal)(-1.00000000000000))*(x1112))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((py)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(py)*(IKcos(j0))))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1113=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1114=((cj2)*(sj2));
IkReal x1115=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1116=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((x1113)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1115)))+(((cj3)*(x1116)))+((((IkReal)(-1.00000000000000))*(x1116))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1113)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(0.0450000000000000))*(x1114)))+((((IkReal)(-0.0450000000000000))*(cj3)*(x1114)))+(((x1114)*(x1115))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1113)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1115)))+(((cj3)*(x1116)))+((((IkReal)(-1.00000000000000))*(x1116)))))))+IKsqr(((x1113)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(0.0450000000000000))*(x1114)))+((((IkReal)(-0.0450000000000000))*(cj3)*(x1114)))+(((x1114)*(x1115)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1113)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1115)))+(((cj3)*(x1116)))+((((IkReal)(-1.00000000000000))*(x1116)))))), ((x1113)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(0.0450000000000000))*(x1114)))+((((IkReal)(-0.0450000000000000))*(cj3)*(x1114)))+(((x1114)*(x1115)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1117=IKcos(j0);
IkReal x1118=IKsin(j0);
IkReal x1119=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1120=(((IkReal)(1.00000000000000))*(py));
IkReal x1121=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1122=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1123=((py)*(sj2)*(x1117));
IkReal x1124=((cj2)*(py)*(x1118));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1119)))+(((sj2)*(x1122)))+(x1119)+((((IkReal)(-1.00000000000000))*(x1117)*(x1120))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj2)*(x1118)*(x1120)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1117)*(x1120))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(sj2)*(x1117)*(x1120)))+(x1122)+(x1124)+((((IkReal)(-1.00000000000000))*(x1121))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1118)*(x1120)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1122)))+(((cj2)*(x1121)))+((((IkReal)(-0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1123)))+((((IkReal)(-0.0900000000000000))*(x1124))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1125=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1126=((cj2)*(sj2));
IkReal x1127=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1128=(((IkReal)(0.0450000000000000))*(sj2));
if( IKabs(((x1125)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(x1126)))+((((IkReal)(-1.00000000000000))*(x1126)*(x1127)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1126))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1125)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1128)))+(((sj2)*(x1127)))+(x1128))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1125)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(x1126)))+((((IkReal)(-1.00000000000000))*(x1126)*(x1127)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1126)))))))+IKsqr(((x1125)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1128)))+(((sj2)*(x1127)))+(x1128)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1125)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(x1126)))+((((IkReal)(-1.00000000000000))*(x1126)*(x1127)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1126)))))), ((x1125)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1128)))+(((sj2)*(x1127)))+(x1128)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1129=IKcos(j0);
IkReal x1130=IKsin(j0);
IkReal x1131=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1132=(((IkReal)(1.00000000000000))*(py));
IkReal x1133=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1134=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1135=((py)*(sj2)*(x1129));
IkReal x1136=((cj2)*(py)*(x1130));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x1129)*(x1132)))+(x1131)+(((sj2)*(x1134)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1131))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1129)*(x1132)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1130)*(x1132))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1136)+(x1134)+((((IkReal)(-1.00000000000000))*(sj2)*(x1129)*(x1132)))+((((IkReal)(-1.00000000000000))*(x1133))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1134)))+((((IkReal)(-0.0450000000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(x1130)*(x1132)))+(((cj2)*(x1133))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1136)))+((((IkReal)(0.0900000000000000))*(x1135))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1137=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1138=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1139=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((gconst29)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1138)))+(((cj3)*(x1139)))+((((IkReal)(-1.00000000000000))*(x1139))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((x1137)+((((IkReal)(-1.00000000000000))*(cj3)*(x1137)))+(((sj2)*(x1138))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst29)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1138)))+(((cj3)*(x1139)))+((((IkReal)(-1.00000000000000))*(x1139)))))), ((gconst29)*(((x1137)+((((IkReal)(-1.00000000000000))*(cj3)*(x1137)))+(((sj2)*(x1138)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1140=IKcos(j0);
IkReal x1141=IKsin(j0);
IkReal x1142=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1143=(((IkReal)(1.00000000000000))*(py));
IkReal x1144=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1145=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1146=((py)*(sj2)*(x1140));
IkReal x1147=((cj2)*(py)*(x1141));
evalcond[0]=((x1142)+((((IkReal)(-1.00000000000000))*(cj3)*(x1142)))+((((IkReal)(-1.00000000000000))*(x1140)*(x1143)))+(((sj2)*(x1145))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj2)*(x1141)*(x1143)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1140)*(x1143))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1147)+(x1145)+((((IkReal)(-1.00000000000000))*(x1144)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1140)*(x1143))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1141)*(x1143)))+((((IkReal)(-0.0450000000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1145)))+(((cj2)*(x1144))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x1146)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(x1147)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-0.550000000000000))*(cj1)))+((((IkReal)(-0.300000000000000))*(cj1)*(cj3)))+(pz)+((((IkReal)(-0.0450000000000000))*(cj1)*(sj3))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(px);
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=px;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=px;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1148=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1148;
evalcond[3]=x1148;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1149=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x1149)))+((((IkReal)(12.2222222222222))*(pz)*(x1149)))+((((IkReal)(-2.36111111111111))*(x1149))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1150=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1151=(((IkReal)(0.0450000000000000))*(x1150));
sj0array[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1150)))+((((IkReal)(-1.00000000000000))*(x1151)))+(((cj3)*(x1151))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1152=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1152;
evalcond[3]=x1152;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1153=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x1153)))+((((IkReal)(-11.1111111111111))*(pp)*(x1153)))+((((IkReal)(-2.36111111111111))*(x1153))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1154=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1155=(((IkReal)(0.0450000000000000))*(x1154));
sj0array[0]=((((cj3)*(x1155)))+((((IkReal)(-1.00000000000000))*(x1155)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1154))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1156=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1157=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1158=((x1157)+(x1156));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1158))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1158));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1159=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x1159)))+((((IkReal)(-2.36111111111111))*(x1159)))+((((IkReal)(-11.1111111111111))*(pp)*(x1159))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1160=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1161=(((IkReal)(0.0450000000000000))*(x1160));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x1161)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1160)))+(((cj3)*(x1161))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1162=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1163=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1164=((x1162)+(x1163));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1164))));
evalcond[3]=(((IkReal)(0.550000000000000))+(x1164)+(pz));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1165=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x1165)))+((((IkReal)(-12.2222222222222))*(pz)*(x1165)))+((((IkReal)(-2.36111111111111))*(x1165))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1166=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1167=(((IkReal)(0.0450000000000000))*(x1166));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x1167)))+(((cj3)*(x1167)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1166))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1168=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
if( IKabs(((x1168)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1168)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1168)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))))+IKsqr(((x1168)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1168)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))), ((x1168)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1169=IKcos(j0);
IkReal x1170=IKsin(j0);
IkReal x1171=((cj1)*(pz));
IkReal x1172=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1173=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1174=((px)*(x1170));
IkReal x1175=((px)*(x1169));
IkReal x1176=((sj1)*(x1175));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1173)))+((((IkReal)(-1.00000000000000))*(x1172)))+(x1176)+(x1171));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x1174));
evalcond[2]=((((cj1)*(x1175)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=((((sj1)*(x1172)))+(((sj1)*(x1173)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x1175))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x1174)))+((((IkReal)(1.10000000000000))*(x1176)))+((((IkReal)(1.10000000000000))*(x1171)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1177=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
if( IKabs(((x1177)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((pz)*(sj1)*(x1177)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1177)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))))+IKsqr(((pz)*(sj1)*(x1177)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1177)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))), ((pz)*(sj1)*(x1177)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1178=IKcos(j0);
IkReal x1179=IKsin(j0);
IkReal x1180=((cj1)*(pz));
IkReal x1181=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1182=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1183=((px)*(x1179));
IkReal x1184=((px)*(x1178));
IkReal x1185=((sj1)*(x1184));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1182)))+(x1185)+(x1180)+((((IkReal)(-1.00000000000000))*(x1181))));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x1183));
evalcond[2]=((((cj1)*(x1184)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1184)))+(((sj1)*(x1182)))+(((sj1)*(x1181)))+((((IkReal)(0.550000000000000))*(sj1))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1180)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1185)))+((((IkReal)(-0.0900000000000000))*(x1183))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst30)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst30)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))), ((gconst30)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1186=IKcos(j0);
IkReal x1187=IKsin(j0);
IkReal x1188=((cj1)*(pz));
IkReal x1189=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1190=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1191=((px)*(x1187));
IkReal x1192=((px)*(x1186));
IkReal x1193=((sj1)*(x1192));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1189)))+(x1188)+((((IkReal)(-1.00000000000000))*(x1190)))+(x1193));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(x1191));
evalcond[2]=((((cj1)*(x1192)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1192)))+((((IkReal)(0.550000000000000))*(sj1)))+(((sj1)*(x1190)))+(((sj1)*(x1189))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x1191)))+((((IkReal)(1.10000000000000))*(x1188)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1193))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-0.550000000000000))*(cj1)))+((((IkReal)(-0.300000000000000))*(cj1)*(cj3)))+(pz)+((((IkReal)(-0.0450000000000000))*(cj1)*(sj3))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst31;
gconst31=IKsign(px);
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=px;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=px;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1194=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1194;
evalcond[3]=x1194;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1195=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x1195)))+((((IkReal)(11.1111111111111))*(pp)*(x1195)))+((((IkReal)(-12.2222222222222))*(pz)*(x1195))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1196=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1197=(((IkReal)(0.0450000000000000))*(x1196));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1197)))+(x1197)+((((IkReal)(0.300000000000000))*(sj3)*(x1196))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1198=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1198;
evalcond[3]=x1198;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1199=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x1199)))+((((IkReal)(2.36111111111111))*(x1199)))+((((IkReal)(-12.2222222222222))*(pz)*(x1199))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1200=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1201=(((IkReal)(0.0450000000000000))*(x1200));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1200)))+(x1201)+((((IkReal)(-1.00000000000000))*(cj3)*(x1201))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1202=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1203=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1204=((x1203)+(x1202));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j1)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1204))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1204));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1205=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(2.36111111111111))*(x1205)))+((((IkReal)(11.1111111111111))*(pp)*(x1205)))+((((IkReal)(12.2222222222222))*(pz)*(x1205))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1206=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1207=(((IkReal)(0.0450000000000000))*(x1206));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1206)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1207)))+(x1207));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1208=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1209=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1210=((x1209)+(x1208));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1210)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1210));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1211=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x1211)))+((((IkReal)(11.1111111111111))*(pp)*(x1211)))+((((IkReal)(2.36111111111111))*(x1211))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1212=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1213=(((IkReal)(0.0450000000000000))*(x1212));
sj0array[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1212)))+(x1213)+((((IkReal)(-1.00000000000000))*(cj3)*(x1213))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1214=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
if( IKabs(((x1214)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1214)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1214)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))))+IKsqr(((x1214)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1214)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))), ((x1214)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+((((IkReal)(-1.00000000000000))*(cj1)*(pz)))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1215=IKcos(j0);
IkReal x1216=IKsin(j0);
IkReal x1217=((cj1)*(pz));
IkReal x1218=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1219=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1220=((px)*(x1216));
IkReal x1221=((px)*(sj1)*(x1215));
IkReal x1222=(((IkReal)(1.00000000000000))*(px)*(x1215));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x1221)+(x1217)+((((IkReal)(-1.00000000000000))*(x1218)))+((((IkReal)(-1.00000000000000))*(x1219))));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+(x1220)+((((IkReal)(0.0450000000000000))*(cj3))));
evalcond[2]=((((pz)*(sj1)))+((((IkReal)(-1.00000000000000))*(cj1)*(x1222))));
evalcond[3]=((((sj1)*(x1219)))+((((IkReal)(-1.00000000000000))*(x1222)))+(((sj1)*(x1218)))+((((IkReal)(0.550000000000000))*(sj1))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1217)))+((((IkReal)(0.0900000000000000))*(x1220)))+((((IkReal)(1.10000000000000))*(x1221))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1223=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
if( IKabs(((x1223)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((pz)*(sj1)*(x1223)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1223)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))))+IKsqr(((pz)*(sj1)*(x1223)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1223)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))), ((pz)*(sj1)*(x1223)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1224=IKcos(j0);
IkReal x1225=IKsin(j0);
IkReal x1226=((cj1)*(pz));
IkReal x1227=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1228=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1229=((px)*(x1225));
IkReal x1230=((px)*(sj1)*(x1224));
IkReal x1231=(((IkReal)(1.00000000000000))*(px)*(x1224));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1227)))+(x1226)+((((IkReal)(-1.00000000000000))*(x1228)))+(x1230));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+(x1229)+((((IkReal)(0.0450000000000000))*(cj3))));
evalcond[2]=((((pz)*(sj1)))+((((IkReal)(-1.00000000000000))*(cj1)*(x1231))));
evalcond[3]=((((sj1)*(x1228)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x1231)))+(((sj1)*(x1227))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1230)))+((((IkReal)(0.0900000000000000))*(x1229)))+((((IkReal)(1.10000000000000))*(x1226)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst31)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst31)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))), ((gconst31)*((((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.300000000000000))*(cj3)*(sj1)))+((((IkReal)(0.0450000000000000))*(sj1)*(sj3)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1232=IKcos(j0);
IkReal x1233=IKsin(j0);
IkReal x1234=((cj1)*(pz));
IkReal x1235=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1236=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1237=((px)*(x1233));
IkReal x1238=((px)*(sj1)*(x1232));
IkReal x1239=(((IkReal)(1.00000000000000))*(px)*(x1232));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1235)))+(x1234)+(x1238)+((((IkReal)(-1.00000000000000))*(x1236))));
evalcond[1]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(x1237));
evalcond[2]=((((pz)*(sj1)))+((((IkReal)(-1.00000000000000))*(cj1)*(x1239))));
evalcond[3]=(((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(-1.00000000000000))*(x1239)))+(((sj1)*(x1235)))+(((sj1)*(x1236))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1237)))+((((IkReal)(1.10000000000000))*(x1238)))+((((IkReal)(1.10000000000000))*(x1234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1240=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))+(pz));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j1)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1240;
evalcond[3]=x1240;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
gconst32=IKsign(((((px)*((sj2)*(sj2))))+(((px)*((cj2)*(cj2))))));
dummyeval[0]=((((px)*((sj2)*(sj2))))+(((px)*((cj2)*(cj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=px;
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj2;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1241=x1240;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1241;
evalcond[3]=x1241;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1242=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x1242)))+((((IkReal)(-2.36111111111111))*(x1242)))+((((IkReal)(-11.1111111111111))*(pp)*(x1242))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1243=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1244=(((IkReal)(0.0450000000000000))*(x1243));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x1244)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1243)))+(((cj3)*(x1244))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1245=x1240;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1245;
evalcond[3]=x1245;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1246=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(12.2222222222222))*(pz)*(x1246)))+((((IkReal)(-11.1111111111111))*(pp)*(x1246)))+((((IkReal)(-2.36111111111111))*(x1246))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=((px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1247=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1248=(((IkReal)(0.0450000000000000))*(x1247));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(x1248)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1247)))+(((cj3)*(x1248))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKsin(j0))))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1249=x1240;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1249;
evalcond[3]=x1249;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1250=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(-12.2222222222222))*(pz)*(x1250)))+((((IkReal)(11.1111111111111))*(pp)*(x1250)))+((((IkReal)(2.36111111111111))*(x1250))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1251=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1252=(((IkReal)(0.0450000000000000))*(x1251));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1252)))+(x1252)+((((IkReal)(0.300000000000000))*(sj3)*(x1251))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1253=x1240;
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1253;
evalcond[3]=x1253;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1254=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
sj0array[0]=(((((IkReal)(11.1111111111111))*(pp)*(x1254)))+((((IkReal)(2.36111111111111))*(x1254)))+((((IkReal)(-12.2222222222222))*(pz)*(x1254))));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))+(((px)*(IKsin(j0)))));
evalcond[1]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1255=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1256=(((IkReal)(0.0450000000000000))*(x1255));
sj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1256)))+((((IkReal)(0.300000000000000))*(sj3)*(x1255)))+(x1256));
if( sj0array[0] >= -1-IKFAST_SINCOS_THRESH && sj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKasin(sj0array[0]);
    cj0array[0] = IKcos(j0array[0]);
    sj0array[1] = sj0array[0];
    j0array[1] = j0array[0] > 0 ? (IKPI-j0array[0]) : (-IKPI-j0array[0]);
    cj0array[1] = -cj0array[0];
}
else if( isnan(sj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=(((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(px)*(IKsin(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1257=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1258=((cj2)*(sj2));
IkReal x1259=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1260=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((x1257)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(x1258)*(x1259)))+((((IkReal)(-0.0450000000000000))*(x1258)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1258))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1257)*(((((cj2)*(x1259)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1260)))+(x1260))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1257)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(x1258)*(x1259)))+((((IkReal)(-0.0450000000000000))*(x1258)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1258)))))))+IKsqr(((x1257)*(((((cj2)*(x1259)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1260)))+(x1260)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1257)*(((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(x1258)*(x1259)))+((((IkReal)(-0.0450000000000000))*(x1258)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1258)))))), ((x1257)*(((((cj2)*(x1259)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1260)))+(x1260)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1261=IKsin(j0);
IkReal x1262=IKcos(j0);
IkReal x1263=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1264=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1265=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1266=((px)*(x1261));
IkReal x1267=((px)*(x1262));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1263)))+(((sj2)*(x1265)))+(x1263)+(x1266));
evalcond[1]=((((cj2)*(x1266)))+(((sj2)*(x1267))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(cj2)*(x1267)))+((((IkReal)(-1.00000000000000))*(x1264)))+(x1265)+(((sj2)*(x1266))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1264)))+((((IkReal)(-1.00000000000000))*(x1267)))+(((cj2)*(x1265)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(cj2)*(x1267)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(sj2)*(x1266)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1268=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1269=((cj2)*(sj2));
IkReal x1270=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1271=(((IkReal)(0.0450000000000000))*(sj2));
if( IKabs(((x1268)*(((((cj3)*(x1271)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1270)))+((((IkReal)(-1.00000000000000))*(x1271))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1268)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1269)))+(((x1269)*(x1270)))+((((IkReal)(0.0450000000000000))*(x1269))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1268)*(((((cj3)*(x1271)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1270)))+((((IkReal)(-1.00000000000000))*(x1271)))))))+IKsqr(((x1268)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1269)))+(((x1269)*(x1270)))+((((IkReal)(0.0450000000000000))*(x1269)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1268)*(((((cj3)*(x1271)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1270)))+((((IkReal)(-1.00000000000000))*(x1271)))))), ((x1268)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(-0.0450000000000000))*(cj3)*(x1269)))+(((x1269)*(x1270)))+((((IkReal)(0.0450000000000000))*(x1269)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1272=IKsin(j0);
IkReal x1273=IKcos(j0);
IkReal x1274=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1275=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1276=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1277=((px)*(x1272));
IkReal x1278=((px)*(x1273));
evalcond[0]=((x1274)+(x1277)+(((sj2)*(x1276)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1274))));
evalcond[1]=((((cj2)*(x1277)))+(((sj2)*(x1278))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1275)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1278)))+(x1276)+(((sj2)*(x1277))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1278)))+(((cj2)*(x1276)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1275)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(cj2)*(x1278)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(sj2)*(x1277)))+((((IkReal)(1.10000000000000))*(pz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1279=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1280=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1281=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((gconst32)*((((((IkReal)(-1.00000000000000))*(x1279)))+(((cj3)*(x1279)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1280))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1281)))+(x1281)+(((cj2)*(x1280))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst32)*((((((IkReal)(-1.00000000000000))*(x1279)))+(((cj3)*(x1279)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1280)))))), ((gconst32)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1281)))+(x1281)+(((cj2)*(x1280)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1282=IKsin(j0);
IkReal x1283=IKcos(j0);
IkReal x1284=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1285=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1286=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1287=((px)*(x1282));
IkReal x1288=((px)*(x1283));
evalcond[0]=((x1284)+(x1287)+(((sj2)*(x1286)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1284))));
evalcond[1]=((((cj2)*(x1287)))+(((sj2)*(x1288))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((sj2)*(x1287)))+(x1286)+((((IkReal)(-1.00000000000000))*(x1285)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1288))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1288)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1285)))+(((cj2)*(x1286)))+((((IkReal)(0.0450000000000000))*(cj2))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(pz)))+((((IkReal)(0.0900000000000000))*(cj2)*(x1288)))+((((IkReal)(-0.0900000000000000))*(sj2)*(x1287))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1289=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1290=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1291=((x1289)+(x1290));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j1, (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1291))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1291));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
gconst33=IKsign(((((px)*((sj2)*(sj2))))+(((px)*((cj2)*(cj2))))));
dummyeval[0]=((((px)*((sj2)*(sj2))))+(((px)*((cj2)*(cj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=px;
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1292=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1293=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1294=((x1292)+(x1293));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1294)))+((((IkReal)(-1.00000000000000))*(pz))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1294));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1295=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(-11.1111111111111))*(pp)*(x1295)))+((((IkReal)(-12.2222222222222))*(pz)*(x1295)))+((((IkReal)(-2.36111111111111))*(x1295))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKsin(j0)));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((px)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1296=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1297=(((IkReal)(0.0450000000000000))*(x1296));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(x1297)))+(((cj3)*(x1297)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1296))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(px)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1298=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1299=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1300=((x1298)+(x1299));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1300))));
evalcond[3]=(((IkReal)(0.550000000000000))+(pz)+(x1300));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1301=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
cj0array[0]=(((((IkReal)(2.36111111111111))*(x1301)))+((((IkReal)(11.1111111111111))*(pp)*(x1301)))+((((IkReal)(12.2222222222222))*(pz)*(x1301))));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKsin(j0)));
evalcond[1]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(px)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1302=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1303=(((IkReal)(0.0450000000000000))*(x1302));
cj0array[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1303)))+((((IkReal)(0.300000000000000))*(sj3)*(x1302)))+(x1303));
if( cj0array[0] >= -1-IKFAST_SINCOS_THRESH && cj0array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j0valid[0] = j0valid[1] = true;
    j0array[0] = IKacos(cj0array[0]);
    sj0array[0] = IKsin(j0array[0]);
    cj0array[1] = cj0array[0];
    j0array[1] = -j0array[0];
    sj0array[1] = -sj0array[0];
}
else if( isnan(cj0array[0]) )
{
    // probably any value will work
    j0valid[0] = true;
    cj0array[0] = 1; sj0array[0] = 0; j0array[0] = 0;
}
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
evalcond[0]=((px)*(IKsin(j0)));
evalcond[1]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(px)*(IKcos(j0)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1304=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1305=((cj2)*(sj2));
IkReal x1306=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1307=(((IkReal)(0.0450000000000000))*(sj2));
if( IKabs(((x1304)*((((((IkReal)(-1.00000000000000))*(sj2)*(x1306)))+(((cj3)*(x1307)))+((((IkReal)(-1.00000000000000))*(x1307))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1304)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(0.0450000000000000))*(cj3)*(x1305)))+((((IkReal)(-0.0450000000000000))*(x1305)))+((((IkReal)(-1.00000000000000))*(x1305)*(x1306))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1304)*((((((IkReal)(-1.00000000000000))*(sj2)*(x1306)))+(((cj3)*(x1307)))+((((IkReal)(-1.00000000000000))*(x1307)))))))+IKsqr(((x1304)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(0.0450000000000000))*(cj3)*(x1305)))+((((IkReal)(-0.0450000000000000))*(x1305)))+((((IkReal)(-1.00000000000000))*(x1305)*(x1306)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((x1304)*((((((IkReal)(-1.00000000000000))*(sj2)*(x1306)))+(((cj3)*(x1307)))+((((IkReal)(-1.00000000000000))*(x1307)))))), ((x1304)*(((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*((((((IkReal)(0.0450000000000000))*(cj3)*(x1305)))+((((IkReal)(-0.0450000000000000))*(x1305)))+((((IkReal)(-1.00000000000000))*(x1305)*(x1306)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1308=IKsin(j0);
IkReal x1309=IKcos(j0);
IkReal x1310=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1311=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1312=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1313=((px)*(x1308));
IkReal x1314=((px)*(x1309));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x1310)))+(x1313)+(x1310)+(((sj2)*(x1312))));
evalcond[1]=((((cj2)*(x1313)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1314))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1312)+(((cj2)*(x1314)))+(((sj2)*(x1313)))+((((IkReal)(-1.00000000000000))*(x1311))));
evalcond[3]=((((cj2)*(x1311)))+((((IkReal)(-0.0450000000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(x1314)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1312))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-0.0900000000000000))*(cj2)*(x1314)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(sj2)*(x1313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1315=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1316=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1317=(((IkReal)(0.0450000000000000))*(cj2));
if( IKabs(((gconst33)*((((((IkReal)(-1.00000000000000))*(sj2)*(x1316)))+(((cj3)*(x1315)))+((((IkReal)(-1.00000000000000))*(x1315))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1316)))+((((IkReal)(-1.00000000000000))*(x1317)))+(((cj3)*(x1317))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst33)*((((((IkReal)(-1.00000000000000))*(sj2)*(x1316)))+(((cj3)*(x1315)))+((((IkReal)(-1.00000000000000))*(x1315)))))), ((gconst33)*((((((IkReal)(-1.00000000000000))*(cj2)*(x1316)))+((((IkReal)(-1.00000000000000))*(x1317)))+(((cj3)*(x1317)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[5];
IkReal x1318=IKsin(j0);
IkReal x1319=IKcos(j0);
IkReal x1320=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1321=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1322=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1323=((px)*(x1318));
IkReal x1324=((px)*(x1319));
evalcond[0]=((((sj2)*(x1322)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1320)))+(x1323)+(x1320));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj2)*(x1324)))+(((cj2)*(x1323))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1321)))+(((sj2)*(x1323)))+(((cj2)*(x1324)))+(x1322));
evalcond[3]=((((cj2)*(x1321)))+((((IkReal)(-0.0450000000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1322)))+((((IkReal)(-1.00000000000000))*(x1324))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(sj2)*(x1323)))+((((IkReal)(-1.10000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(cj2)*(x1324))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1325=(cj1)*(cj1);
IkReal x1326=(sj1)*(sj1);
IkReal x1327=((py)*(sj2));
IkReal x1328=(((IkReal)(0.550000000000000))*(cj1));
IkReal x1329=((cj2)*(px));
IkReal x1330=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1331=((px)*(sj2));
IkReal x1332=((cj1)*(pz));
IkReal x1333=((cj2)*(py));
IkReal x1334=(((IkReal)(0.300000000000000))*(cj2)*(cj3));
IkReal x1335=(((IkReal)(0.300000000000000))*(cj1)*(cj3));
IkReal x1336=(((IkReal)(1.00000000000000))*(pz)*(x1331));
if( IKabs(((gconst1)*(((((x1332)*(x1333)))+((((IkReal)(-1.00000000000000))*(x1330)*(x1333)))+((((IkReal)(-0.550000000000000))*(x1333)))+((((IkReal)(-1.00000000000000))*(x1326)*(x1336)))+(((cj1)*(x1330)*(x1331)))+((((IkReal)(-1.00000000000000))*(x1325)*(x1336)))+((((IkReal)(-0.300000000000000))*(cj3)*(x1333)))+(((x1328)*(x1331)))+(((x1331)*(x1335))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*((((((IkReal)(-0.300000000000000))*(cj3)*(x1329)))+(((pz)*(x1325)*(x1327)))+(((pz)*(x1326)*(x1327)))+((((IkReal)(-0.550000000000000))*(x1329)))+(((x1329)*(x1332)))+((((IkReal)(-1.00000000000000))*(cj1)*(x1327)*(x1330)))+((((IkReal)(-1.00000000000000))*(x1327)*(x1328)))+((((IkReal)(-1.00000000000000))*(x1329)*(x1330)))+((((IkReal)(-1.00000000000000))*(x1327)*(x1335))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((x1332)*(x1333)))+((((IkReal)(-1.00000000000000))*(x1330)*(x1333)))+((((IkReal)(-0.550000000000000))*(x1333)))+((((IkReal)(-1.00000000000000))*(x1326)*(x1336)))+(((cj1)*(x1330)*(x1331)))+((((IkReal)(-1.00000000000000))*(x1325)*(x1336)))+((((IkReal)(-0.300000000000000))*(cj3)*(x1333)))+(((x1328)*(x1331)))+(((x1331)*(x1335)))))), ((gconst1)*((((((IkReal)(-0.300000000000000))*(cj3)*(x1329)))+(((pz)*(x1325)*(x1327)))+(((pz)*(x1326)*(x1327)))+((((IkReal)(-0.550000000000000))*(x1329)))+(((x1329)*(x1332)))+((((IkReal)(-1.00000000000000))*(cj1)*(x1327)*(x1330)))+((((IkReal)(-1.00000000000000))*(x1327)*(x1328)))+((((IkReal)(-1.00000000000000))*(x1329)*(x1330)))+((((IkReal)(-1.00000000000000))*(x1327)*(x1335)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x1337=IKsin(j0);
IkReal x1338=IKcos(j0);
IkReal x1339=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1340=((cj1)*(sj2));
IkReal x1341=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1342=(((IkReal)(0.0900000000000000))*(sj2));
IkReal x1343=((cj1)*(cj2));
IkReal x1344=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1345=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1346=(((IkReal)(1.10000000000000))*(sj1));
IkReal x1347=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1348=((cj1)*(pz));
IkReal x1349=((px)*(x1337));
IkReal x1350=((px)*(x1338));
IkReal x1351=((py)*(x1337));
IkReal x1352=((cj2)*(pz)*(sj1));
IkReal x1353=(((IkReal)(1.00000000000000))*(py)*(x1338));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1341)))+(((sj1)*(x1350)))+(((sj1)*(x1351)))+(x1348)+((((IkReal)(-1.00000000000000))*(x1347))));
evalcond[1]=((x1339)+((((IkReal)(-1.00000000000000))*(x1353)))+(x1349)+((((IkReal)(-1.00000000000000))*(cj3)*(x1339)))+(((sj2)*(x1344))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(pz)*(sj1)*(sj2)))+(((cj2)*(x1349)))+(((x1340)*(x1351)))+((((IkReal)(-1.00000000000000))*(cj2)*(x1353)))+(((x1340)*(x1350))));
evalcond[3]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1343)*(x1350)))+(((sj2)*(x1349)))+(x1352)+((((IkReal)(-1.00000000000000))*(sj2)*(x1353)))+((((IkReal)(-1.00000000000000))*(x1345)))+(x1344)+((((IkReal)(-1.00000000000000))*(x1343)*(x1351))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x1351)))+((((IkReal)(-1.00000000000000))*(x1350)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.0450000000000000))*(x1343)))+((((IkReal)(-1.00000000000000))*(x1343)*(x1345)))+(((x1343)*(x1344)))+(((sj1)*(x1347)))+(((sj1)*(x1341))));
evalcond[5]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x1343)*(x1351)))+((((IkReal)(1.10000000000000))*(x1348)))+((((IkReal)(-1.00000000000000))*(x1342)*(x1349)))+(((py)*(x1338)*(x1342)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1352)))+(((x1346)*(x1350)))+(((x1346)*(x1351)))+((((IkReal)(0.0900000000000000))*(x1343)*(x1350))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1354=(((IkReal)(0.0450000000000000))*(px));
IkReal x1355=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1356=((sj1)*(sj2));
IkReal x1357=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1358=(((IkReal)(1.00000000000000))*(cj1)*(pz));
IkReal x1359=(((IkReal)(0.0450000000000000))*(py)*(x1356));
if( IKabs(((gconst0)*((((((IkReal)(-1.00000000000000))*(x1354)*(x1356)))+(((cj3)*(x1354)*(x1356)))+((((IkReal)(0.550000000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x1358)))+(((py)*(x1355)))+((((IkReal)(-1.00000000000000))*(px)*(x1356)*(x1357)))+((((IkReal)(0.0450000000000000))*(py)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1359)))+(x1359)+((((IkReal)(0.550000000000000))*(px)))+(((sj3)*(x1354)))+(((py)*(x1356)*(x1357)))+(((px)*(x1355)))+((((IkReal)(-1.00000000000000))*(px)*(x1358))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*((((((IkReal)(-1.00000000000000))*(x1354)*(x1356)))+(((cj3)*(x1354)*(x1356)))+((((IkReal)(0.550000000000000))*(py)))+((((IkReal)(-1.00000000000000))*(py)*(x1358)))+(((py)*(x1355)))+((((IkReal)(-1.00000000000000))*(px)*(x1356)*(x1357)))+((((IkReal)(0.0450000000000000))*(py)*(sj3)))))), ((gconst0)*((((((IkReal)(-1.00000000000000))*(cj3)*(x1359)))+(x1359)+((((IkReal)(0.550000000000000))*(px)))+(((sj3)*(x1354)))+(((py)*(x1356)*(x1357)))+(((px)*(x1355)))+((((IkReal)(-1.00000000000000))*(px)*(x1358)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
int ij0;
for(ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x1360=IKsin(j0);
IkReal x1361=IKcos(j0);
IkReal x1362=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1363=((cj1)*(sj2));
IkReal x1364=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1365=(((IkReal)(0.0900000000000000))*(sj2));
IkReal x1366=((cj1)*(cj2));
IkReal x1367=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1368=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1369=(((IkReal)(1.10000000000000))*(sj1));
IkReal x1370=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1371=((cj1)*(pz));
IkReal x1372=((px)*(x1360));
IkReal x1373=((px)*(x1361));
IkReal x1374=((py)*(x1360));
IkReal x1375=((cj2)*(pz)*(sj1));
IkReal x1376=(((IkReal)(1.00000000000000))*(py)*(x1361));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1370)))+((((IkReal)(-1.00000000000000))*(x1364)))+(((sj1)*(x1374)))+(x1371)+(((sj1)*(x1373))));
evalcond[1]=((x1362)+((((IkReal)(-1.00000000000000))*(x1376)))+(x1372)+(((sj2)*(x1367)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1362))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj2)*(x1376)))+((((IkReal)(-1.00000000000000))*(pz)*(sj1)*(sj2)))+(((x1363)*(x1373)))+(((x1363)*(x1374)))+(((cj2)*(x1372))));
evalcond[3]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(sj2)*(x1376)))+(x1367)+((((IkReal)(-1.00000000000000))*(x1368)))+((((IkReal)(-1.00000000000000))*(x1366)*(x1373)))+(((sj2)*(x1372)))+((((IkReal)(-1.00000000000000))*(x1366)*(x1374)))+(x1375));
evalcond[4]=((((sj1)*(x1370)))+((((IkReal)(-1.00000000000000))*(x1374)))+(((x1366)*(x1367)))+(((sj1)*(x1364)))+((((IkReal)(-1.00000000000000))*(x1373)))+((((IkReal)(0.550000000000000))*(sj1)))+((((IkReal)(0.0450000000000000))*(x1366)))+((((IkReal)(-1.00000000000000))*(x1366)*(x1368))));
evalcond[5]=(((IkReal)(-0.212500000000000))+(((x1369)*(x1374)))+((((IkReal)(1.10000000000000))*(x1371)))+((((IkReal)(-0.0900000000000000))*(x1375)))+((((IkReal)(0.0900000000000000))*(x1366)*(x1373)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1369)*(x1373)))+((((IkReal)(0.0900000000000000))*(x1366)*(x1374)))+(((py)*(x1361)*(x1365)))+((((IkReal)(-1.00000000000000))*(x1365)*(x1372))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x1377=(((IkReal)(0.0450000000000000))*(sj2));
if( IKabs((((IkReal)(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH && IKabs(px) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1378=(((IkReal)(1.00000000000000))*(IKatan2((((IkReal)(-1.00000000000000))*(py)), px)));
if( ((((px)*(px))+((py)*(py)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IkReal)1.0e30))*((((((IkReal)(0.300000000000000))*(sj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1377)))+(x1377))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IkReal)1.0e30))*((((((IkReal)(0.300000000000000))*(sj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1377)))+(x1377))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1379=IKasin(((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IkReal)1.0e30))*((((((IkReal)(0.300000000000000))*(sj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1377)))+(x1377)))));
j0array[0]=(((((IkReal)(-1.00000000000000))*(x1379)))+((((IkReal)(-1.00000000000000))*(x1378))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1378)))+(x1379));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
IkReal x1380=(cj2)*(cj2);
IkReal x1381=(py)*(py);
IkReal x1382=(sj2)*(sj2);
IkReal x1383=IKcos(j0);
IkReal x1384=IKsin(j0);
IkReal x1385=(px)*(px);
IkReal x1386=(((IkReal)(0.0450000000000000))*(sj2));
IkReal x1387=(((IkReal)(1.00000000000000))*(x1385));
IkReal x1388=(((IkReal)(0.300000000000000))*(sj2)*(sj3));
IkReal x1389=((px)*(py)*(x1382));
IkReal x1390=((px)*(py)*(x1380));
evalcond[0]=((((x1383)*(((((x1381)*(x1382)))+(((x1380)*(x1381)))))))+((((IkReal)(-1.00000000000000))*(py)*(x1386)))+(((x1384)*((((((IkReal)(-1.00000000000000))*(x1390)))+((((IkReal)(-1.00000000000000))*(x1389)))))))+(((cj3)*(py)*(x1386)))+((((IkReal)(-1.00000000000000))*(py)*(x1388))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(px)*(x1388)))+(((cj3)*(px)*(x1386)))+((((IkReal)(-1.00000000000000))*(px)*(x1386)))+(((x1384)*((((((IkReal)(-1.00000000000000))*(x1382)*(x1387)))+((((IkReal)(-1.00000000000000))*(x1380)*(x1387)))))))+(((x1383)*(((x1389)+(x1390))))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst34;
IkReal x1391=((cj2)*(pz));
IkReal x1392=((py)*(sj0));
IkReal x1393=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1394=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1395=((cj0)*(px));
gconst34=IKsign((((((IkReal)(-1.00000000000000))*(x1392)*(x1394)))+((((IkReal)(-0.0450000000000000))*(x1391)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1391)))+((((IkReal)(-1.00000000000000))*(x1394)*(x1395)))+((((IkReal)(-0.550000000000000))*(x1392)))+((((IkReal)(-1.00000000000000))*(x1392)*(x1393)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1391)))+((((IkReal)(-0.550000000000000))*(x1395)))+((((IkReal)(-1.00000000000000))*(x1393)*(x1395)))));
IkReal x1396=((cj0)*(px));
IkReal x1397=(((IkReal)(6.66666666666667))*(cj3));
IkReal x1398=((py)*(sj0));
IkReal x1399=((cj2)*(pz));
IkReal x1400=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x1399)))+((((IkReal)(-1.00000000000000))*(x1396)*(x1400)))+(((cj3)*(x1399)))+((((IkReal)(-12.2222222222222))*(x1396)))+((((IkReal)(-12.2222222222222))*(x1398)))+((((IkReal)(-1.00000000000000))*(x1396)*(x1397)))+((((IkReal)(-6.66666666666667))*(sj3)*(x1399)))+((((IkReal)(-1.00000000000000))*(x1398)*(x1400)))+((((IkReal)(-1.00000000000000))*(x1397)*(x1398))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((sj2)*((py)*(py))*((sj0)*(sj0))))+(((sj2)*((pz)*(pz))))+(((sj2)*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0)*(sj2)))));
dummyeval[0]=((((sj2)*((py)*(py))*((sj0)*(sj0))))+(((sj2)*((pz)*(pz))))+(((sj2)*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0)*(sj2))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1401=(((((IkReal)(-1.00000000000000))*(cj0)*(py)))+(((px)*(sj0))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1401;
evalcond[3]=x1401;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x1402=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1403=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1404=((cj0)*(px));
IkReal x1405=((py)*(sj0));
IkReal x1406=(((IkReal)(0.0450000000000000))*(sj3));
gconst36=IKsign((((((IkReal)(-0.550000000000000))*(x1404)))+((((IkReal)(-1.00000000000000))*(x1404)*(x1406)))+((((IkReal)(-0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.550000000000000))*(x1405)))+((((IkReal)(-1.00000000000000))*(x1402)))+(((cj3)*(x1402)))+((((IkReal)(-1.00000000000000))*(x1405)*(x1406)))+((((IkReal)(-1.00000000000000))*(x1403)*(x1405)))+((((IkReal)(-1.00000000000000))*(x1403)*(x1404)))));
IkReal x1407=((cj0)*(px));
IkReal x1408=(((IkReal)(6.66666666666667))*(cj3));
IkReal x1409=((py)*(sj0));
IkReal x1410=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x1407)*(x1410)))+((((IkReal)(-1.00000000000000))*(pz)))+((((IkReal)(-12.2222222222222))*(x1407)))+(((cj3)*(pz)))+((((IkReal)(-1.00000000000000))*(x1407)*(x1408)))+((((IkReal)(-6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-1.00000000000000))*(x1408)*(x1409)))+((((IkReal)(-12.2222222222222))*(x1409)))+((((IkReal)(-1.00000000000000))*(x1409)*(x1410))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst37;
gconst37=IKsign((((((IkReal)(-2.00000000000000))*(cj0)*(px)*(py)*(sj0)))+((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-2.00000000000000))*(cj0)*(px)*(py)*(sj0)))+((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1411=((cj0)*(px));
IkReal x1412=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1413=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1414=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1415=((py)*(sj0));
IkReal x1416=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1417=(((IkReal)(0.0450000000000000))*(sj3));
if( IKabs(((gconst37)*((((((IkReal)(-1.00000000000000))*(x1411)*(x1416)))+((((IkReal)(-1.00000000000000))*(x1411)*(x1417)))+(x1413)+(((pz)*(x1412)))+((((IkReal)(-1.00000000000000))*(x1415)*(x1416)))+((((IkReal)(-0.550000000000000))*(x1415)))+((((IkReal)(-1.00000000000000))*(x1415)*(x1417)))+((((IkReal)(-0.550000000000000))*(x1411)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1413))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*((((((IkReal)(-0.0450000000000000))*(x1415)))+((((IkReal)(-1.00000000000000))*(x1412)*(x1415)))+(((x1411)*(x1414)))+((((IkReal)(-1.00000000000000))*(x1411)*(x1412)))+(((x1414)*(x1415)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(sj3)*(x1413)))+((((IkReal)(-1.00000000000000))*(pz)*(x1416)))+((((IkReal)(-0.0450000000000000))*(x1411))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst37)*((((((IkReal)(-1.00000000000000))*(x1411)*(x1416)))+((((IkReal)(-1.00000000000000))*(x1411)*(x1417)))+(x1413)+(((pz)*(x1412)))+((((IkReal)(-1.00000000000000))*(x1415)*(x1416)))+((((IkReal)(-0.550000000000000))*(x1415)))+((((IkReal)(-1.00000000000000))*(x1415)*(x1417)))+((((IkReal)(-0.550000000000000))*(x1411)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1413)))))), ((gconst37)*((((((IkReal)(-0.0450000000000000))*(x1415)))+((((IkReal)(-1.00000000000000))*(x1412)*(x1415)))+(((x1411)*(x1414)))+((((IkReal)(-1.00000000000000))*(x1411)*(x1412)))+(((x1414)*(x1415)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(sj3)*(x1413)))+((((IkReal)(-1.00000000000000))*(pz)*(x1416)))+((((IkReal)(-0.0450000000000000))*(x1411)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1418=IKsin(j1);
IkReal x1419=IKcos(j1);
IkReal x1420=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1421=((cj0)*(px));
IkReal x1422=((py)*(sj0));
IkReal x1423=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1424=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1425=((sj3)*(x1419));
IkReal x1426=((pz)*(x1418));
IkReal x1427=(((IkReal)(1.00000000000000))*(x1419));
IkReal x1428=(((IkReal)(0.0450000000000000))*(x1418));
IkReal x1429=((pz)*(x1419));
IkReal x1430=(((IkReal)(0.0900000000000000))*(x1419));
IkReal x1431=(((IkReal)(1.10000000000000))*(x1418));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x1429)+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1420)))+(((x1418)*(x1422)))+(((x1418)*(x1421))));
evalcond[1]=(((((IkReal)(-0.550000000000000))*(x1419)))+(x1428)+(((x1418)*(x1424)))+((((IkReal)(-1.00000000000000))*(x1418)*(x1423)))+(pz)+((((IkReal)(-0.0450000000000000))*(x1425)))+((((IkReal)(-1.00000000000000))*(x1419)*(x1420))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1424)+(x1426)+((((IkReal)(-1.00000000000000))*(x1423)))+((((IkReal)(-1.00000000000000))*(x1422)*(x1427)))+((((IkReal)(-1.00000000000000))*(x1421)*(x1427))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1422)))+((((IkReal)(-1.00000000000000))*(x1421)))+((((IkReal)(-1.00000000000000))*(x1419)*(x1423)))+((((IkReal)(0.550000000000000))*(x1418)))+((((IkReal)(0.0450000000000000))*(x1419)))+(((x1418)*(x1420)))+(((x1419)*(x1424)))+(((sj3)*(x1428))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1429)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1422)*(x1430)))+(((x1421)*(x1431)))+(((x1421)*(x1430)))+(((x1422)*(x1431)))+((((IkReal)(-0.0900000000000000))*(x1426))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1432=(cj3)*(cj3);
IkReal x1433=(sj3)*(sj3);
IkReal x1434=((cj3)*(sj3));
IkReal x1435=(((IkReal)(1.00000000000000))*(pz));
if( IKabs(((gconst36)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.00202500000000000))*(x1433)))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0900000000000000))*(x1432)))+((pz)*(pz))+((((IkReal)(-0.0495000000000000))*(sj3)))+((((IkReal)(-0.0270000000000000))*(x1434))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*((((IkReal)(-0.0247500000000000))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x1435)))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(0.0135000000000000))*(x1432)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x1435)))+((((IkReal)(-0.0135000000000000))*(x1433)))+((((IkReal)(-0.0879750000000000))*(x1434))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst36)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.00202500000000000))*(x1433)))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0900000000000000))*(x1432)))+((pz)*(pz))+((((IkReal)(-0.0495000000000000))*(sj3)))+((((IkReal)(-0.0270000000000000))*(x1434)))))), ((gconst36)*((((IkReal)(-0.0247500000000000))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x1435)))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(0.0135000000000000))*(x1432)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x1435)))+((((IkReal)(-0.0135000000000000))*(x1433)))+((((IkReal)(-0.0879750000000000))*(x1434)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1436=IKsin(j1);
IkReal x1437=IKcos(j1);
IkReal x1438=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1439=((cj0)*(px));
IkReal x1440=((py)*(sj0));
IkReal x1441=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1442=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1443=((sj3)*(x1437));
IkReal x1444=((pz)*(x1436));
IkReal x1445=(((IkReal)(1.00000000000000))*(x1437));
IkReal x1446=(((IkReal)(0.0450000000000000))*(x1436));
IkReal x1447=((pz)*(x1437));
IkReal x1448=(((IkReal)(0.0900000000000000))*(x1437));
IkReal x1449=(((IkReal)(1.10000000000000))*(x1436));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1436)*(x1440)))+(((x1436)*(x1439)))+((((IkReal)(-1.00000000000000))*(x1438)))+(x1447));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x1443)))+((((IkReal)(-0.550000000000000))*(x1437)))+(((x1436)*(x1442)))+((((IkReal)(-1.00000000000000))*(x1436)*(x1441)))+(pz)+((((IkReal)(-1.00000000000000))*(x1437)*(x1438)))+(x1446));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1440)*(x1445)))+((((IkReal)(-1.00000000000000))*(x1441)))+(x1444)+(x1442)+((((IkReal)(-1.00000000000000))*(x1439)*(x1445))));
evalcond[3]=((((sj3)*(x1446)))+((((IkReal)(-1.00000000000000))*(x1437)*(x1441)))+((((IkReal)(-1.00000000000000))*(x1440)))+((((IkReal)(0.550000000000000))*(x1436)))+(((x1437)*(x1442)))+((((IkReal)(-1.00000000000000))*(x1439)))+(((x1436)*(x1438)))+((((IkReal)(0.0450000000000000))*(x1437))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1439)*(x1448)))+(((x1440)*(x1449)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1447)))+(((x1439)*(x1449)))+((((IkReal)(-0.0900000000000000))*(x1444)))+(((x1440)*(x1448))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1450=((px)*(sj0));
IkReal x1451=((cj0)*(py));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=((x1450)+((((IkReal)(-1.00000000000000))*(x1451))));
evalcond[3]=((x1451)+((((IkReal)(-1.00000000000000))*(x1450))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1452=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1453=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1454=((cj0)*(px));
IkReal x1455=((py)*(sj0));
IkReal x1456=(((IkReal)(0.0450000000000000))*(sj3));
gconst38=IKsign(((x1452)+((((IkReal)(-1.00000000000000))*(x1454)*(x1456)))+((((IkReal)(-0.550000000000000))*(x1455)))+((((IkReal)(-0.550000000000000))*(x1454)))+((((IkReal)(-1.00000000000000))*(x1453)*(x1454)))+((((IkReal)(0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-1.00000000000000))*(x1455)*(x1456)))+((((IkReal)(-1.00000000000000))*(x1453)*(x1455)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1452)))));
IkReal x1457=((cj0)*(px));
IkReal x1458=(((IkReal)(6.66666666666667))*(cj3));
IkReal x1459=((py)*(sj0));
IkReal x1460=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x1457)*(x1460)))+((((IkReal)(-1.00000000000000))*(x1457)*(x1458)))+((((IkReal)(-12.2222222222222))*(x1457)))+((((IkReal)(-1.00000000000000))*(x1459)*(x1460)))+((((IkReal)(6.66666666666667))*(pz)*(sj3)))+(pz)+((((IkReal)(-12.2222222222222))*(x1459)))+((((IkReal)(-1.00000000000000))*(x1458)*(x1459)))+((((IkReal)(-1.00000000000000))*(cj3)*(pz))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign((((((py)*(py))*((sj0)*(sj0))))+((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0)))));
dummyeval[0]=(((((py)*(py))*((sj0)*(sj0))))+((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1461=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1462=((py)*(sj0));
IkReal x1463=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1464=((cj0)*(px));
IkReal x1465=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1466=(((IkReal)(0.300000000000000))*(x1464));
IkReal x1467=((cj3)*(x1462));
if( IKabs(((gconst39)*(((((x1462)*(x1465)))+(((x1464)*(x1465)))+(((cj3)*(x1466)))+(x1461)+((((IkReal)(0.300000000000000))*(x1467)))+((((IkReal)(0.550000000000000))*(x1464)))+((((IkReal)(0.550000000000000))*(x1462)))+(((pz)*(x1463)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1461))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+((((IkReal)(0.0450000000000000))*(x1467)))+((((IkReal)(-0.0450000000000000))*(x1462)))+((((IkReal)(-1.00000000000000))*(x1462)*(x1463)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1463)*(x1464)))+(((sj3)*(x1461)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1464)))+((((IkReal)(-0.0450000000000000))*(x1464))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst39)*(((((x1462)*(x1465)))+(((x1464)*(x1465)))+(((cj3)*(x1466)))+(x1461)+((((IkReal)(0.300000000000000))*(x1467)))+((((IkReal)(0.550000000000000))*(x1464)))+((((IkReal)(0.550000000000000))*(x1462)))+(((pz)*(x1463)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1461)))))), ((gconst39)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+((((IkReal)(0.0450000000000000))*(x1467)))+((((IkReal)(-0.0450000000000000))*(x1462)))+((((IkReal)(-1.00000000000000))*(x1462)*(x1463)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1463)*(x1464)))+(((sj3)*(x1461)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1464)))+((((IkReal)(-0.0450000000000000))*(x1464)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1468=IKsin(j1);
IkReal x1469=IKcos(j1);
IkReal x1470=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1471=((cj0)*(px));
IkReal x1472=((py)*(sj0));
IkReal x1473=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1474=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1475=((sj3)*(x1469));
IkReal x1476=((pz)*(x1468));
IkReal x1477=(((IkReal)(0.0450000000000000))*(x1468));
IkReal x1478=(((IkReal)(1.10000000000000))*(x1468));
IkReal x1479=((pz)*(x1469));
IkReal x1480=(((IkReal)(0.0900000000000000))*(x1469));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x1468)*(x1471)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1468)*(x1472)))+((((IkReal)(-1.00000000000000))*(x1470)))+(x1479));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1469)*(x1470)))+((((IkReal)(-0.550000000000000))*(x1469)))+((((IkReal)(-0.0450000000000000))*(x1475)))+(((x1468)*(x1473)))+(pz)+((((IkReal)(-1.00000000000000))*(x1468)*(x1474)))+((((IkReal)(-1.00000000000000))*(x1477))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x1469)*(x1471)))+(((x1469)*(x1472)))+((((IkReal)(-1.00000000000000))*(x1476)))+((((IkReal)(-1.00000000000000))*(x1473)))+(x1474));
evalcond[3]=(((((IkReal)(-0.0450000000000000))*(x1469)))+(((x1469)*(x1473)))+(((sj3)*(x1477)))+((((IkReal)(-1.00000000000000))*(x1469)*(x1474)))+((((IkReal)(-1.00000000000000))*(x1471)))+((((IkReal)(0.550000000000000))*(x1468)))+(((x1468)*(x1470)))+((((IkReal)(-1.00000000000000))*(x1472))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1471)*(x1480)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1471)*(x1478)))+((((IkReal)(1.10000000000000))*(x1479)))+((((IkReal)(-1.00000000000000))*(x1472)*(x1480)))+(((x1472)*(x1478)))+((((IkReal)(0.0900000000000000))*(x1476))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1481=(sj3)*(sj3);
IkReal x1482=(cj3)*(cj3);
IkReal x1483=((cj3)*(sj3));
IkReal x1484=(((IkReal)(1.00000000000000))*(pz));
if( IKabs(((gconst38)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0270000000000000))*(x1483)))+((((IkReal)(-0.0900000000000000))*(x1482)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x1481)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x1483)))+((((IkReal)(-0.0135000000000000))*(x1482)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x1484)))+((((IkReal)(0.0135000000000000))*(x1481)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x1484)))+((((IkReal)(0.167025000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst38)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0270000000000000))*(x1483)))+((((IkReal)(-0.0900000000000000))*(x1482)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x1481)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst38)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x1483)))+((((IkReal)(-0.0135000000000000))*(x1482)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x1484)))+((((IkReal)(0.0135000000000000))*(x1481)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x1484)))+((((IkReal)(0.167025000000000))*(sj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1485=IKsin(j1);
IkReal x1486=IKcos(j1);
IkReal x1487=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1488=((cj0)*(px));
IkReal x1489=((py)*(sj0));
IkReal x1490=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1491=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1492=((sj3)*(x1486));
IkReal x1493=((pz)*(x1485));
IkReal x1494=(((IkReal)(0.0450000000000000))*(x1485));
IkReal x1495=(((IkReal)(1.10000000000000))*(x1485));
IkReal x1496=((pz)*(x1486));
IkReal x1497=(((IkReal)(0.0900000000000000))*(x1486));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1487)))+(x1496)+(((x1485)*(x1488)))+(((x1485)*(x1489))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1486)*(x1487)))+(((x1485)*(x1490)))+((((IkReal)(-0.550000000000000))*(x1486)))+((((IkReal)(-1.00000000000000))*(x1485)*(x1491)))+((((IkReal)(-1.00000000000000))*(x1494)))+(pz)+((((IkReal)(-0.0450000000000000))*(x1492))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1490)))+(x1491)+(((x1486)*(x1488)))+((((IkReal)(-1.00000000000000))*(x1493)))+(((x1486)*(x1489))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1489)))+((((IkReal)(0.550000000000000))*(x1485)))+(((x1486)*(x1490)))+((((IkReal)(-1.00000000000000))*(x1486)*(x1491)))+((((IkReal)(-1.00000000000000))*(x1488)))+((((IkReal)(-0.0450000000000000))*(x1486)))+(((x1485)*(x1487)))+(((sj3)*(x1494))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x1493)))+((((IkReal)(-1.00000000000000))*(x1489)*(x1497)))+((((IkReal)(-1.00000000000000))*(x1488)*(x1497)))+(((x1488)*(x1495)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1489)*(x1495)))+((((IkReal)(1.10000000000000))*(x1496))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1498=(((IkReal)(-1.00000000000000))*(cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1498;
evalcond[3]=x1498;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
gconst40=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
IkReal x1499=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1500=((py)*(sj0));
gconst41=IKsign(((((cj3)*(x1499)))+((((IkReal)(-1.00000000000000))*(x1499)))+((((IkReal)(-0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)*(x1500)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x1500)))+((((IkReal)(-0.550000000000000))*(x1500)))));
IkReal x1501=((py)*(sj0));
dummyeval[0]=(((((IkReal)(-12.2222222222222))*(x1501)))+((((IkReal)(-1.00000000000000))*(sj3)*(x1501)))+((((IkReal)(-6.66666666666667))*(cj3)*(x1501)))+((((IkReal)(-1.00000000000000))*(pz)))+(((cj3)*(pz)))+((((IkReal)(-6.66666666666667))*(pz)*(sj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1502=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1502))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1502))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1503=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x1503)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x1503))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x1503)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x1503)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x1503)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x1503)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1504=IKcos(j1);
IkReal x1505=IKsin(j1);
IkReal x1506=((pz)*(x1505));
IkReal x1507=((pz)*(x1504));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1507));
evalcond[1]=((pz)+((((IkReal)(-0.850000000000000))*(x1504))));
evalcond[2]=x1506;
evalcond[3]=(((IkReal)(0.850000000000000))*(x1505));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1507)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1506))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1508=IKcos(j1);
IkReal x1509=IKsin(j1);
IkReal x1510=((pz)*(x1509));
IkReal x1511=((pz)*(x1508));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1511));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x1508)))+(pz));
evalcond[2]=x1510;
evalcond[3]=(((IkReal)(0.850000000000000))*(x1509));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x1510)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1511))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1512=(((IkReal)(1.00000000000000))*(pp));
IkReal x1513=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1512))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x1513;
evalcond[4]=x1513;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1512))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1514=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1514));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1514))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1515=IKsin(j1);
IkReal x1516=IKcos(j1);
IkReal x1517=(((IkReal)(0.0450000000000000))*(x1516));
evalcond[0]=(((((IkReal)(0.300000000000000))*(sj3)*(x1516)))+((((IkReal)(0.300000000000000))*(cj3)*(x1515)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1517)))+((((IkReal)(0.550000000000000))*(x1515)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1515)))+(x1517));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1518=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1518)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1518))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1519=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1519));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1519))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1520=IKsin(j1);
IkReal x1521=IKcos(j1);
IkReal x1522=(((IkReal)(0.0450000000000000))*(x1521));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x1520)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1522)))+((((IkReal)(0.550000000000000))*(x1520)))+(x1522)+((((IkReal)(0.300000000000000))*(cj3)*(x1520)))+((((IkReal)(0.300000000000000))*(sj3)*(x1521))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1523=(cj3)*(cj3);
IkReal x1524=(sj3)*(sj3);
IkReal x1525=((cj3)*(sj3));
if( IKabs(((gconst41)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0900000000000000))*(x1523)))+((pz)*(pz))+((((IkReal)(-0.0270000000000000))*(x1525)))+((((IkReal)(-0.00202500000000000))*(x1524)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(-0.0879750000000000))*(x1525)))+((((IkReal)(0.0135000000000000))*(x1523)))+((((IkReal)(-0.0135000000000000))*(x1524))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst41)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0900000000000000))*(x1523)))+((pz)*(pz))+((((IkReal)(-0.0270000000000000))*(x1525)))+((((IkReal)(-0.00202500000000000))*(x1524)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst41)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(-0.0879750000000000))*(x1525)))+((((IkReal)(0.0135000000000000))*(x1523)))+((((IkReal)(-0.0135000000000000))*(x1524)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1526=IKsin(j1);
IkReal x1527=IKcos(j1);
IkReal x1528=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1529=((py)*(sj0));
IkReal x1530=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1531=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1532=((sj3)*(x1527));
IkReal x1533=((pz)*(x1526));
IkReal x1534=(((IkReal)(0.0450000000000000))*(x1526));
IkReal x1535=((pz)*(x1527));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1526)*(x1529)))+((((IkReal)(-1.00000000000000))*(x1528)))+(x1535));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1526)*(x1530)))+((((IkReal)(-0.550000000000000))*(x1527)))+(pz)+(((x1526)*(x1531)))+((((IkReal)(-1.00000000000000))*(x1527)*(x1528)))+((((IkReal)(-0.0450000000000000))*(x1532)))+(x1534));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1527)*(x1529)))+((((IkReal)(-1.00000000000000))*(x1530)))+(x1533)+(x1531));
evalcond[3]=((((x1526)*(x1528)))+((((IkReal)(-1.00000000000000))*(x1529)))+((((IkReal)(0.0450000000000000))*(x1527)))+((((IkReal)(0.550000000000000))*(x1526)))+((((IkReal)(-1.00000000000000))*(x1527)*(x1530)))+(((sj3)*(x1534)))+(((x1527)*(x1531))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1526)*(x1529)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1533)))+((((IkReal)(0.0900000000000000))*(x1527)*(x1529)))+((((IkReal)(1.10000000000000))*(x1535))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1536=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1537=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1538=((py)*(sj0));
IkReal x1539=(((IkReal)(0.300000000000000))*(sj3));
if( IKabs(((gconst40)*((((((IkReal)(-0.550000000000000))*(x1538)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x1538)))+(((pz)*(x1539)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1536)))+((((IkReal)(-1.00000000000000))*(x1537)*(x1538)))+(x1536))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*((((((IkReal)(-1.00000000000000))*(sj3)*(x1536)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1538)*(x1539)))+((((IkReal)(-1.00000000000000))*(pz)*(x1537)))+((((IkReal)(-0.0450000000000000))*(x1538)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1538))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst40)*((((((IkReal)(-0.550000000000000))*(x1538)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x1538)))+(((pz)*(x1539)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1536)))+((((IkReal)(-1.00000000000000))*(x1537)*(x1538)))+(x1536)))), ((gconst40)*((((((IkReal)(-1.00000000000000))*(sj3)*(x1536)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1538)*(x1539)))+((((IkReal)(-1.00000000000000))*(pz)*(x1537)))+((((IkReal)(-0.0450000000000000))*(x1538)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1538)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1540=IKsin(j1);
IkReal x1541=IKcos(j1);
IkReal x1542=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1543=((py)*(sj0));
IkReal x1544=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1545=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1546=((sj3)*(x1541));
IkReal x1547=((pz)*(x1540));
IkReal x1548=(((IkReal)(0.0450000000000000))*(x1540));
IkReal x1549=((pz)*(x1541));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x1540)*(x1543)))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1542)))+(x1549));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x1546)))+(x1548)+((((IkReal)(-0.550000000000000))*(x1541)))+(((x1540)*(x1545)))+((((IkReal)(-1.00000000000000))*(x1541)*(x1542)))+(pz)+((((IkReal)(-1.00000000000000))*(x1540)*(x1544))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1541)*(x1543)))+(x1547)+(x1545)+((((IkReal)(-1.00000000000000))*(x1544))));
evalcond[3]=((((x1541)*(x1545)))+((((IkReal)(0.550000000000000))*(x1540)))+((((IkReal)(-1.00000000000000))*(x1541)*(x1544)))+((((IkReal)(0.0450000000000000))*(x1541)))+((((IkReal)(-1.00000000000000))*(x1543)))+(((sj3)*(x1548)))+(((x1540)*(x1542))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1540)*(x1543)))+((((IkReal)(-0.0900000000000000))*(x1547)))+((((IkReal)(0.0900000000000000))*(x1541)*(x1543)))+((((IkReal)(1.10000000000000))*(x1549))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1550=((cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1550));
evalcond[3]=x1550;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((((py)*(py))*((sj0)*(sj0))))+((pz)*(pz))));
dummyeval[0]=(((((py)*(py))*((sj0)*(sj0))))+((pz)*(pz)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
IkReal x1551=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1552=((py)*(sj0));
gconst43=IKsign((((((IkReal)(-1.00000000000000))*(cj3)*(x1551)))+((((IkReal)(-0.300000000000000))*(cj3)*(x1552)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x1552)))+(x1551)+((((IkReal)(0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.550000000000000))*(x1552)))));
IkReal x1553=((py)*(sj0));
dummyeval[0]=(((((IkReal)(-6.66666666666667))*(cj3)*(x1553)))+((((IkReal)(-12.2222222222222))*(x1553)))+((((IkReal)(6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-1.00000000000000))*(sj3)*(x1553)))+(pz)+((((IkReal)(-1.00000000000000))*(cj3)*(pz))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1554=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1554))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1554))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1555=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x1555)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x1555))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x1555)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x1555)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x1555)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x1555)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1556=IKcos(j1);
IkReal x1557=IKsin(j1);
IkReal x1558=((pz)*(x1557));
IkReal x1559=((pz)*(x1556));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1559));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x1556)))+(pz));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1558));
evalcond[3]=(((IkReal)(0.850000000000000))*(x1557));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1559)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1558))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1560=IKcos(j1);
IkReal x1561=IKsin(j1);
IkReal x1562=((pz)*(x1561));
IkReal x1563=((pz)*(x1560));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1563));
evalcond[1]=((pz)+((((IkReal)(-0.850000000000000))*(x1560))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1562));
evalcond[3]=(((IkReal)(0.850000000000000))*(x1561));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1563)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1562))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1564=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1564))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1564))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1565=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1565));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1565))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1566=IKsin(j1);
IkReal x1567=IKcos(j1);
IkReal x1568=(((IkReal)(0.0450000000000000))*(x1567));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x1566)))+((((IkReal)(-1.00000000000000))*(x1568)))+((((IkReal)(0.550000000000000))*(x1566)))+(((cj3)*(x1568)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1567)))+((((IkReal)(0.300000000000000))*(cj3)*(x1566))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1569=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x1569)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1569))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1570=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1570));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1570))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1571=IKsin(j1);
IkReal x1572=IKcos(j1);
IkReal x1573=(((IkReal)(0.0450000000000000))*(x1572));
evalcond[0]=((((cj3)*(x1573)))+((((IkReal)(-1.00000000000000))*(x1573)))+((((IkReal)(0.300000000000000))*(cj3)*(x1571)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1571)))+((((IkReal)(0.550000000000000))*(x1571)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1572))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1574=(sj3)*(sj3);
IkReal x1575=(cj3)*(cj3);
IkReal x1576=((cj3)*(sj3));
if( IKabs(((gconst43)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0270000000000000))*(x1576)))+((pz)*(pz))+((((IkReal)(-0.0900000000000000))*(x1575)))+((((IkReal)(-0.00202500000000000))*(x1574)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x1576)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(-0.0135000000000000))*(x1575)))+((((IkReal)(0.0135000000000000))*(x1574)))+((((IkReal)(0.167025000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst43)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0270000000000000))*(x1576)))+((pz)*(pz))+((((IkReal)(-0.0900000000000000))*(x1575)))+((((IkReal)(-0.00202500000000000))*(x1574)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst43)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x1576)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(-0.0135000000000000))*(x1575)))+((((IkReal)(0.0135000000000000))*(x1574)))+((((IkReal)(0.167025000000000))*(sj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1577=IKsin(j1);
IkReal x1578=IKcos(j1);
IkReal x1579=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1580=((py)*(sj0));
IkReal x1581=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1582=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1583=((sj3)*(x1578));
IkReal x1584=((pz)*(x1577));
IkReal x1585=(((IkReal)(0.0450000000000000))*(x1577));
IkReal x1586=((pz)*(x1578));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(x1586)+(((x1577)*(x1580)))+((((IkReal)(-1.00000000000000))*(x1579))));
evalcond[1]=((((x1577)*(x1581)))+((((IkReal)(-0.0450000000000000))*(x1583)))+((((IkReal)(-1.00000000000000))*(x1585)))+(pz)+((((IkReal)(-1.00000000000000))*(x1577)*(x1582)))+((((IkReal)(-0.550000000000000))*(x1578)))+((((IkReal)(-1.00000000000000))*(x1578)*(x1579))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1581)))+(((x1578)*(x1580)))+(x1582)+((((IkReal)(-1.00000000000000))*(x1584))));
evalcond[3]=((((x1577)*(x1579)))+(((x1578)*(x1581)))+(((sj3)*(x1585)))+((((IkReal)(-0.0450000000000000))*(x1578)))+((((IkReal)(-1.00000000000000))*(x1580)))+((((IkReal)(-1.00000000000000))*(x1578)*(x1582)))+((((IkReal)(0.550000000000000))*(x1577))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1577)*(x1580)))+((((IkReal)(0.0900000000000000))*(x1584)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1578)*(x1580)))+((((IkReal)(1.10000000000000))*(x1586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1587=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1588=((py)*(sj0));
IkReal x1589=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1590=((cj3)*(x1588));
if( IKabs(((gconst42)*((((((IkReal)(0.0450000000000000))*(sj3)*(x1588)))+(((pz)*(x1589)))+((((IkReal)(0.300000000000000))*(x1590)))+(x1587)+((((IkReal)(0.550000000000000))*(x1588)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1587))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+((((IkReal)(0.0450000000000000))*(x1590)))+((((IkReal)(-0.0450000000000000))*(x1588)))+(((sj3)*(x1587)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1588)*(x1589))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst42)*((((((IkReal)(0.0450000000000000))*(sj3)*(x1588)))+(((pz)*(x1589)))+((((IkReal)(0.300000000000000))*(x1590)))+(x1587)+((((IkReal)(0.550000000000000))*(x1588)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1587)))))), ((gconst42)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+((((IkReal)(0.0450000000000000))*(x1590)))+((((IkReal)(-0.0450000000000000))*(x1588)))+(((sj3)*(x1587)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x1588)*(x1589)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1591=IKsin(j1);
IkReal x1592=IKcos(j1);
IkReal x1593=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1594=((py)*(sj0));
IkReal x1595=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1596=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1597=((sj3)*(x1592));
IkReal x1598=((pz)*(x1591));
IkReal x1599=(((IkReal)(0.0450000000000000))*(x1591));
IkReal x1600=((pz)*(x1592));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1593)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1591)*(x1594)))+(x1600));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x1597)))+((((IkReal)(-1.00000000000000))*(x1591)*(x1596)))+((((IkReal)(-0.550000000000000))*(x1592)))+(((x1591)*(x1595)))+((((IkReal)(-1.00000000000000))*(x1599)))+(pz)+((((IkReal)(-1.00000000000000))*(x1592)*(x1593))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x1592)*(x1594)))+(x1596)+((((IkReal)(-1.00000000000000))*(x1595)))+((((IkReal)(-1.00000000000000))*(x1598))));
evalcond[3]=((((x1591)*(x1593)))+(((x1592)*(x1595)))+((((IkReal)(-1.00000000000000))*(x1592)*(x1596)))+((((IkReal)(-0.0450000000000000))*(x1592)))+((((IkReal)(0.550000000000000))*(x1591)))+(((sj3)*(x1599)))+((((IkReal)(-1.00000000000000))*(x1594))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1598)))+((((IkReal)(-0.0900000000000000))*(x1592)*(x1594)))+((((IkReal)(1.10000000000000))*(x1591)*(x1594)))+((((IkReal)(1.10000000000000))*(x1600))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1601=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1601;
evalcond[3]=x1601;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
gconst44=IKsign((((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1602=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1603=((cj0)*(px));
gconst45=IKsign((((((IkReal)(-0.0450000000000000))*(sj3)*(x1603)))+((((IkReal)(-1.00000000000000))*(x1602)))+((((IkReal)(-0.300000000000000))*(cj3)*(x1603)))+(((cj3)*(x1602)))+((((IkReal)(-0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.550000000000000))*(x1603)))));
IkReal x1604=((cj0)*(px));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(sj3)*(x1604)))+((((IkReal)(-6.66666666666667))*(cj3)*(x1604)))+((((IkReal)(-1.00000000000000))*(pz)))+(((cj3)*(pz)))+((((IkReal)(-6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-12.2222222222222))*(x1604))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1605=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1605))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1605))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1606=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x1606)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x1606))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x1606)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x1606)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x1606)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x1606)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1607=IKcos(j1);
IkReal x1608=IKsin(j1);
IkReal x1609=((pz)*(x1608));
IkReal x1610=((pz)*(x1607));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1610));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x1607)))+(pz));
evalcond[2]=x1609;
evalcond[3]=(((IkReal)(0.850000000000000))*(x1608));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1610)))+((((IkReal)(-0.0900000000000000))*(x1609))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1611=IKcos(j1);
IkReal x1612=IKsin(j1);
IkReal x1613=((pz)*(x1612));
IkReal x1614=((pz)*(x1611));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1614));
evalcond[1]=((pz)+((((IkReal)(-0.850000000000000))*(x1611))));
evalcond[2]=x1613;
evalcond[3]=(((IkReal)(0.850000000000000))*(x1612));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1614)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1613))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1615=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x1615)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1615))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1616=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1616));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1616))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1617=IKsin(j1);
IkReal x1618=IKcos(j1);
IkReal x1619=(((IkReal)(0.0450000000000000))*(x1618));
evalcond[0]=((x1619)+((((IkReal)(-1.00000000000000))*(cj3)*(x1619)))+((((IkReal)(0.550000000000000))*(x1617)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1617)))+((((IkReal)(0.300000000000000))*(cj3)*(x1617)))+((((IkReal)(0.300000000000000))*(sj3)*(x1618))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1620=(((IkReal)(1.00000000000000))*(pp));
IkReal x1621=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1620)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x1621;
evalcond[4]=x1621;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1620))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1622=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1622));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1622))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1623=IKsin(j1);
IkReal x1624=IKcos(j1);
IkReal x1625=(((IkReal)(0.0450000000000000))*(x1624));
evalcond[0]=(((((IkReal)(0.300000000000000))*(cj3)*(x1623)))+(x1625)+((((IkReal)(0.550000000000000))*(x1623)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1625)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1623)))+((((IkReal)(0.300000000000000))*(sj3)*(x1624))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1626=(cj3)*(cj3);
IkReal x1627=(sj3)*(sj3);
IkReal x1628=((cj3)*(sj3));
if( IKabs(((gconst45)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0900000000000000))*(x1626)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.0495000000000000))*(sj3)))+((((IkReal)(-0.00202500000000000))*(x1627)))+((((IkReal)(-0.0270000000000000))*(x1628))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(0.0135000000000000))*(x1626)))+((((IkReal)(-0.0135000000000000))*(x1627)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(-0.0879750000000000))*(x1628))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst45)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0900000000000000))*(x1626)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.0495000000000000))*(sj3)))+((((IkReal)(-0.00202500000000000))*(x1627)))+((((IkReal)(-0.0270000000000000))*(x1628)))))), ((gconst45)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(0.0135000000000000))*(x1626)))+((((IkReal)(-0.0135000000000000))*(x1627)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(-0.0879750000000000))*(x1628)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1629=IKsin(j1);
IkReal x1630=IKcos(j1);
IkReal x1631=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1632=((cj0)*(px));
IkReal x1633=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1634=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1635=((sj3)*(x1630));
IkReal x1636=((pz)*(x1629));
IkReal x1637=(((IkReal)(0.0450000000000000))*(x1629));
IkReal x1638=((pz)*(x1630));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1631)))+(x1638)+(((x1629)*(x1632))));
evalcond[1]=((((x1629)*(x1634)))+((((IkReal)(-1.00000000000000))*(x1630)*(x1631)))+((((IkReal)(-0.550000000000000))*(x1630)))+(x1637)+(pz)+((((IkReal)(-0.0450000000000000))*(x1635)))+((((IkReal)(-1.00000000000000))*(x1629)*(x1633))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1633)))+((((IkReal)(-1.00000000000000))*(x1630)*(x1632)))+(x1634)+(x1636));
evalcond[3]=((((x1629)*(x1631)))+(((sj3)*(x1637)))+((((IkReal)(0.0450000000000000))*(x1630)))+((((IkReal)(0.550000000000000))*(x1629)))+((((IkReal)(-1.00000000000000))*(x1632)))+((((IkReal)(-1.00000000000000))*(x1630)*(x1633)))+(((x1630)*(x1634))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1629)*(x1632)))+((((IkReal)(-0.0900000000000000))*(x1636)))+((((IkReal)(0.0900000000000000))*(x1630)*(x1632)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1638))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1639=((cj0)*(px));
IkReal x1640=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1641=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1642=(((IkReal)(0.300000000000000))*(cj3));
if( IKabs(((gconst44)*((((((IkReal)(-1.00000000000000))*(x1639)*(x1642)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1641)))+(x1641)+((((IkReal)(-0.550000000000000))*(x1639)))+(((pz)*(x1640)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x1639))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*((((((IkReal)(-1.00000000000000))*(sj3)*(x1641)))+((((IkReal)(-0.0450000000000000))*(x1639)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pz)*(x1642)))+((((IkReal)(-1.00000000000000))*(x1639)*(x1640)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1639))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst44)*((((((IkReal)(-1.00000000000000))*(x1639)*(x1642)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1641)))+(x1641)+((((IkReal)(-0.550000000000000))*(x1639)))+(((pz)*(x1640)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x1639)))))), ((gconst44)*((((((IkReal)(-1.00000000000000))*(sj3)*(x1641)))+((((IkReal)(-0.0450000000000000))*(x1639)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pz)*(x1642)))+((((IkReal)(-1.00000000000000))*(x1639)*(x1640)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1639)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1643=IKsin(j1);
IkReal x1644=IKcos(j1);
IkReal x1645=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1646=((cj0)*(px));
IkReal x1647=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1648=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1649=((sj3)*(x1644));
IkReal x1650=((pz)*(x1643));
IkReal x1651=(((IkReal)(0.0450000000000000))*(x1643));
IkReal x1652=((pz)*(x1644));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1645)))+(((x1643)*(x1646)))+(x1652));
evalcond[1]=((((x1643)*(x1648)))+((((IkReal)(-1.00000000000000))*(x1644)*(x1645)))+(pz)+((((IkReal)(-1.00000000000000))*(x1643)*(x1647)))+((((IkReal)(-0.550000000000000))*(x1644)))+(x1651)+((((IkReal)(-0.0450000000000000))*(x1649))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1647)))+(x1648)+((((IkReal)(-1.00000000000000))*(x1644)*(x1646)))+(x1650));
evalcond[3]=((((x1643)*(x1645)))+((((IkReal)(-1.00000000000000))*(x1644)*(x1647)))+(((x1644)*(x1648)))+((((IkReal)(0.0450000000000000))*(x1644)))+(((sj3)*(x1651)))+((((IkReal)(-1.00000000000000))*(x1646)))+((((IkReal)(0.550000000000000))*(x1643))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x1644)*(x1646)))+((((IkReal)(1.10000000000000))*(x1652)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1650)))+((((IkReal)(1.10000000000000))*(x1643)*(x1646))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1653=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1653;
evalcond[3]=(((IkReal)(-1.00000000000000))*(x1653));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign((((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz))));
dummyeval[0]=(((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
IkReal x1654=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1655=((cj0)*(px));
gconst47=IKsign((((((IkReal)(-0.0450000000000000))*(sj3)*(x1655)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1654)))+((((IkReal)(-0.300000000000000))*(cj3)*(x1655)))+((((IkReal)(-0.550000000000000))*(x1655)))+((((IkReal)(0.300000000000000))*(pz)*(sj3)))+(x1654)));
IkReal x1656=((cj0)*(px));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(sj3)*(x1656)))+((((IkReal)(6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-6.66666666666667))*(cj3)*(x1656)))+(pz)+((((IkReal)(-12.2222222222222))*(x1656)))+((((IkReal)(-1.00000000000000))*(cj3)*(pz))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1657=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1657))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1657))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1658=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x1658)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x1658))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x1658)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x1658)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x1658)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x1658)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1659=IKcos(j1);
IkReal x1660=IKsin(j1);
IkReal x1661=((pz)*(x1660));
IkReal x1662=((pz)*(x1659));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1662));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x1659)))+(pz));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1661));
evalcond[3]=(((IkReal)(0.850000000000000))*(x1660));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1661)))+((((IkReal)(1.10000000000000))*(x1662))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1663=IKcos(j1);
IkReal x1664=IKsin(j1);
IkReal x1665=((pz)*(x1664));
IkReal x1666=((pz)*(x1663));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1666));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x1663)))+(pz));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1665));
evalcond[3]=(((IkReal)(0.850000000000000))*(x1664));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1666)))+((((IkReal)(0.0900000000000000))*(x1665))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1667=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1667)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1667))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1668=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1668));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1668))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1669=IKsin(j1);
IkReal x1670=IKcos(j1);
IkReal x1671=(((IkReal)(0.0450000000000000))*(x1670));
evalcond[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1670)))+((((IkReal)(0.300000000000000))*(cj3)*(x1669)))+(((cj3)*(x1671)))+((((IkReal)(0.550000000000000))*(x1669)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1669)))+((((IkReal)(-1.00000000000000))*(x1671))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1672=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1672))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1672))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1673=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1673));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1673))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1674=IKsin(j1);
IkReal x1675=IKcos(j1);
IkReal x1676=(((IkReal)(0.0450000000000000))*(x1675));
evalcond[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1675)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1674)))+((((IkReal)(0.300000000000000))*(cj3)*(x1674)))+((((IkReal)(-1.00000000000000))*(x1676)))+((((IkReal)(0.550000000000000))*(x1674)))+(((cj3)*(x1676))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1677=(sj3)*(sj3);
IkReal x1678=(cj3)*(cj3);
IkReal x1679=((cj3)*(sj3));
if( IKabs(((gconst47)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0900000000000000))*(x1678)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x1677)))+((((IkReal)(-0.0495000000000000))*(sj3)))+((((IkReal)(-0.0270000000000000))*(x1679))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x1679)))+((((IkReal)(0.0135000000000000))*(x1677)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(-0.0135000000000000))*(x1678)))+((((IkReal)(0.167025000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst47)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0900000000000000))*(x1678)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x1677)))+((((IkReal)(-0.0495000000000000))*(sj3)))+((((IkReal)(-0.0270000000000000))*(x1679)))))), ((gconst47)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x1679)))+((((IkReal)(0.0135000000000000))*(x1677)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(-0.0135000000000000))*(x1678)))+((((IkReal)(0.167025000000000))*(sj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1680=IKsin(j1);
IkReal x1681=IKcos(j1);
IkReal x1682=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1683=((cj0)*(px));
IkReal x1684=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1685=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1686=((sj3)*(x1681));
IkReal x1687=((pz)*(x1680));
IkReal x1688=(((IkReal)(0.0450000000000000))*(x1680));
IkReal x1689=((pz)*(x1681));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1680)*(x1683)))+((((IkReal)(-1.00000000000000))*(x1682)))+(x1689));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1681)*(x1682)))+((((IkReal)(-1.00000000000000))*(x1688)))+(((x1680)*(x1684)))+((((IkReal)(-1.00000000000000))*(x1680)*(x1685)))+(pz)+((((IkReal)(-0.550000000000000))*(x1681)))+((((IkReal)(-0.0450000000000000))*(x1686))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1684)))+(((x1681)*(x1683)))+((((IkReal)(-1.00000000000000))*(x1687)))+(x1685));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1681)*(x1685)))+((((IkReal)(-0.0450000000000000))*(x1681)))+((((IkReal)(-1.00000000000000))*(x1683)))+(((sj3)*(x1688)))+((((IkReal)(0.550000000000000))*(x1680)))+(((x1680)*(x1682)))+(((x1681)*(x1684))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1689)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x1680)*(x1683)))+((((IkReal)(-0.0900000000000000))*(x1681)*(x1683)))+((((IkReal)(0.0900000000000000))*(x1687))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1690=((cj0)*(px));
IkReal x1691=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1692=(((IkReal)(0.0450000000000000))*(pz));
IkReal x1693=(((IkReal)(0.300000000000000))*(cj3));
if( IKabs(((gconst46)*((((((IkReal)(0.0450000000000000))*(sj3)*(x1690)))+((((IkReal)(0.550000000000000))*(x1690)))+(((x1690)*(x1693)))+(((pz)*(x1691)))+(x1692)+((((IkReal)(-1.00000000000000))*(cj3)*(x1692))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*((((((IkReal)(-1.00000000000000))*(x1690)*(x1691)))+(((sj3)*(x1692)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1690)))+(((pz)*(x1693)))+((((IkReal)(-0.0450000000000000))*(x1690))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst46)*((((((IkReal)(0.0450000000000000))*(sj3)*(x1690)))+((((IkReal)(0.550000000000000))*(x1690)))+(((x1690)*(x1693)))+(((pz)*(x1691)))+(x1692)+((((IkReal)(-1.00000000000000))*(cj3)*(x1692)))))), ((gconst46)*((((((IkReal)(-1.00000000000000))*(x1690)*(x1691)))+(((sj3)*(x1692)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(0.0450000000000000))*(cj3)*(x1690)))+(((pz)*(x1693)))+((((IkReal)(-0.0450000000000000))*(x1690)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1694=IKsin(j1);
IkReal x1695=IKcos(j1);
IkReal x1696=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1697=((cj0)*(px));
IkReal x1698=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1699=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1700=((sj3)*(x1695));
IkReal x1701=((pz)*(x1694));
IkReal x1702=(((IkReal)(0.0450000000000000))*(x1694));
IkReal x1703=((pz)*(x1695));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1696)))+(((x1694)*(x1697)))+(x1703));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x1700)))+((((IkReal)(-1.00000000000000))*(x1702)))+((((IkReal)(-1.00000000000000))*(x1695)*(x1696)))+(pz)+((((IkReal)(-1.00000000000000))*(x1694)*(x1699)))+((((IkReal)(-0.550000000000000))*(x1695)))+(((x1694)*(x1698))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1698)))+(x1699)+((((IkReal)(-1.00000000000000))*(x1701)))+(((x1695)*(x1697))));
evalcond[3]=((((x1695)*(x1698)))+(((x1694)*(x1696)))+((((IkReal)(0.550000000000000))*(x1694)))+((((IkReal)(-1.00000000000000))*(x1695)*(x1699)))+((((IkReal)(-0.0450000000000000))*(x1695)))+(((sj3)*(x1702)))+((((IkReal)(-1.00000000000000))*(x1697))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1703)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1695)*(x1697)))+((((IkReal)(0.0900000000000000))*(x1701)))+((((IkReal)(1.10000000000000))*(x1694)*(x1697))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1704=(((((IkReal)(-1.00000000000000))*(cj0)*(py)))+(((px)*(sj0))));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x1704;
evalcond[3]=x1704;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign(((((py)*(sj0)))+(((cj0)*(px)))));
dummyeval[0]=((((py)*(sj0)))+(((cj0)*(px))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1705=((cj0)*(px));
IkReal x1706=(((IkReal)(6.66666666666667))*(cj3));
IkReal x1707=((py)*(sj0));
IkReal x1708=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=((x1705)+(x1707));
dummyeval[1]=(((((IkReal)(-1.00000000000000))*(x1707)*(x1708)))+((((IkReal)(-12.2222222222222))*(x1707)))+((((IkReal)(-12.2222222222222))*(x1705)))+((((IkReal)(-1.00000000000000))*(x1706)*(x1707)))+((((IkReal)(-1.00000000000000))*(x1705)*(x1708)))+((((IkReal)(-1.00000000000000))*(x1705)*(x1706))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1709=((py)*(sj0));
IkReal x1710=((cj0)*(px));
IkReal x1711=(((IkReal)(6.66666666666667))*(sj3));
IkReal x1712=(((IkReal)(1.00000000000000))*(x1709));
IkReal x1713=(((IkReal)(1.00000000000000))*(x1710));
IkReal x1714=((x1713)+(x1712));
dummyeval[0]=((((cj3)*(x1709)))+(((cj3)*(x1710)))+((((IkReal)(-1.00000000000000))*(x1709)*(x1711)))+((((IkReal)(-1.00000000000000))*(x1714)))+((((IkReal)(-1.00000000000000))*(x1710)*(x1711))));
dummyeval[1]=(((IkReal)(-1.00000000000000))*(x1714));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1715=x1704;
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x1715;
evalcond[3]=x1715;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((py)*(sj0)))+(((cj0)*(px))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1716=((cj0)*(px));
IkReal x1717=((py)*(sj0));
dummyeval[0]=((x1717)+(x1716));
dummyeval[1]=(((((IkReal)(2.00000000000000))*(x1716)*(x1717)))+((x1717)*(x1717))+((x1716)*(x1716)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1718=(((IkReal)(1.00000000000000))*(pp));
IkReal x1719=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1718))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x1719;
evalcond[4]=x1719;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1718))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1720=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1720))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1720))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1721=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1721))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1721))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1722=(((IkReal)(1.00000000000000))*(pp));
IkReal x1723=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1722))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x1723;
evalcond[4]=x1723;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1722))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1724=((py)*(sj0));
IkReal x1725=((cj0)*(px));
IkReal x1726=(((IkReal)(20.0000000000000))*(pp));
if( IKabs((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x1725)))+((((IkReal)(20.0000000000000))*(x1724))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x1725)))+((((IkReal)(20.0000000000000))*(x1724)))))):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(1.80000000000000))*((x1724)*(x1724))))+((((IkReal)(1.80000000000000))*((x1725)*(x1725))))+((((IkReal)(3.60000000000000))*(x1724)*(x1725))))) != 0)?((IkReal)1/((((((IkReal)(1.80000000000000))*((x1724)*(x1724))))+((((IkReal)(1.80000000000000))*((x1725)*(x1725))))+((((IkReal)(3.60000000000000))*(x1724)*(x1725)))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x1725)))+(((x1725)*(x1726)))+(((x1724)*(x1726)))+((((IkReal)(-14.4500000000000))*(x1724))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x1725)))+((((IkReal)(20.0000000000000))*(x1724))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x1725)))+((((IkReal)(20.0000000000000))*(x1724)))))):(IkReal)1.0e30))))+IKsqr(((((IKabs((((((IkReal)(1.80000000000000))*((x1724)*(x1724))))+((((IkReal)(1.80000000000000))*((x1725)*(x1725))))+((((IkReal)(3.60000000000000))*(x1724)*(x1725))))) != 0)?((IkReal)1/((((((IkReal)(1.80000000000000))*((x1724)*(x1724))))+((((IkReal)(1.80000000000000))*((x1725)*(x1725))))+((((IkReal)(3.60000000000000))*(x1724)*(x1725)))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x1725)))+(((x1725)*(x1726)))+(((x1724)*(x1726)))+((((IkReal)(-14.4500000000000))*(x1724)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x1725)))+((((IkReal)(20.0000000000000))*(x1724))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x1725)))+((((IkReal)(20.0000000000000))*(x1724)))))):(IkReal)1.0e30))), ((((IKabs((((((IkReal)(1.80000000000000))*((x1724)*(x1724))))+((((IkReal)(1.80000000000000))*((x1725)*(x1725))))+((((IkReal)(3.60000000000000))*(x1724)*(x1725))))) != 0)?((IkReal)1/((((((IkReal)(1.80000000000000))*((x1724)*(x1724))))+((((IkReal)(1.80000000000000))*((x1725)*(x1725))))+((((IkReal)(3.60000000000000))*(x1724)*(x1725)))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x1725)))+(((x1725)*(x1726)))+(((x1724)*(x1726)))+((((IkReal)(-14.4500000000000))*(x1724)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1727=IKsin(j1);
IkReal x1728=IKcos(j1);
IkReal x1729=((py)*(sj0));
IkReal x1730=((cj0)*(px));
IkReal x1731=(((IkReal)(1.10000000000000))*(x1727));
IkReal x1732=((x1728)*(x1730));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1727)*(x1730)))+(((x1727)*(x1729))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1728));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x1728)*(x1729)))+((((IkReal)(-1.00000000000000))*(x1732))));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x1727)))+((((IkReal)(-1.00000000000000))*(x1730)))+((((IkReal)(-1.00000000000000))*(x1729))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1729)*(x1731)))+(((x1730)*(x1731)))+((((IkReal)(0.0900000000000000))*(x1732)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1728)*(x1729))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1733=((cj0)*(px));
IkReal x1734=((py)*(sj0));
if( IKabs((((((IkReal)(1.17647058823529))*(x1733)))+((((IkReal)(1.17647058823529))*(x1734))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(1.53000000000000))*(x1734)))+((((IkReal)(1.53000000000000))*(x1733))))) != 0)?((IkReal)1/((((((IkReal)(1.53000000000000))*(x1734)))+((((IkReal)(1.53000000000000))*(x1733)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-44.0000000000000))*(x1733)*(x1734)))+((((IkReal)(-22.0000000000000))*((x1733)*(x1733))))+((((IkReal)(-22.0000000000000))*((x1734)*(x1734))))+((((IkReal)(17.0000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((((IkReal)(1.17647058823529))*(x1733)))+((((IkReal)(1.17647058823529))*(x1734)))))+IKsqr(((((IKabs((((((IkReal)(1.53000000000000))*(x1734)))+((((IkReal)(1.53000000000000))*(x1733))))) != 0)?((IkReal)1/((((((IkReal)(1.53000000000000))*(x1734)))+((((IkReal)(1.53000000000000))*(x1733)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-44.0000000000000))*(x1733)*(x1734)))+((((IkReal)(-22.0000000000000))*((x1733)*(x1733))))+((((IkReal)(-22.0000000000000))*((x1734)*(x1734))))+((((IkReal)(17.0000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((((IkReal)(1.17647058823529))*(x1733)))+((((IkReal)(1.17647058823529))*(x1734)))), ((((IKabs((((((IkReal)(1.53000000000000))*(x1734)))+((((IkReal)(1.53000000000000))*(x1733))))) != 0)?((IkReal)1/((((((IkReal)(1.53000000000000))*(x1734)))+((((IkReal)(1.53000000000000))*(x1733)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-44.0000000000000))*(x1733)*(x1734)))+((((IkReal)(-22.0000000000000))*((x1733)*(x1733))))+((((IkReal)(-22.0000000000000))*((x1734)*(x1734))))+((((IkReal)(17.0000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1735=IKsin(j1);
IkReal x1736=IKcos(j1);
IkReal x1737=((py)*(sj0));
IkReal x1738=((cj0)*(px));
IkReal x1739=(((IkReal)(1.10000000000000))*(x1735));
IkReal x1740=((x1736)*(x1738));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1735)*(x1738)))+(((x1735)*(x1737))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1736));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x1740)))+((((IkReal)(-1.00000000000000))*(x1736)*(x1737))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1738)))+((((IkReal)(-1.00000000000000))*(x1737)))+((((IkReal)(0.850000000000000))*(x1735))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x1740)))+((((IkReal)(0.0900000000000000))*(x1736)*(x1737)))+(((x1737)*(x1739)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1738)*(x1739))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1741=(((IkReal)(-1.00000000000000))*(cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x1741;
evalcond[3]=x1741;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1742=(((IkReal)(1.00000000000000))*(pp));
IkReal x1743=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1742))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x1743;
evalcond[4]=x1743;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1742))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1744=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1744))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1744))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1745=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(py);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1745))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1745))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1746=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1747=((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30);
IkReal x1748=((x1746)*(x1747));
if( IKabs((((IkReal)(0.850000000000000))*(x1748))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x1748)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x1748)))+IKsqr((((IkReal)(0.0555555555555556))*(x1748)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x1748)), (((IkReal)(0.0555555555555556))*(x1748)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1749=IKcos(j1);
IkReal x1750=IKsin(j1);
IkReal x1751=((py)*(sj0));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1750)*(x1751))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1749));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1749)*(x1751));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1751)))+((((IkReal)(0.850000000000000))*(x1750))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1750)*(x1751)))+((((IkReal)(0.0900000000000000))*(x1749)*(x1751)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(py)*(sj0))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(py)*(sj0)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(py)*(sj0)), (((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1752=IKcos(j1);
IkReal x1753=IKsin(j1);
IkReal x1754=((py)*(sj0));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1753)*(x1754))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1752));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1752)*(x1754));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1754)))+((((IkReal)(0.850000000000000))*(x1753))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1753)*(x1754)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1752)*(x1754))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1755=(((IkReal)(1.00000000000000))*(pp));
IkReal x1756=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x1755)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x1756;
evalcond[4]=x1756;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1755))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1757=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1757));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1757))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1758=IKsin(j1);
IkReal x1759=IKcos(j1);
IkReal x1760=(((IkReal)(0.0450000000000000))*(x1759));
evalcond[0]=((x1760)+((((IkReal)(0.550000000000000))*(x1758)))+((((IkReal)(0.300000000000000))*(sj3)*(x1759)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1760)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1758)))+((((IkReal)(0.300000000000000))*(cj3)*(x1758))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1761=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1761))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1761))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1762=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1762));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1762))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1763=IKsin(j1);
IkReal x1764=IKcos(j1);
IkReal x1765=(((IkReal)(0.0450000000000000))*(x1764));
evalcond[0]=(((((IkReal)(0.300000000000000))*(cj3)*(x1763)))+(x1765)+((((IkReal)(0.0450000000000000))*(sj3)*(x1763)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1765)))+((((IkReal)(0.550000000000000))*(x1763)))+((((IkReal)(0.300000000000000))*(sj3)*(x1764))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1766=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x1766;
evalcond[3]=x1766;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1767=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1767))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1767))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1768=(((IkReal)(1.00000000000000))*(pp));
IkReal x1769=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1768))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x1769;
evalcond[4]=x1769;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1768))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1770=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(px);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1770))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1770))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1771=((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30);
IkReal x1772=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1773=((x1771)*(x1772));
if( IKabs((((IkReal)(0.850000000000000))*(x1773))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x1773)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x1773)))+IKsqr((((IkReal)(0.0555555555555556))*(x1773)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x1773)), (((IkReal)(0.0555555555555556))*(x1773)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1774=IKcos(j1);
IkReal x1775=IKsin(j1);
IkReal x1776=((cj0)*(px));
IkReal x1777=((x1774)*(x1776));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1775)*(x1776))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1774));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1777));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x1775)))+((((IkReal)(-1.00000000000000))*(x1776))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1775)*(x1776)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1777))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(cj0)*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(cj0)*(px)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(cj0)*(px)), (((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1778=IKcos(j1);
IkReal x1779=IKsin(j1);
IkReal x1780=((cj0)*(px));
IkReal x1781=((x1778)*(x1780));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1779)*(x1780))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1778));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1781));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x1779)))+((((IkReal)(-1.00000000000000))*(x1780))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1779)*(x1780)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x1781))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1782=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1782)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1782))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1783=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1783));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1783))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1784=IKsin(j1);
IkReal x1785=IKcos(j1);
IkReal x1786=(((IkReal)(0.0450000000000000))*(x1785));
evalcond[0]=((x1786)+((((IkReal)(-1.00000000000000))*(cj3)*(x1786)))+((((IkReal)(0.300000000000000))*(cj3)*(x1784)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1784)))+((((IkReal)(0.300000000000000))*(sj3)*(x1785)))+((((IkReal)(0.550000000000000))*(x1784))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1787=(((IkReal)(1.00000000000000))*(pp));
IkReal x1788=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1787))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x1788;
evalcond[4]=x1788;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1787))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1789=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1789));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1789))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1790=IKsin(j1);
IkReal x1791=IKcos(j1);
IkReal x1792=(((IkReal)(0.0450000000000000))*(x1791));
evalcond[0]=(((((IkReal)(0.550000000000000))*(x1790)))+((((IkReal)(0.300000000000000))*(sj3)*(x1791)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1792)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1790)))+(x1792)+((((IkReal)(0.300000000000000))*(cj3)*(x1790))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1793=((cj0)*(px));
IkReal x1794=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1795=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1796=((py)*(sj0));
if( IKabs(((((IKabs((((((IkReal)(-0.0450000000000000))*(x1793)))+(((x1795)*(x1796)))+((((IkReal)(-1.00000000000000))*(x1794)*(x1796)))+(((x1793)*(x1795)))+((((IkReal)(-0.0450000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)*(x1794))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x1793)))+(((x1795)*(x1796)))+((((IkReal)(-1.00000000000000))*(x1794)*(x1796)))+(((x1793)*(x1795)))+((((IkReal)(-0.0450000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)*(x1794)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.00000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)))))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x1795)+((((IkReal)(-1.00000000000000))*(x1794))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs((((((IkReal)(-0.0450000000000000))*(x1793)))+(((x1795)*(x1796)))+((((IkReal)(-1.00000000000000))*(x1794)*(x1796)))+(((x1793)*(x1795)))+((((IkReal)(-0.0450000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)*(x1794))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x1793)))+(((x1795)*(x1796)))+((((IkReal)(-1.00000000000000))*(x1794)*(x1796)))+(((x1793)*(x1795)))+((((IkReal)(-0.0450000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)*(x1794)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))))+IKsqr(((((IKabs((((((IkReal)(-1.00000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)))))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x1795)+((((IkReal)(-1.00000000000000))*(x1794)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs((((((IkReal)(-0.0450000000000000))*(x1793)))+(((x1795)*(x1796)))+((((IkReal)(-1.00000000000000))*(x1794)*(x1796)))+(((x1793)*(x1795)))+((((IkReal)(-0.0450000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)*(x1794))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x1793)))+(((x1795)*(x1796)))+((((IkReal)(-1.00000000000000))*(x1794)*(x1796)))+(((x1793)*(x1795)))+((((IkReal)(-0.0450000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)*(x1794)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))), ((((IKabs((((((IkReal)(-1.00000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1796)))+((((IkReal)(-1.00000000000000))*(x1793)))))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x1795)+((((IkReal)(-1.00000000000000))*(x1794)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1797=IKsin(j1);
IkReal x1798=IKcos(j1);
IkReal x1799=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1800=((cj0)*(px));
IkReal x1801=((py)*(sj0));
IkReal x1802=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1803=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1804=((sj3)*(x1798));
IkReal x1805=(((IkReal)(1.00000000000000))*(x1798));
IkReal x1806=(((IkReal)(0.0450000000000000))*(x1797));
IkReal x1807=(((IkReal)(0.0900000000000000))*(x1798));
IkReal x1808=(((IkReal)(1.10000000000000))*(x1797));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1799)))+(((x1797)*(x1801)))+(((x1797)*(x1800))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1798)*(x1799)))+(x1806)+((((IkReal)(-1.00000000000000))*(x1797)*(x1802)))+((((IkReal)(-0.550000000000000))*(x1798)))+(((x1797)*(x1803)))+((((IkReal)(-0.0450000000000000))*(x1804))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1803)+((((IkReal)(-1.00000000000000))*(x1800)*(x1805)))+((((IkReal)(-1.00000000000000))*(x1801)*(x1805)))+((((IkReal)(-1.00000000000000))*(x1802))));
evalcond[3]=((((x1798)*(x1803)))+(((sj3)*(x1806)))+(((x1797)*(x1799)))+((((IkReal)(-1.00000000000000))*(x1798)*(x1802)))+((((IkReal)(0.550000000000000))*(x1797)))+((((IkReal)(-1.00000000000000))*(x1800)))+((((IkReal)(0.0450000000000000))*(x1798)))+((((IkReal)(-1.00000000000000))*(x1801))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1801)*(x1808)))+(((x1800)*(x1807)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1800)*(x1808)))+(((x1801)*(x1807))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1809=((cj0)*(px));
IkReal x1810=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1811=((py)*(sj0));
IkReal x1812=(((IkReal)(0.0450000000000000))*(sj3));
if( IKabs(((((IKabs(((x1809)+(x1811))) != 0)?((IkReal)1/(((x1809)+(x1811)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x1810)+(x1812))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.00000000000000))*(x1810)*(x1811)))+((((IkReal)(-1.00000000000000))*(x1811)*(x1812)))+((((IkReal)(-0.550000000000000))*(x1809)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1810)))+((((IkReal)(-0.550000000000000))*(x1811)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1812))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1810)*(x1811)))+((((IkReal)(-1.00000000000000))*(x1811)*(x1812)))+((((IkReal)(-0.550000000000000))*(x1809)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1810)))+((((IkReal)(-0.550000000000000))*(x1811)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1812)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x1809)+(x1811))) != 0)?((IkReal)1/(((x1809)+(x1811)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x1810)+(x1812)))))+IKsqr(((((IKabs((((((IkReal)(-1.00000000000000))*(x1810)*(x1811)))+((((IkReal)(-1.00000000000000))*(x1811)*(x1812)))+((((IkReal)(-0.550000000000000))*(x1809)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1810)))+((((IkReal)(-0.550000000000000))*(x1811)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1812))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1810)*(x1811)))+((((IkReal)(-1.00000000000000))*(x1811)*(x1812)))+((((IkReal)(-0.550000000000000))*(x1809)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1810)))+((((IkReal)(-0.550000000000000))*(x1811)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1812)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((x1809)+(x1811))) != 0)?((IkReal)1/(((x1809)+(x1811)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x1810)+(x1812)))), ((((IKabs((((((IkReal)(-1.00000000000000))*(x1810)*(x1811)))+((((IkReal)(-1.00000000000000))*(x1811)*(x1812)))+((((IkReal)(-0.550000000000000))*(x1809)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1810)))+((((IkReal)(-0.550000000000000))*(x1811)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1812))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1810)*(x1811)))+((((IkReal)(-1.00000000000000))*(x1811)*(x1812)))+((((IkReal)(-0.550000000000000))*(x1809)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1810)))+((((IkReal)(-0.550000000000000))*(x1811)))+((((IkReal)(-1.00000000000000))*(x1809)*(x1812)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1813=IKsin(j1);
IkReal x1814=IKcos(j1);
IkReal x1815=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1816=((cj0)*(px));
IkReal x1817=((py)*(sj0));
IkReal x1818=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1819=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1820=((sj3)*(x1814));
IkReal x1821=(((IkReal)(1.00000000000000))*(x1814));
IkReal x1822=(((IkReal)(0.0450000000000000))*(x1813));
IkReal x1823=(((IkReal)(0.0900000000000000))*(x1814));
IkReal x1824=(((IkReal)(1.10000000000000))*(x1813));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1815)))+(((x1813)*(x1817)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1813)*(x1816))));
evalcond[1]=((x1822)+((((IkReal)(-0.0450000000000000))*(x1820)))+((((IkReal)(-0.550000000000000))*(x1814)))+((((IkReal)(-1.00000000000000))*(x1814)*(x1815)))+((((IkReal)(-1.00000000000000))*(x1813)*(x1818)))+(((x1813)*(x1819))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1819)+((((IkReal)(-1.00000000000000))*(x1818)))+((((IkReal)(-1.00000000000000))*(x1816)*(x1821)))+((((IkReal)(-1.00000000000000))*(x1817)*(x1821))));
evalcond[3]=((((x1813)*(x1815)))+((((IkReal)(-1.00000000000000))*(x1816)))+((((IkReal)(0.550000000000000))*(x1813)))+((((IkReal)(-1.00000000000000))*(x1814)*(x1818)))+((((IkReal)(-1.00000000000000))*(x1817)))+(((x1814)*(x1819)))+(((sj3)*(x1822)))+((((IkReal)(0.0450000000000000))*(x1814))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1817)*(x1824)))+(((x1816)*(x1824)))+(((x1816)*(x1823)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1817)*(x1823))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs(((gconst48)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst48)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))), ((gconst48)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1825=IKsin(j1);
IkReal x1826=IKcos(j1);
IkReal x1827=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1828=((cj0)*(px));
IkReal x1829=((py)*(sj0));
IkReal x1830=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1831=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1832=((sj3)*(x1826));
IkReal x1833=(((IkReal)(1.00000000000000))*(x1826));
IkReal x1834=(((IkReal)(0.0450000000000000))*(x1825));
IkReal x1835=(((IkReal)(0.0900000000000000))*(x1826));
IkReal x1836=(((IkReal)(1.10000000000000))*(x1825));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1825)*(x1828)))+((((IkReal)(-1.00000000000000))*(x1827)))+(((x1825)*(x1829))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1825)*(x1830)))+(((x1825)*(x1831)))+((((IkReal)(-0.0450000000000000))*(x1832)))+(x1834)+((((IkReal)(-0.550000000000000))*(x1826)))+((((IkReal)(-1.00000000000000))*(x1826)*(x1827))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1831)+((((IkReal)(-1.00000000000000))*(x1830)))+((((IkReal)(-1.00000000000000))*(x1828)*(x1833)))+((((IkReal)(-1.00000000000000))*(x1829)*(x1833))));
evalcond[3]=(((((IkReal)(0.0450000000000000))*(x1826)))+((((IkReal)(-1.00000000000000))*(x1826)*(x1830)))+((((IkReal)(-1.00000000000000))*(x1828)))+(((x1825)*(x1827)))+(((x1826)*(x1831)))+((((IkReal)(0.550000000000000))*(x1825)))+(((sj3)*(x1834)))+((((IkReal)(-1.00000000000000))*(x1829))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1829)*(x1836)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x1828)*(x1835)))+(((x1829)*(x1835)))+(((x1828)*(x1836))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1837=((px)*(sj0));
IkReal x1838=((cj0)*(py));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=((x1837)+((((IkReal)(-1.00000000000000))*(x1838))));
evalcond[3]=((x1838)+((((IkReal)(-1.00000000000000))*(x1837))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign(((((py)*(sj0)))+(((cj0)*(px)))));
dummyeval[0]=((((py)*(sj0)))+(((cj0)*(px))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1839=((cj0)*(px));
IkReal x1840=(((IkReal)(6.66666666666667))*(cj3));
IkReal x1841=((py)*(sj0));
IkReal x1842=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=((x1841)+(x1839));
dummyeval[1]=(((((IkReal)(-1.00000000000000))*(x1840)*(x1841)))+((((IkReal)(-1.00000000000000))*(x1839)*(x1840)))+((((IkReal)(-12.2222222222222))*(x1839)))+((((IkReal)(-1.00000000000000))*(x1841)*(x1842)))+((((IkReal)(-1.00000000000000))*(x1839)*(x1842)))+((((IkReal)(-12.2222222222222))*(x1841))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1843=((cj0)*(px));
IkReal x1844=((py)*(sj0));
IkReal x1845=(((IkReal)(6.66666666666667))*(sj3));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x1844)*(x1845)))+((((IkReal)(-1.00000000000000))*(x1843)))+((((IkReal)(-1.00000000000000))*(x1844)))+(((cj3)*(x1844)))+(((cj3)*(x1843)))+((((IkReal)(-1.00000000000000))*(x1843)*(x1845))));
dummyeval[1]=((x1843)+(x1844));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1846=((px)*(sj0));
IkReal x1847=((cj0)*(py));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x1847)))+(x1846));
evalcond[3]=((x1847)+((((IkReal)(-1.00000000000000))*(x1846))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(cj0)*(px)))+((((IkReal)(-1.00000000000000))*(py)*(sj0))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1848=((cj0)*(px));
IkReal x1849=((py)*(sj0));
dummyeval[0]=((x1849)+(x1848));
dummyeval[1]=(((((IkReal)(-1.00000000000000))*((x1849)*(x1849))))+((((IkReal)(-1.00000000000000))*((x1848)*(x1848))))+((((IkReal)(-2.00000000000000))*(x1848)*(x1849))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1850=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1850))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1850))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1851=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1851))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1851))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1852=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1852))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1852))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1853=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1853))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1853))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1854=((py)*(sj0));
IkReal x1855=((cj0)*(px));
IkReal x1856=(((IkReal)(20.0000000000000))*(pp));
if( IKabs((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x1855)))+((((IkReal)(20.0000000000000))*(x1854))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x1855)))+((((IkReal)(20.0000000000000))*(x1854)))))):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-3.60000000000000))*(x1854)*(x1855)))+((((IkReal)(-1.80000000000000))*((x1855)*(x1855))))+((((IkReal)(-1.80000000000000))*((x1854)*(x1854)))))) != 0)?((IkReal)1/((((((IkReal)(-3.60000000000000))*(x1854)*(x1855)))+((((IkReal)(-1.80000000000000))*((x1855)*(x1855))))+((((IkReal)(-1.80000000000000))*((x1854)*(x1854))))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x1854)))+(((x1855)*(x1856)))+((((IkReal)(-14.4500000000000))*(x1855)))+(((x1854)*(x1856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x1855)))+((((IkReal)(20.0000000000000))*(x1854))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x1855)))+((((IkReal)(20.0000000000000))*(x1854)))))):(IkReal)1.0e30))))+IKsqr(((((IKabs((((((IkReal)(-3.60000000000000))*(x1854)*(x1855)))+((((IkReal)(-1.80000000000000))*((x1855)*(x1855))))+((((IkReal)(-1.80000000000000))*((x1854)*(x1854)))))) != 0)?((IkReal)1/((((((IkReal)(-3.60000000000000))*(x1854)*(x1855)))+((((IkReal)(-1.80000000000000))*((x1855)*(x1855))))+((((IkReal)(-1.80000000000000))*((x1854)*(x1854))))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x1854)))+(((x1855)*(x1856)))+((((IkReal)(-14.4500000000000))*(x1855)))+(((x1854)*(x1856)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x1855)))+((((IkReal)(20.0000000000000))*(x1854))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x1855)))+((((IkReal)(20.0000000000000))*(x1854)))))):(IkReal)1.0e30))), ((((IKabs((((((IkReal)(-3.60000000000000))*(x1854)*(x1855)))+((((IkReal)(-1.80000000000000))*((x1855)*(x1855))))+((((IkReal)(-1.80000000000000))*((x1854)*(x1854)))))) != 0)?((IkReal)1/((((((IkReal)(-3.60000000000000))*(x1854)*(x1855)))+((((IkReal)(-1.80000000000000))*((x1855)*(x1855))))+((((IkReal)(-1.80000000000000))*((x1854)*(x1854))))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x1854)))+(((x1855)*(x1856)))+((((IkReal)(-14.4500000000000))*(x1855)))+(((x1854)*(x1856)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1857=IKsin(j1);
IkReal x1858=IKcos(j1);
IkReal x1859=((cj0)*(px));
IkReal x1860=((py)*(sj0));
IkReal x1861=(((IkReal)(0.0900000000000000))*(x1858));
IkReal x1862=((x1857)*(x1860));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1857)*(x1859)))+(x1862));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1858));
evalcond[2]=((((x1858)*(x1859)))+(((x1858)*(x1860))));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x1857)))+((((IkReal)(-1.00000000000000))*(x1860)))+((((IkReal)(-1.00000000000000))*(x1859))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1857)*(x1859)))+((((IkReal)(-1.00000000000000))*(x1860)*(x1861)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x1859)*(x1861)))+((((IkReal)(1.10000000000000))*(x1862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1863=((cj0)*(px));
IkReal x1864=((py)*(sj0));
if( IKabs((((((IkReal)(1.17647058823529))*(x1863)))+((((IkReal)(1.17647058823529))*(x1864))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.53000000000000))*(x1864)))+((((IkReal)(-1.53000000000000))*(x1863))))) != 0)?((IkReal)1/((((((IkReal)(-1.53000000000000))*(x1864)))+((((IkReal)(-1.53000000000000))*(x1863)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x1863)*(x1863))))+((((IkReal)(-44.0000000000000))*(x1863)*(x1864)))+((((IkReal)(17.0000000000000))*(pp)))+((((IkReal)(-22.0000000000000))*((x1864)*(x1864)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((((IkReal)(1.17647058823529))*(x1863)))+((((IkReal)(1.17647058823529))*(x1864)))))+IKsqr(((((IKabs((((((IkReal)(-1.53000000000000))*(x1864)))+((((IkReal)(-1.53000000000000))*(x1863))))) != 0)?((IkReal)1/((((((IkReal)(-1.53000000000000))*(x1864)))+((((IkReal)(-1.53000000000000))*(x1863)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x1863)*(x1863))))+((((IkReal)(-44.0000000000000))*(x1863)*(x1864)))+((((IkReal)(17.0000000000000))*(pp)))+((((IkReal)(-22.0000000000000))*((x1864)*(x1864))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((((IkReal)(1.17647058823529))*(x1863)))+((((IkReal)(1.17647058823529))*(x1864)))), ((((IKabs((((((IkReal)(-1.53000000000000))*(x1864)))+((((IkReal)(-1.53000000000000))*(x1863))))) != 0)?((IkReal)1/((((((IkReal)(-1.53000000000000))*(x1864)))+((((IkReal)(-1.53000000000000))*(x1863)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x1863)*(x1863))))+((((IkReal)(-44.0000000000000))*(x1863)*(x1864)))+((((IkReal)(17.0000000000000))*(pp)))+((((IkReal)(-22.0000000000000))*((x1864)*(x1864))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1865=IKsin(j1);
IkReal x1866=IKcos(j1);
IkReal x1867=((cj0)*(px));
IkReal x1868=((py)*(sj0));
IkReal x1869=(((IkReal)(0.0900000000000000))*(x1866));
IkReal x1870=((x1865)*(x1868));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1865)*(x1867)))+(x1870));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1866));
evalcond[2]=((((x1866)*(x1868)))+(((x1866)*(x1867))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1867)))+((((IkReal)(0.850000000000000))*(x1865)))+((((IkReal)(-1.00000000000000))*(x1868))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1870)))+((((IkReal)(-1.00000000000000))*(x1868)*(x1869)))+((((IkReal)(1.10000000000000))*(x1865)*(x1867)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x1867)*(x1869))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1871=((cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x1871));
evalcond[3]=x1871;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1872=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1872))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1872))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1873=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1873))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1873))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1874=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(py);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1874))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1874))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1875=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x1876=((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30);
IkReal x1877=((x1875)*(x1876));
if( IKabs((((IkReal)(0.850000000000000))*(x1877))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x1877)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x1877)))+IKsqr((((IkReal)(0.0555555555555556))*(x1877)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x1877)), (((IkReal)(0.0555555555555556))*(x1877)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1878=IKcos(j1);
IkReal x1879=IKsin(j1);
IkReal x1880=((py)*(sj0));
IkReal x1881=((x1879)*(x1880));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1881));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1878));
evalcond[2]=((x1878)*(x1880));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x1879)))+((((IkReal)(-1.00000000000000))*(x1880))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1881)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1878)*(x1880))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(py)*(sj0))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(py)*(sj0)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(py)*(sj0)), (((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1882=IKcos(j1);
IkReal x1883=IKsin(j1);
IkReal x1884=((py)*(sj0));
IkReal x1885=((x1883)*(x1884));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x1885));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1882));
evalcond[2]=((x1882)*(x1884));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1884)))+((((IkReal)(0.850000000000000))*(x1883))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1885)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x1882)*(x1884))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1886=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x1886))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1886))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1887=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1887));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1887))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1888=IKsin(j1);
IkReal x1889=IKcos(j1);
IkReal x1890=(((IkReal)(0.0450000000000000))*(x1889));
evalcond[0]=(((((IkReal)(-0.300000000000000))*(sj3)*(x1889)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1888)))+((((IkReal)(0.300000000000000))*(cj3)*(x1888)))+((((IkReal)(-1.00000000000000))*(x1890)))+(((cj3)*(x1890)))+((((IkReal)(0.550000000000000))*(x1888))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1891=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1891)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1891))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1892=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1892));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1892))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1893=IKsin(j1);
IkReal x1894=IKcos(j1);
IkReal x1895=(((IkReal)(0.0450000000000000))*(x1894));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x1893)))+(((cj3)*(x1895)))+((((IkReal)(-1.00000000000000))*(x1895)))+((((IkReal)(0.550000000000000))*(x1893)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1894)))+((((IkReal)(0.300000000000000))*(cj3)*(x1893))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1896=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x1896;
evalcond[3]=(((IkReal)(-1.00000000000000))*(x1896));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1897=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1897))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1897))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1898=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1898))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1898))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x1899=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(px);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x1899))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1899))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1900=((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30);
IkReal x1901=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x1902=((x1900)*(x1901));
if( IKabs((((IkReal)(0.850000000000000))*(x1902))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x1902)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x1902)))+IKsqr((((IkReal)(0.0555555555555556))*(x1902)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x1902)), (((IkReal)(0.0555555555555556))*(x1902)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1903=IKcos(j1);
IkReal x1904=IKsin(j1);
IkReal x1905=((cj0)*(px));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1904)*(x1905))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1903));
evalcond[2]=((x1903)*(x1905));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x1904)))+((((IkReal)(-1.00000000000000))*(x1905))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x1903)*(x1905)))+((((IkReal)(1.10000000000000))*(x1904)*(x1905)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(cj0)*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(-1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(cj0)*(px)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(-1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(cj0)*(px)), (((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(-1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1906=IKcos(j1);
IkReal x1907=IKsin(j1);
IkReal x1908=((cj0)*(px));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x1907)*(x1908))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x1906));
evalcond[2]=((x1906)*(x1908));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1908)))+((((IkReal)(0.850000000000000))*(x1907))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1907)*(x1908)))+((((IkReal)(-0.0900000000000000))*(x1906)*(x1908)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x1909=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x1909)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1909))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1910=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1910));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1910))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1911=IKsin(j1);
IkReal x1912=IKcos(j1);
IkReal x1913=(((IkReal)(0.0450000000000000))*(x1912));
evalcond[0]=(((((IkReal)(0.550000000000000))*(x1911)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1912)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1911)))+((((IkReal)(0.300000000000000))*(cj3)*(x1911)))+(((cj3)*(x1913)))+((((IkReal)(-1.00000000000000))*(x1913))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x1914=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1914)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x1914))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1915=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x1915));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x1915))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x1916=IKsin(j1);
IkReal x1917=IKcos(j1);
IkReal x1918=(((IkReal)(0.0450000000000000))*(x1917));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x1918)))+((((IkReal)(-0.300000000000000))*(sj3)*(x1917)))+((((IkReal)(0.550000000000000))*(x1916)))+((((IkReal)(0.300000000000000))*(cj3)*(x1916)))+(((cj3)*(x1918)))+((((IkReal)(0.0450000000000000))*(sj3)*(x1916))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1919=((cj0)*(px));
IkReal x1920=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1921=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1922=((py)*(sj0));
if( IKabs(((((IKabs(((((x1921)*(x1922)))+((((IkReal)(-1.00000000000000))*(x1920)*(x1922)))+(((x1919)*(x1921)))+((((IkReal)(-0.0450000000000000))*(x1922)))+((((IkReal)(-0.0450000000000000))*(x1919)))+((((IkReal)(-1.00000000000000))*(x1919)*(x1920))))) != 0)?((IkReal)1/(((((x1921)*(x1922)))+((((IkReal)(-1.00000000000000))*(x1920)*(x1922)))+(((x1919)*(x1921)))+((((IkReal)(-0.0450000000000000))*(x1922)))+((((IkReal)(-0.0450000000000000))*(x1919)))+((((IkReal)(-1.00000000000000))*(x1919)*(x1920)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x1922)+(x1919))) != 0)?((IkReal)1/(((x1922)+(x1919)))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x1921)+((((IkReal)(-1.00000000000000))*(x1920))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((x1921)*(x1922)))+((((IkReal)(-1.00000000000000))*(x1920)*(x1922)))+(((x1919)*(x1921)))+((((IkReal)(-0.0450000000000000))*(x1922)))+((((IkReal)(-0.0450000000000000))*(x1919)))+((((IkReal)(-1.00000000000000))*(x1919)*(x1920))))) != 0)?((IkReal)1/(((((x1921)*(x1922)))+((((IkReal)(-1.00000000000000))*(x1920)*(x1922)))+(((x1919)*(x1921)))+((((IkReal)(-0.0450000000000000))*(x1922)))+((((IkReal)(-0.0450000000000000))*(x1919)))+((((IkReal)(-1.00000000000000))*(x1919)*(x1920)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))))+IKsqr(((((IKabs(((x1922)+(x1919))) != 0)?((IkReal)1/(((x1922)+(x1919)))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x1921)+((((IkReal)(-1.00000000000000))*(x1920)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((((x1921)*(x1922)))+((((IkReal)(-1.00000000000000))*(x1920)*(x1922)))+(((x1919)*(x1921)))+((((IkReal)(-0.0450000000000000))*(x1922)))+((((IkReal)(-0.0450000000000000))*(x1919)))+((((IkReal)(-1.00000000000000))*(x1919)*(x1920))))) != 0)?((IkReal)1/(((((x1921)*(x1922)))+((((IkReal)(-1.00000000000000))*(x1920)*(x1922)))+(((x1919)*(x1921)))+((((IkReal)(-0.0450000000000000))*(x1922)))+((((IkReal)(-0.0450000000000000))*(x1919)))+((((IkReal)(-1.00000000000000))*(x1919)*(x1920)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))), ((((IKabs(((x1922)+(x1919))) != 0)?((IkReal)1/(((x1922)+(x1919)))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x1921)+((((IkReal)(-1.00000000000000))*(x1920)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1923=IKsin(j1);
IkReal x1924=IKcos(j1);
IkReal x1925=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1926=((cj0)*(px));
IkReal x1927=((py)*(sj0));
IkReal x1928=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1929=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1930=((sj3)*(x1924));
IkReal x1931=(((IkReal)(0.0450000000000000))*(x1923));
IkReal x1932=(((IkReal)(1.10000000000000))*(x1923));
IkReal x1933=(((IkReal)(0.0900000000000000))*(x1924));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1923)*(x1927)))+((((IkReal)(-1.00000000000000))*(x1925)))+(((x1923)*(x1926))));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x1930)))+((((IkReal)(-1.00000000000000))*(x1931)))+(((x1923)*(x1928)))+((((IkReal)(-1.00000000000000))*(x1923)*(x1929)))+((((IkReal)(-0.550000000000000))*(x1924)))+((((IkReal)(-1.00000000000000))*(x1924)*(x1925))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x1928)))+(((x1924)*(x1927)))+(x1929)+(((x1924)*(x1926))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1924)*(x1929)))+((((IkReal)(-0.0450000000000000))*(x1924)))+((((IkReal)(-1.00000000000000))*(x1927)))+(((x1924)*(x1928)))+((((IkReal)(0.550000000000000))*(x1923)))+(((sj3)*(x1931)))+((((IkReal)(-1.00000000000000))*(x1926)))+(((x1923)*(x1925))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1927)*(x1932)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x1926)*(x1933)))+((((IkReal)(-1.00000000000000))*(x1927)*(x1933)))+(((x1926)*(x1932))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1934=((cj0)*(px));
IkReal x1935=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1936=((py)*(sj0));
IkReal x1937=(((IkReal)(0.0450000000000000))*(sj3));
if( IKabs(((((IKabs(((x1936)+(x1934))) != 0)?((IkReal)1/(((x1936)+(x1934)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x1937)+(x1935))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.00000000000000))*(x1936)*(x1937)))+((((IkReal)(-0.550000000000000))*(x1934)))+((((IkReal)(-1.00000000000000))*(x1935)*(x1936)))+((((IkReal)(-0.550000000000000))*(x1936)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1935)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1937))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1936)*(x1937)))+((((IkReal)(-0.550000000000000))*(x1934)))+((((IkReal)(-1.00000000000000))*(x1935)*(x1936)))+((((IkReal)(-0.550000000000000))*(x1936)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1935)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1937)))))):(IkReal)1.0e30))*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((sj3)*(sj3))))+((((IkReal)(0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((cj3)*(cj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x1936)+(x1934))) != 0)?((IkReal)1/(((x1936)+(x1934)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x1937)+(x1935)))))+IKsqr(((((IKabs((((((IkReal)(-1.00000000000000))*(x1936)*(x1937)))+((((IkReal)(-0.550000000000000))*(x1934)))+((((IkReal)(-1.00000000000000))*(x1935)*(x1936)))+((((IkReal)(-0.550000000000000))*(x1936)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1935)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1937))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1936)*(x1937)))+((((IkReal)(-0.550000000000000))*(x1934)))+((((IkReal)(-1.00000000000000))*(x1935)*(x1936)))+((((IkReal)(-0.550000000000000))*(x1936)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1935)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1937)))))):(IkReal)1.0e30))*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((sj3)*(sj3))))+((((IkReal)(0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((cj3)*(cj3))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((x1936)+(x1934))) != 0)?((IkReal)1/(((x1936)+(x1934)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x1937)+(x1935)))), ((((IKabs((((((IkReal)(-1.00000000000000))*(x1936)*(x1937)))+((((IkReal)(-0.550000000000000))*(x1934)))+((((IkReal)(-1.00000000000000))*(x1935)*(x1936)))+((((IkReal)(-0.550000000000000))*(x1936)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1935)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1937))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x1936)*(x1937)))+((((IkReal)(-0.550000000000000))*(x1934)))+((((IkReal)(-1.00000000000000))*(x1935)*(x1936)))+((((IkReal)(-0.550000000000000))*(x1936)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1935)))+((((IkReal)(-1.00000000000000))*(x1934)*(x1937)))))):(IkReal)1.0e30))*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((sj3)*(sj3))))+((((IkReal)(0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((cj3)*(cj3))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1938=IKsin(j1);
IkReal x1939=IKcos(j1);
IkReal x1940=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1941=((cj0)*(px));
IkReal x1942=((py)*(sj0));
IkReal x1943=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1944=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1945=((sj3)*(x1939));
IkReal x1946=(((IkReal)(0.0450000000000000))*(x1938));
IkReal x1947=(((IkReal)(1.10000000000000))*(x1938));
IkReal x1948=(((IkReal)(0.0900000000000000))*(x1939));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1940)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x1938)*(x1941)))+(((x1938)*(x1942))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1938)*(x1944)))+((((IkReal)(-1.00000000000000))*(x1939)*(x1940)))+(((x1938)*(x1943)))+((((IkReal)(-0.550000000000000))*(x1939)))+((((IkReal)(-0.0450000000000000))*(x1945)))+((((IkReal)(-1.00000000000000))*(x1946))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x1944)+(((x1939)*(x1942)))+(((x1939)*(x1941)))+((((IkReal)(-1.00000000000000))*(x1943))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x1942)))+((((IkReal)(0.550000000000000))*(x1938)))+((((IkReal)(-0.0450000000000000))*(x1939)))+((((IkReal)(-1.00000000000000))*(x1939)*(x1944)))+(((x1938)*(x1940)))+(((x1939)*(x1943)))+(((sj3)*(x1946)))+((((IkReal)(-1.00000000000000))*(x1941))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1942)*(x1947)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x1942)*(x1948)))+((((IkReal)(-1.00000000000000))*(x1941)*(x1948)))+(((x1941)*(x1947))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs(((gconst49)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst49)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))), ((gconst49)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x1949=IKsin(j1);
IkReal x1950=IKcos(j1);
IkReal x1951=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1952=((cj0)*(px));
IkReal x1953=((py)*(sj0));
IkReal x1954=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x1955=(((IkReal)(0.300000000000000))*(sj3));
IkReal x1956=((sj3)*(x1950));
IkReal x1957=(((IkReal)(0.0450000000000000))*(x1949));
IkReal x1958=(((IkReal)(1.10000000000000))*(x1949));
IkReal x1959=(((IkReal)(0.0900000000000000))*(x1950));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1951)))+(((x1949)*(x1953)))+(((x1949)*(x1952))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x1957)))+(((x1949)*(x1954)))+((((IkReal)(-0.0450000000000000))*(x1956)))+((((IkReal)(-1.00000000000000))*(x1950)*(x1951)))+((((IkReal)(-1.00000000000000))*(x1949)*(x1955)))+((((IkReal)(-0.550000000000000))*(x1950))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x1950)*(x1953)))+((((IkReal)(-1.00000000000000))*(x1954)))+(x1955)+(((x1950)*(x1952))));
evalcond[3]=((((sj3)*(x1957)))+((((IkReal)(-1.00000000000000))*(x1952)))+((((IkReal)(-1.00000000000000))*(x1953)))+((((IkReal)(-1.00000000000000))*(x1950)*(x1955)))+(((x1949)*(x1951)))+(((x1950)*(x1954)))+((((IkReal)(0.550000000000000))*(x1949)))+((((IkReal)(-0.0450000000000000))*(x1950))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x1953)*(x1958)))+(((x1952)*(x1958)))+((((IkReal)(-1.00000000000000))*(x1953)*(x1959)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x1952)*(x1959))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1960=((cj2)*(pz));
IkReal x1961=(((IkReal)(1.00000000000000))*(cj0));
IkReal x1962=((pz)*(sj2));
IkReal x1963=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1964=(((IkReal)(0.550000000000000))*(sj2));
IkReal x1965=((py)*(sj0));
IkReal x1966=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1967=((cj2)*(sj0));
IkReal x1968=((cj2)*(px)*(py));
IkReal x1969=((cj0)*(px)*(sj2));
if( IKabs(((gconst35)*(((((x1963)*(x1969)))+(((sj2)*(x1963)*(x1965)))+(((x1964)*(x1965)))+(((px)*(sj0)*(x1960)))+((((IkReal)(-1.00000000000000))*(py)*(x1960)*(x1961)))+(((cj0)*(px)*(x1964)))+(((sj2)*(x1965)*(x1966)))+(((x1966)*(x1969))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((x1968)*((cj0)*(cj0))))+((((IkReal)(-1.00000000000000))*(px)*(x1965)*(x1967)))+(((x1962)*(x1963)))+((((IkReal)(-1.00000000000000))*(x1961)*(x1967)*((px)*(px))))+(((cj0)*(cj2)*(py)*(x1965)))+((((IkReal)(0.550000000000000))*(x1962)))+(((x1962)*(x1966))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst35)*(((((x1963)*(x1969)))+(((sj2)*(x1963)*(x1965)))+(((x1964)*(x1965)))+(((px)*(sj0)*(x1960)))+((((IkReal)(-1.00000000000000))*(py)*(x1960)*(x1961)))+(((cj0)*(px)*(x1964)))+(((sj2)*(x1965)*(x1966)))+(((x1966)*(x1969)))))), ((gconst35)*(((((x1968)*((cj0)*(cj0))))+((((IkReal)(-1.00000000000000))*(px)*(x1965)*(x1967)))+(((x1962)*(x1963)))+((((IkReal)(-1.00000000000000))*(x1961)*(x1967)*((px)*(px))))+(((cj0)*(cj2)*(py)*(x1965)))+((((IkReal)(0.550000000000000))*(x1962)))+(((x1962)*(x1966)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1970=IKsin(j1);
IkReal x1971=IKcos(j1);
IkReal x1972=((px)*(sj2));
IkReal x1973=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1974=(((IkReal)(0.0900000000000000))*(cj2));
IkReal x1975=(((IkReal)(0.0450000000000000))*(cj2));
IkReal x1976=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1977=((py)*(sj0));
IkReal x1978=((cj0)*(px));
IkReal x1979=(((IkReal)(1.00000000000000))*(cj2));
IkReal x1980=((cj0)*(x1971));
IkReal x1981=(((IkReal)(1.00000000000000))*(cj0)*(py));
IkReal x1982=(((IkReal)(1.10000000000000))*(x1970));
IkReal x1983=((pz)*(x1971));
IkReal x1984=((pz)*(x1970));
IkReal x1985=(((IkReal)(0.300000000000000))*(cj2)*(sj3));
IkReal x1986=((x1971)*(x1977));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x1976)))+((((IkReal)(-1.00000000000000))*(x1973)))+(x1983)+(((x1970)*(x1977)))+(((x1970)*(x1978))));
evalcond[1]=((((sj2)*(x1986)))+(((cj2)*(px)*(sj0)))+(((x1972)*(x1980)))+((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x1979)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1984))));
evalcond[2]=((((x1970)*(x1985)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1970)*(x1975)))+(((x1970)*(x1975)))+((((IkReal)(-0.550000000000000))*(x1971)))+(pz)+((((IkReal)(-1.00000000000000))*(x1971)*(x1973)))+((((IkReal)(-1.00000000000000))*(x1971)*(x1976))));
evalcond[3]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((cj2)*(x1984)))+((((IkReal)(-1.00000000000000))*(x1979)*(x1986)))+((((IkReal)(-1.00000000000000))*(x1971)*(x1978)*(x1979)))+((((IkReal)(-1.00000000000000))*(sj2)*(x1981)))+(((sj0)*(x1972))));
evalcond[4]=((((x1970)*(x1976)))+(((x1971)*(x1985)))+(((x1971)*(x1975)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1971)*(x1975)))+((((IkReal)(-1.00000000000000))*(x1977)))+((((IkReal)(-1.00000000000000))*(x1978)))+(((x1970)*(x1973)))+((((IkReal)(0.550000000000000))*(x1970))));
evalcond[5]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x1983)))+(((x1974)*(x1986)))+((((IkReal)(0.0900000000000000))*(cj0)*(py)*(sj2)))+(((x1978)*(x1982)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x1974)*(x1984)))+(((x1971)*(x1974)*(x1978)))+((((IkReal)(-0.0900000000000000))*(sj0)*(x1972)))+(((x1977)*(x1982))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1987=(cj3)*(cj3);
IkReal x1988=(sj3)*(sj3);
IkReal x1989=((cj2)*(cj3));
IkReal x1990=(((IkReal)(0.0135000000000000))*(cj2));
IkReal x1991=(((IkReal)(1.00000000000000))*(pz));
if( IKabs(((gconst34)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0900000000000000))*(x1987)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x1988)))+((((IkReal)(-0.0270000000000000))*(cj3)*(sj3)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*((((((IkReal)(-1.00000000000000))*(x1988)*(x1990)))+((((IkReal)(-0.0247500000000000))*(cj2)))+(((x1987)*(x1990)))+((((IkReal)(-0.167025000000000))*(cj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x1991)))+((((IkReal)(0.0112500000000000))*(x1989)))+((((IkReal)(-0.0879750000000000))*(sj3)*(x1989)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x1991))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst34)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0900000000000000))*(x1987)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x1988)))+((((IkReal)(-0.0270000000000000))*(cj3)*(sj3)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst34)*((((((IkReal)(-1.00000000000000))*(x1988)*(x1990)))+((((IkReal)(-0.0247500000000000))*(cj2)))+(((x1987)*(x1990)))+((((IkReal)(-0.167025000000000))*(cj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x1991)))+((((IkReal)(0.0112500000000000))*(x1989)))+((((IkReal)(-0.0879750000000000))*(sj3)*(x1989)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x1991)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1992=IKsin(j1);
IkReal x1993=IKcos(j1);
IkReal x1994=((px)*(sj2));
IkReal x1995=(((IkReal)(0.300000000000000))*(cj3));
IkReal x1996=(((IkReal)(0.0900000000000000))*(cj2));
IkReal x1997=(((IkReal)(0.0450000000000000))*(cj2));
IkReal x1998=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x1999=((py)*(sj0));
IkReal x2000=((cj0)*(px));
IkReal x2001=(((IkReal)(1.00000000000000))*(cj2));
IkReal x2002=((cj0)*(x1993));
IkReal x2003=(((IkReal)(1.00000000000000))*(cj0)*(py));
IkReal x2004=(((IkReal)(1.10000000000000))*(x1992));
IkReal x2005=((pz)*(x1993));
IkReal x2006=((pz)*(x1992));
IkReal x2007=(((IkReal)(0.300000000000000))*(cj2)*(sj3));
IkReal x2008=((x1993)*(x1999));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x1992)*(x2000)))+(((x1992)*(x1999)))+((((IkReal)(-1.00000000000000))*(x1995)))+((((IkReal)(-1.00000000000000))*(x1998)))+(x2005));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj2)*(x2006)))+((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x2001)))+(((cj2)*(px)*(sj0)))+(((sj2)*(x2008)))+(((x1994)*(x2002))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x1993)*(x1998)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1992)*(x1997)))+(((x1992)*(x1997)))+((((IkReal)(-1.00000000000000))*(x1993)*(x1995)))+((((IkReal)(-0.550000000000000))*(x1993)))+(pz)+(((x1992)*(x2007))));
evalcond[3]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x1993)*(x2000)*(x2001)))+(((sj0)*(x1994)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((cj2)*(x2006)))+((((IkReal)(-1.00000000000000))*(x2001)*(x2008)))+((((IkReal)(-1.00000000000000))*(sj2)*(x2003))));
evalcond[4]=((((x1992)*(x1998)))+((((IkReal)(0.550000000000000))*(x1992)))+(((x1993)*(x2007)))+((((IkReal)(-1.00000000000000))*(x2000)))+((((IkReal)(-1.00000000000000))*(x1999)))+(((x1992)*(x1995)))+(((x1993)*(x1997)))+((((IkReal)(-1.00000000000000))*(cj3)*(x1993)*(x1997))));
evalcond[5]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(cj0)*(py)*(sj2)))+(((x1993)*(x1996)*(x2000)))+((((IkReal)(1.10000000000000))*(x2005)))+(((x1996)*(x2008)))+(((x2000)*(x2004)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(sj0)*(x1994)))+(((x1999)*(x2004)))+((((IkReal)(-1.00000000000000))*(x1996)*(x2006))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x2009=(((IkReal)(0.0450000000000000))*(sj2));
if( IKabs((((IkReal)(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH && IKabs(px) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2010=(((IkReal)(1.00000000000000))*(IKatan2((((IkReal)(-1.00000000000000))*(py)), px)));
if( ((((px)*(px))+((py)*(py)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IkReal)1.0e30))*((((((IkReal)(0.300000000000000))*(sj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2009)))+(x2009))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IkReal)1.0e30))*((((((IkReal)(0.300000000000000))*(sj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2009)))+(x2009))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x2011=IKasin(((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IkReal)1.0e30))*((((((IkReal)(0.300000000000000))*(sj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2009)))+(x2009)))));
j0array[0]=(((((IkReal)(-1.00000000000000))*(x2011)))+((((IkReal)(-1.00000000000000))*(x2010))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2010)))+(x2011));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

{
IkReal dummyeval[1];
IkReal gconst34;
IkReal x2012=((cj2)*(pz));
IkReal x2013=((py)*(sj0));
IkReal x2014=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2015=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x2016=((cj0)*(px));
gconst34=IKsign((((((IkReal)(-0.300000000000000))*(sj3)*(x2012)))+((((IkReal)(-0.550000000000000))*(x2013)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2012)))+((((IkReal)(-1.00000000000000))*(x2014)*(x2016)))+((((IkReal)(-1.00000000000000))*(x2015)*(x2016)))+((((IkReal)(-1.00000000000000))*(x2013)*(x2014)))+((((IkReal)(-0.550000000000000))*(x2016)))+((((IkReal)(-1.00000000000000))*(x2013)*(x2015)))+((((IkReal)(-0.0450000000000000))*(x2012)))));
IkReal x2017=((cj0)*(px));
IkReal x2018=(((IkReal)(6.66666666666667))*(cj3));
IkReal x2019=((py)*(sj0));
IkReal x2020=((cj2)*(pz));
IkReal x2021=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x2017)*(x2021)))+((((IkReal)(-1.00000000000000))*(x2020)))+((((IkReal)(-1.00000000000000))*(x2017)*(x2018)))+((((IkReal)(-12.2222222222222))*(x2017)))+((((IkReal)(-1.00000000000000))*(x2019)*(x2021)))+((((IkReal)(-6.66666666666667))*(sj3)*(x2020)))+((((IkReal)(-12.2222222222222))*(x2019)))+((((IkReal)(-1.00000000000000))*(x2018)*(x2019)))+(((cj3)*(x2020))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((sj2)*((py)*(py))*((sj0)*(sj0))))+(((sj2)*((pz)*(pz))))+(((sj2)*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0)*(sj2)))));
dummyeval[0]=((((sj2)*((py)*(py))*((sj0)*(sj0))))+(((sj2)*((pz)*(pz))))+(((sj2)*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0)*(sj2))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x2022=(((((IkReal)(-1.00000000000000))*(cj0)*(py)))+(((px)*(sj0))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x2022;
evalcond[3]=x2022;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x2023=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2024=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2025=((cj0)*(px));
IkReal x2026=((py)*(sj0));
IkReal x2027=(((IkReal)(0.0450000000000000))*(sj3));
gconst36=IKsign((((((IkReal)(-1.00000000000000))*(x2026)*(x2027)))+((((IkReal)(-1.00000000000000))*(x2024)*(x2026)))+((((IkReal)(-0.550000000000000))*(x2025)))+((((IkReal)(-1.00000000000000))*(x2024)*(x2025)))+(((cj3)*(x2023)))+((((IkReal)(-0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-1.00000000000000))*(x2025)*(x2027)))+((((IkReal)(-0.550000000000000))*(x2026)))+((((IkReal)(-1.00000000000000))*(x2023)))));
IkReal x2028=((cj0)*(px));
IkReal x2029=(((IkReal)(6.66666666666667))*(cj3));
IkReal x2030=((py)*(sj0));
IkReal x2031=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=(((((IkReal)(-12.2222222222222))*(x2030)))+((((IkReal)(-12.2222222222222))*(x2028)))+((((IkReal)(-1.00000000000000))*(pz)))+(((cj3)*(pz)))+((((IkReal)(-6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-1.00000000000000))*(x2028)*(x2029)))+((((IkReal)(-1.00000000000000))*(x2028)*(x2031)))+((((IkReal)(-1.00000000000000))*(x2029)*(x2030)))+((((IkReal)(-1.00000000000000))*(x2030)*(x2031))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst37;
gconst37=IKsign((((((IkReal)(-2.00000000000000))*(cj0)*(px)*(py)*(sj0)))+((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-2.00000000000000))*(cj0)*(px)*(py)*(sj0)))+((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2032=((cj0)*(px));
IkReal x2033=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2034=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2035=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2036=((py)*(sj0));
IkReal x2037=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2038=(((IkReal)(0.0450000000000000))*(sj3));
if( IKabs(((gconst37)*(((x2034)+((((IkReal)(-1.00000000000000))*(x2032)*(x2037)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2034)))+((((IkReal)(-1.00000000000000))*(x2036)*(x2038)))+((((IkReal)(-0.550000000000000))*(x2032)))+((((IkReal)(-1.00000000000000))*(x2032)*(x2038)))+((((IkReal)(-0.550000000000000))*(x2036)))+((((IkReal)(-1.00000000000000))*(x2036)*(x2037)))+(((pz)*(x2033))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*((((((IkReal)(-1.00000000000000))*(pz)*(x2037)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2034)))+((((IkReal)(-1.00000000000000))*(x2033)*(x2036)))+((((IkReal)(-0.0450000000000000))*(x2032)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x2032)*(x2033)))+(((x2035)*(x2036)))+(((x2032)*(x2035)))+((((IkReal)(-0.0450000000000000))*(x2036))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst37)*(((x2034)+((((IkReal)(-1.00000000000000))*(x2032)*(x2037)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2034)))+((((IkReal)(-1.00000000000000))*(x2036)*(x2038)))+((((IkReal)(-0.550000000000000))*(x2032)))+((((IkReal)(-1.00000000000000))*(x2032)*(x2038)))+((((IkReal)(-0.550000000000000))*(x2036)))+((((IkReal)(-1.00000000000000))*(x2036)*(x2037)))+(((pz)*(x2033)))))), ((gconst37)*((((((IkReal)(-1.00000000000000))*(pz)*(x2037)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2034)))+((((IkReal)(-1.00000000000000))*(x2033)*(x2036)))+((((IkReal)(-0.0450000000000000))*(x2032)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x2032)*(x2033)))+(((x2035)*(x2036)))+(((x2032)*(x2035)))+((((IkReal)(-0.0450000000000000))*(x2036)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2039=IKsin(j1);
IkReal x2040=IKcos(j1);
IkReal x2041=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2042=((cj0)*(px));
IkReal x2043=((py)*(sj0));
IkReal x2044=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2045=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2046=((sj3)*(x2040));
IkReal x2047=((pz)*(x2039));
IkReal x2048=(((IkReal)(1.00000000000000))*(x2040));
IkReal x2049=(((IkReal)(0.0450000000000000))*(x2039));
IkReal x2050=((pz)*(x2040));
IkReal x2051=(((IkReal)(0.0900000000000000))*(x2040));
IkReal x2052=(((IkReal)(1.10000000000000))*(x2039));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(x2050)+(((x2039)*(x2043)))+((((IkReal)(-1.00000000000000))*(x2041)))+(((x2039)*(x2042))));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x2046)))+(((x2039)*(x2045)))+((((IkReal)(-1.00000000000000))*(x2039)*(x2044)))+((((IkReal)(-0.550000000000000))*(x2040)))+(x2049)+(pz)+((((IkReal)(-1.00000000000000))*(x2040)*(x2041))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2044)))+((((IkReal)(-1.00000000000000))*(x2043)*(x2048)))+((((IkReal)(-1.00000000000000))*(x2042)*(x2048)))+(x2047)+(x2045));
evalcond[3]=(((((IkReal)(0.0450000000000000))*(x2040)))+(((x2039)*(x2041)))+((((IkReal)(-1.00000000000000))*(x2040)*(x2044)))+(((x2040)*(x2045)))+((((IkReal)(-1.00000000000000))*(x2043)))+((((IkReal)(0.550000000000000))*(x2039)))+((((IkReal)(-1.00000000000000))*(x2042)))+(((sj3)*(x2049))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2043)*(x2052)))+(((x2042)*(x2052)))+(((x2043)*(x2051)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2050)))+(((x2042)*(x2051)))+((((IkReal)(-0.0900000000000000))*(x2047))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2053=(cj3)*(cj3);
IkReal x2054=(sj3)*(sj3);
IkReal x2055=((cj3)*(sj3));
IkReal x2056=(((IkReal)(1.00000000000000))*(pz));
if( IKabs(((gconst36)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.00202500000000000))*(x2054)))+((((IkReal)(-0.0900000000000000))*(x2053)))+((pz)*(pz))+((((IkReal)(-0.0270000000000000))*(x2055)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x2056)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*(x2054)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x2056)))+((((IkReal)(0.0135000000000000))*(x2053)))+((((IkReal)(-0.0879750000000000))*(x2055))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst36)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.00202500000000000))*(x2054)))+((((IkReal)(-0.0900000000000000))*(x2053)))+((pz)*(pz))+((((IkReal)(-0.0270000000000000))*(x2055)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst36)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x2056)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*(x2054)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x2056)))+((((IkReal)(0.0135000000000000))*(x2053)))+((((IkReal)(-0.0879750000000000))*(x2055)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2057=IKsin(j1);
IkReal x2058=IKcos(j1);
IkReal x2059=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2060=((cj0)*(px));
IkReal x2061=((py)*(sj0));
IkReal x2062=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2063=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2064=((sj3)*(x2058));
IkReal x2065=((pz)*(x2057));
IkReal x2066=(((IkReal)(1.00000000000000))*(x2058));
IkReal x2067=(((IkReal)(0.0450000000000000))*(x2057));
IkReal x2068=((pz)*(x2058));
IkReal x2069=(((IkReal)(0.0900000000000000))*(x2058));
IkReal x2070=(((IkReal)(1.10000000000000))*(x2057));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(x2068)+((((IkReal)(-1.00000000000000))*(x2059)))+(((x2057)*(x2061)))+(((x2057)*(x2060))));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x2064)))+(x2067)+((((IkReal)(-0.550000000000000))*(x2058)))+(pz)+((((IkReal)(-1.00000000000000))*(x2057)*(x2062)))+(((x2057)*(x2063)))+((((IkReal)(-1.00000000000000))*(x2058)*(x2059))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2060)*(x2066)))+(x2063)+(x2065)+((((IkReal)(-1.00000000000000))*(x2062)))+((((IkReal)(-1.00000000000000))*(x2061)*(x2066))));
evalcond[3]=((((sj3)*(x2067)))+((((IkReal)(0.0450000000000000))*(x2058)))+((((IkReal)(-1.00000000000000))*(x2061)))+((((IkReal)(0.550000000000000))*(x2057)))+((((IkReal)(-1.00000000000000))*(x2058)*(x2062)))+(((x2058)*(x2063)))+((((IkReal)(-1.00000000000000))*(x2060)))+(((x2057)*(x2059))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2060)*(x2069)))+((((IkReal)(1.10000000000000))*(x2068)))+(((x2061)*(x2070)))+(((x2060)*(x2070)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2061)*(x2069)))+((((IkReal)(-0.0900000000000000))*(x2065))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2071=((px)*(sj0));
IkReal x2072=((cj0)*(py));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=((x2071)+((((IkReal)(-1.00000000000000))*(x2072))));
evalcond[3]=((x2072)+((((IkReal)(-1.00000000000000))*(x2071))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x2073=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2074=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2075=((cj0)*(px));
IkReal x2076=((py)*(sj0));
IkReal x2077=(((IkReal)(0.0450000000000000))*(sj3));
gconst38=IKsign(((x2073)+((((IkReal)(-0.550000000000000))*(x2075)))+((((IkReal)(-1.00000000000000))*(x2075)*(x2077)))+((((IkReal)(0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.550000000000000))*(x2076)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2073)))+((((IkReal)(-1.00000000000000))*(x2074)*(x2076)))+((((IkReal)(-1.00000000000000))*(x2076)*(x2077)))+((((IkReal)(-1.00000000000000))*(x2074)*(x2075)))));
IkReal x2078=((cj0)*(px));
IkReal x2079=(((IkReal)(6.66666666666667))*(cj3));
IkReal x2080=((py)*(sj0));
IkReal x2081=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=(((((IkReal)(-12.2222222222222))*(x2080)))+((((IkReal)(-1.00000000000000))*(x2080)*(x2081)))+((((IkReal)(-1.00000000000000))*(x2078)*(x2079)))+((((IkReal)(-1.00000000000000))*(x2078)*(x2081)))+((((IkReal)(6.66666666666667))*(pz)*(sj3)))+(pz)+((((IkReal)(-12.2222222222222))*(x2078)))+((((IkReal)(-1.00000000000000))*(x2079)*(x2080)))+((((IkReal)(-1.00000000000000))*(cj3)*(pz))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign((((((py)*(py))*((sj0)*(sj0))))+((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0)))));
dummyeval[0]=(((((py)*(py))*((sj0)*(sj0))))+((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz))+((((IkReal)(2.00000000000000))*(cj0)*(px)*(py)*(sj0))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2082=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2083=((py)*(sj0));
IkReal x2084=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2085=((cj0)*(px));
IkReal x2086=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x2087=(((IkReal)(0.300000000000000))*(x2085));
IkReal x2088=((cj3)*(x2083));
if( IKabs(((gconst39)*((((((IkReal)(0.550000000000000))*(x2083)))+(((x2083)*(x2086)))+((((IkReal)(0.550000000000000))*(x2085)))+(((pz)*(x2084)))+(x2082)+(((x2085)*(x2086)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2082)))+((((IkReal)(0.300000000000000))*(x2088)))+(((cj3)*(x2087))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+((((IkReal)(-0.0450000000000000))*(x2085)))+((((IkReal)(0.0450000000000000))*(x2088)))+((((IkReal)(0.550000000000000))*(pz)))+(((sj3)*(x2082)))+((((IkReal)(-1.00000000000000))*(x2084)*(x2085)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2085)))+((((IkReal)(-1.00000000000000))*(x2083)*(x2084)))+((((IkReal)(-0.0450000000000000))*(x2083))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst39)*((((((IkReal)(0.550000000000000))*(x2083)))+(((x2083)*(x2086)))+((((IkReal)(0.550000000000000))*(x2085)))+(((pz)*(x2084)))+(x2082)+(((x2085)*(x2086)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2082)))+((((IkReal)(0.300000000000000))*(x2088)))+(((cj3)*(x2087)))))), ((gconst39)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+((((IkReal)(-0.0450000000000000))*(x2085)))+((((IkReal)(0.0450000000000000))*(x2088)))+((((IkReal)(0.550000000000000))*(pz)))+(((sj3)*(x2082)))+((((IkReal)(-1.00000000000000))*(x2084)*(x2085)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2085)))+((((IkReal)(-1.00000000000000))*(x2083)*(x2084)))+((((IkReal)(-0.0450000000000000))*(x2083)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2089=IKsin(j1);
IkReal x2090=IKcos(j1);
IkReal x2091=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2092=((cj0)*(px));
IkReal x2093=((py)*(sj0));
IkReal x2094=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2095=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2096=((sj3)*(x2090));
IkReal x2097=((pz)*(x2089));
IkReal x2098=(((IkReal)(0.0450000000000000))*(x2089));
IkReal x2099=(((IkReal)(1.10000000000000))*(x2089));
IkReal x2100=((pz)*(x2090));
IkReal x2101=(((IkReal)(0.0900000000000000))*(x2090));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x2089)*(x2092)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2089)*(x2093)))+(x2100)+((((IkReal)(-1.00000000000000))*(x2091))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x2098)))+((((IkReal)(-1.00000000000000))*(x2090)*(x2091)))+((((IkReal)(-1.00000000000000))*(x2089)*(x2095)))+((((IkReal)(-0.0450000000000000))*(x2096)))+(((x2089)*(x2094)))+(pz)+((((IkReal)(-0.550000000000000))*(x2090))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x2090)*(x2093)))+(x2095)+(((x2090)*(x2092)))+((((IkReal)(-1.00000000000000))*(x2097)))+((((IkReal)(-1.00000000000000))*(x2094))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2093)))+((((IkReal)(-1.00000000000000))*(x2090)*(x2095)))+(((x2089)*(x2091)))+((((IkReal)(-0.0450000000000000))*(x2090)))+((((IkReal)(-1.00000000000000))*(x2092)))+(((x2090)*(x2094)))+((((IkReal)(0.550000000000000))*(x2089)))+(((sj3)*(x2098))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2092)*(x2101)))+(((x2092)*(x2099)))+((((IkReal)(0.0900000000000000))*(x2097)))+((((IkReal)(-1.00000000000000))*(x2093)*(x2101)))+((((IkReal)(1.10000000000000))*(x2100)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2093)*(x2099))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2102=(sj3)*(sj3);
IkReal x2103=(cj3)*(cj3);
IkReal x2104=((cj3)*(sj3));
IkReal x2105=(((IkReal)(1.00000000000000))*(pz));
if( IKabs(((gconst38)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0270000000000000))*(x2104)))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.00202500000000000))*(x2102)))+((pz)*(pz))+((((IkReal)(-0.0900000000000000))*(x2103)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x2104)))+((((IkReal)(-0.0135000000000000))*(x2103)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x2105)))+((((IkReal)(0.0135000000000000))*(x2102)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x2105)))+((((IkReal)(0.167025000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst38)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0270000000000000))*(x2104)))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.00202500000000000))*(x2102)))+((pz)*(pz))+((((IkReal)(-0.0900000000000000))*(x2103)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst38)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(x2104)))+((((IkReal)(-0.0135000000000000))*(x2103)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x2105)))+((((IkReal)(0.0135000000000000))*(x2102)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x2105)))+((((IkReal)(0.167025000000000))*(sj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2106=IKsin(j1);
IkReal x2107=IKcos(j1);
IkReal x2108=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2109=((cj0)*(px));
IkReal x2110=((py)*(sj0));
IkReal x2111=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2112=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2113=((sj3)*(x2107));
IkReal x2114=((pz)*(x2106));
IkReal x2115=(((IkReal)(0.0450000000000000))*(x2106));
IkReal x2116=(((IkReal)(1.10000000000000))*(x2106));
IkReal x2117=((pz)*(x2107));
IkReal x2118=(((IkReal)(0.0900000000000000))*(x2107));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2106)*(x2109)))+((((IkReal)(-1.00000000000000))*(x2108)))+(((x2106)*(x2110)))+(x2117));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x2113)))+(((x2106)*(x2111)))+((((IkReal)(-1.00000000000000))*(x2106)*(x2112)))+((((IkReal)(-0.550000000000000))*(x2107)))+(pz)+((((IkReal)(-1.00000000000000))*(x2115)))+((((IkReal)(-1.00000000000000))*(x2107)*(x2108))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2111)))+((((IkReal)(-1.00000000000000))*(x2114)))+(((x2107)*(x2110)))+(((x2107)*(x2109)))+(x2112));
evalcond[3]=((((sj3)*(x2115)))+(((x2106)*(x2108)))+((((IkReal)(-1.00000000000000))*(x2110)))+((((IkReal)(-1.00000000000000))*(x2107)*(x2112)))+((((IkReal)(0.550000000000000))*(x2106)))+((((IkReal)(-0.0450000000000000))*(x2107)))+((((IkReal)(-1.00000000000000))*(x2109)))+(((x2107)*(x2111))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2109)*(x2116)))+((((IkReal)(1.10000000000000))*(x2117)))+(((x2110)*(x2116)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x2110)*(x2118)))+((((IkReal)(-1.00000000000000))*(x2109)*(x2118)))+((((IkReal)(0.0900000000000000))*(x2114))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2119=(((IkReal)(-1.00000000000000))*(cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x2119;
evalcond[3]=x2119;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
gconst40=IKsign((((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1.00000000000000))*((pz)*(pz)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
IkReal x2120=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2121=((py)*(sj0));
gconst41=IKsign((((((IkReal)(-0.0450000000000000))*(sj3)*(x2121)))+((((IkReal)(-0.300000000000000))*(cj3)*(x2121)))+((((IkReal)(-0.300000000000000))*(pz)*(sj3)))+(((cj3)*(x2120)))+((((IkReal)(-1.00000000000000))*(x2120)))+((((IkReal)(-0.550000000000000))*(x2121)))));
IkReal x2122=((py)*(sj0));
dummyeval[0]=(((((IkReal)(-6.66666666666667))*(cj3)*(x2122)))+((((IkReal)(-1.00000000000000))*(pz)))+(((cj3)*(pz)))+((((IkReal)(-12.2222222222222))*(x2122)))+((((IkReal)(-6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2122))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2123=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2123))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2123))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2124=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x2124)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x2124))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x2124)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x2124)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x2124)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x2124)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2125=IKcos(j1);
IkReal x2126=IKsin(j1);
IkReal x2127=((pz)*(x2126));
IkReal x2128=((pz)*(x2125));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2128));
evalcond[1]=((pz)+((((IkReal)(-0.850000000000000))*(x2125))));
evalcond[2]=x2127;
evalcond[3]=(((IkReal)(0.850000000000000))*(x2126));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2128)))+((((IkReal)(-0.0900000000000000))*(x2127))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2129=IKcos(j1);
IkReal x2130=IKsin(j1);
IkReal x2131=((pz)*(x2130));
IkReal x2132=((pz)*(x2129));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2132));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x2129)))+(pz));
evalcond[2]=x2131;
evalcond[3]=(((IkReal)(0.850000000000000))*(x2130));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2132)))+((((IkReal)(-0.0900000000000000))*(x2131)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2133=(((IkReal)(1.00000000000000))*(pp));
IkReal x2134=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2133)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x2134;
evalcond[4]=x2134;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2133))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2135=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2135));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2135))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2136=IKsin(j1);
IkReal x2137=IKcos(j1);
IkReal x2138=(((IkReal)(0.0450000000000000))*(x2137));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x2136)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2138)))+((((IkReal)(0.550000000000000))*(x2136)))+(x2138)+((((IkReal)(0.300000000000000))*(sj3)*(x2137)))+((((IkReal)(0.300000000000000))*(cj3)*(x2136))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2139=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2139)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2139))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2140=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2140));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2140))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2141=IKsin(j1);
IkReal x2142=IKcos(j1);
IkReal x2143=(((IkReal)(0.0450000000000000))*(x2142));
evalcond[0]=(((((IkReal)(0.300000000000000))*(cj3)*(x2141)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2141)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2143)))+((((IkReal)(0.300000000000000))*(sj3)*(x2142)))+(x2143)+((((IkReal)(0.550000000000000))*(x2141))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2144=(cj3)*(cj3);
IkReal x2145=(sj3)*(sj3);
IkReal x2146=((cj3)*(sj3));
if( IKabs(((gconst41)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.00202500000000000))*(x2145)))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0900000000000000))*(x2144)))+((((IkReal)(-0.0270000000000000))*(x2146)))+((pz)*(pz))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*(x2145)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(-0.0879750000000000))*(x2146)))+((((IkReal)(0.0135000000000000))*(x2144))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst41)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.00202500000000000))*(x2145)))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0900000000000000))*(x2144)))+((((IkReal)(-0.0270000000000000))*(x2146)))+((pz)*(pz))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst41)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*(x2145)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(-0.0879750000000000))*(x2146)))+((((IkReal)(0.0135000000000000))*(x2144)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2147=IKsin(j1);
IkReal x2148=IKcos(j1);
IkReal x2149=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2150=((py)*(sj0));
IkReal x2151=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2152=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2153=((sj3)*(x2148));
IkReal x2154=((pz)*(x2147));
IkReal x2155=(((IkReal)(0.0450000000000000))*(x2147));
IkReal x2156=((pz)*(x2148));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x2156)+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2149)))+(((x2147)*(x2150))));
evalcond[1]=((x2155)+((((IkReal)(-1.00000000000000))*(x2148)*(x2149)))+((((IkReal)(-1.00000000000000))*(x2147)*(x2151)))+(((x2147)*(x2152)))+(pz)+((((IkReal)(-0.0450000000000000))*(x2153)))+((((IkReal)(-0.550000000000000))*(x2148))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x2154)+(x2152)+((((IkReal)(-1.00000000000000))*(x2148)*(x2150)))+((((IkReal)(-1.00000000000000))*(x2151))));
evalcond[3]=((((x2147)*(x2149)))+((((IkReal)(-1.00000000000000))*(x2148)*(x2151)))+((((IkReal)(0.550000000000000))*(x2147)))+((((IkReal)(0.0450000000000000))*(x2148)))+((((IkReal)(-1.00000000000000))*(x2150)))+(((sj3)*(x2155)))+(((x2148)*(x2152))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2147)*(x2150)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2156)))+((((IkReal)(-0.0900000000000000))*(x2154)))+((((IkReal)(0.0900000000000000))*(x2148)*(x2150))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2157=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2158=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2159=((py)*(sj0));
IkReal x2160=(((IkReal)(0.300000000000000))*(sj3));
if( IKabs(((gconst40)*((((((IkReal)(-1.00000000000000))*(x2158)*(x2159)))+(x2157)+((((IkReal)(-0.0450000000000000))*(sj3)*(x2159)))+((((IkReal)(-0.550000000000000))*(x2159)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2157)))+(((pz)*(x2160))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*((((((IkReal)(-0.0450000000000000))*(x2159)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2159)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2157)))+((((IkReal)(-1.00000000000000))*(pz)*(x2158)))+((((IkReal)(-1.00000000000000))*(x2159)*(x2160))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst40)*((((((IkReal)(-1.00000000000000))*(x2158)*(x2159)))+(x2157)+((((IkReal)(-0.0450000000000000))*(sj3)*(x2159)))+((((IkReal)(-0.550000000000000))*(x2159)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2157)))+(((pz)*(x2160)))))), ((gconst40)*((((((IkReal)(-0.0450000000000000))*(x2159)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2159)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2157)))+((((IkReal)(-1.00000000000000))*(pz)*(x2158)))+((((IkReal)(-1.00000000000000))*(x2159)*(x2160)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2161=IKsin(j1);
IkReal x2162=IKcos(j1);
IkReal x2163=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2164=((py)*(sj0));
IkReal x2165=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2166=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2167=((sj3)*(x2162));
IkReal x2168=((pz)*(x2161));
IkReal x2169=(((IkReal)(0.0450000000000000))*(x2161));
IkReal x2170=((pz)*(x2162));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x2170)+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2161)*(x2164)))+((((IkReal)(-1.00000000000000))*(x2163))));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x2167)))+(x2169)+((((IkReal)(-1.00000000000000))*(x2162)*(x2163)))+(pz)+((((IkReal)(-0.550000000000000))*(x2162)))+(((x2161)*(x2166)))+((((IkReal)(-1.00000000000000))*(x2161)*(x2165))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2165)))+(x2168)+(x2166)+((((IkReal)(-1.00000000000000))*(x2162)*(x2164))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2162)*(x2165)))+((((IkReal)(0.0450000000000000))*(x2162)))+(((x2162)*(x2166)))+((((IkReal)(0.550000000000000))*(x2161)))+((((IkReal)(-1.00000000000000))*(x2164)))+(((sj3)*(x2169)))+(((x2161)*(x2163))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2170)))+((((IkReal)(1.10000000000000))*(x2161)*(x2164)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x2168)))+((((IkReal)(0.0900000000000000))*(x2162)*(x2164))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2171=((cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2171));
evalcond[3]=x2171;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((((py)*(py))*((sj0)*(sj0))))+((pz)*(pz))));
dummyeval[0]=(((((py)*(py))*((sj0)*(sj0))))+((pz)*(pz)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
IkReal x2172=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2173=((py)*(sj0));
gconst43=IKsign(((x2172)+((((IkReal)(-1.00000000000000))*(cj3)*(x2172)))+((((IkReal)(-0.300000000000000))*(cj3)*(x2173)))+((((IkReal)(0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.550000000000000))*(x2173)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x2173)))));
IkReal x2174=((py)*(sj0));
dummyeval[0]=(((((IkReal)(-12.2222222222222))*(x2174)))+((((IkReal)(-6.66666666666667))*(cj3)*(x2174)))+((((IkReal)(6.66666666666667))*(pz)*(sj3)))+(pz)+((((IkReal)(-1.00000000000000))*(sj3)*(x2174)))+((((IkReal)(-1.00000000000000))*(cj3)*(pz))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2175=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2175))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2175))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2176=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x2176)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x2176))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x2176)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x2176)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x2176)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x2176)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2177=IKcos(j1);
IkReal x2178=IKsin(j1);
IkReal x2179=((pz)*(x2178));
IkReal x2180=((pz)*(x2177));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2180));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x2177)))+(pz));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2179));
evalcond[3]=(((IkReal)(0.850000000000000))*(x2178));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2180)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x2179))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2181=IKcos(j1);
IkReal x2182=IKsin(j1);
IkReal x2183=((pz)*(x2182));
IkReal x2184=((pz)*(x2181));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2184));
evalcond[1]=((pz)+((((IkReal)(-0.850000000000000))*(x2181))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2183));
evalcond[3]=(((IkReal)(0.850000000000000))*(x2182));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2184)))+((((IkReal)(0.0900000000000000))*(x2183))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2185=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2185)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2185))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2186=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2186));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2186))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2187=IKsin(j1);
IkReal x2188=IKcos(j1);
IkReal x2189=(((IkReal)(0.0450000000000000))*(x2188));
evalcond[0]=(((((IkReal)(0.550000000000000))*(x2187)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2187)))+((((IkReal)(0.300000000000000))*(cj3)*(x2187)))+(((cj3)*(x2189)))+((((IkReal)(-1.00000000000000))*(x2189)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2188))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2190=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x2190)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2190))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2191=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2191));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2191))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2192=IKsin(j1);
IkReal x2193=IKcos(j1);
IkReal x2194=(((IkReal)(0.0450000000000000))*(x2193));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x2194)))+((((IkReal)(0.300000000000000))*(cj3)*(x2192)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2193)))+(((cj3)*(x2194)))+((((IkReal)(0.550000000000000))*(x2192)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2192))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2195=(sj3)*(sj3);
IkReal x2196=(cj3)*(cj3);
IkReal x2197=((cj3)*(sj3));
if( IKabs(((gconst43)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0270000000000000))*(x2197)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x2195)))+((((IkReal)(-0.0900000000000000))*(x2196)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(-0.0135000000000000))*(x2196)))+((((IkReal)(0.0879750000000000))*(x2197)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(0.0135000000000000))*(x2195)))+((((IkReal)(0.167025000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst43)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0270000000000000))*(x2197)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x2195)))+((((IkReal)(-0.0900000000000000))*(x2196)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst43)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(-0.0135000000000000))*(x2196)))+((((IkReal)(0.0879750000000000))*(x2197)))+((((IkReal)(-1.00000000000000))*(py)*(pz)*(sj0)))+((((IkReal)(0.0135000000000000))*(x2195)))+((((IkReal)(0.167025000000000))*(sj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2198=IKsin(j1);
IkReal x2199=IKcos(j1);
IkReal x2200=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2201=((py)*(sj0));
IkReal x2202=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2203=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2204=((sj3)*(x2199));
IkReal x2205=((pz)*(x2198));
IkReal x2206=(((IkReal)(0.0450000000000000))*(x2198));
IkReal x2207=((pz)*(x2199));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2198)*(x2201)))+(x2207)+((((IkReal)(-1.00000000000000))*(x2200))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x2199)*(x2200)))+((((IkReal)(-0.550000000000000))*(x2199)))+((((IkReal)(-0.0450000000000000))*(x2204)))+((((IkReal)(-1.00000000000000))*(x2206)))+(pz)+(((x2198)*(x2202)))+((((IkReal)(-1.00000000000000))*(x2198)*(x2203))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x2199)*(x2201)))+((((IkReal)(-1.00000000000000))*(x2202)))+(x2203)+((((IkReal)(-1.00000000000000))*(x2205))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2201)))+(((x2198)*(x2200)))+((((IkReal)(-0.0450000000000000))*(x2199)))+((((IkReal)(-1.00000000000000))*(x2199)*(x2203)))+((((IkReal)(0.550000000000000))*(x2198)))+(((sj3)*(x2206)))+(((x2199)*(x2202))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x2199)*(x2201)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2207)))+((((IkReal)(0.0900000000000000))*(x2205)))+((((IkReal)(1.10000000000000))*(x2198)*(x2201))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2208=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2209=((py)*(sj0));
IkReal x2210=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2211=((cj3)*(x2209));
if( IKabs(((gconst42)*((((((IkReal)(0.0450000000000000))*(sj3)*(x2209)))+(x2208)+(((pz)*(x2210)))+((((IkReal)(0.300000000000000))*(x2211)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2208)))+((((IkReal)(0.550000000000000))*(x2209))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+(((sj3)*(x2208)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(0.0450000000000000))*(x2211)))+((((IkReal)(-0.0450000000000000))*(x2209)))+((((IkReal)(-1.00000000000000))*(x2209)*(x2210))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst42)*((((((IkReal)(0.0450000000000000))*(sj3)*(x2209)))+(x2208)+(((pz)*(x2210)))+((((IkReal)(0.300000000000000))*(x2211)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2208)))+((((IkReal)(0.550000000000000))*(x2209)))))), ((gconst42)*((((((IkReal)(0.300000000000000))*(cj3)*(pz)))+(((sj3)*(x2208)))+((((IkReal)(0.550000000000000))*(pz)))+((((IkReal)(0.0450000000000000))*(x2211)))+((((IkReal)(-0.0450000000000000))*(x2209)))+((((IkReal)(-1.00000000000000))*(x2209)*(x2210)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2212=IKsin(j1);
IkReal x2213=IKcos(j1);
IkReal x2214=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2215=((py)*(sj0));
IkReal x2216=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2217=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2218=((sj3)*(x2213));
IkReal x2219=((pz)*(x2212));
IkReal x2220=(((IkReal)(0.0450000000000000))*(x2212));
IkReal x2221=((pz)*(x2213));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x2221)+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2212)*(x2215)))+((((IkReal)(-1.00000000000000))*(x2214))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x2220)))+((((IkReal)(-0.0450000000000000))*(x2218)))+(((x2212)*(x2216)))+((((IkReal)(-1.00000000000000))*(x2212)*(x2217)))+(pz)+((((IkReal)(-0.550000000000000))*(x2213)))+((((IkReal)(-1.00000000000000))*(x2213)*(x2214))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x2213)*(x2215)))+((((IkReal)(-1.00000000000000))*(x2216)))+(x2217)+((((IkReal)(-1.00000000000000))*(x2219))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2215)))+((((IkReal)(-0.0450000000000000))*(x2213)))+((((IkReal)(0.550000000000000))*(x2212)))+((((IkReal)(-1.00000000000000))*(x2213)*(x2217)))+(((x2213)*(x2216)))+(((x2212)*(x2214)))+(((sj3)*(x2220))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2212)*(x2215)))+((((IkReal)(0.0900000000000000))*(x2219)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2221)))+((((IkReal)(-0.0900000000000000))*(x2213)*(x2215))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2222=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x2222;
evalcond[3]=x2222;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
gconst44=IKsign((((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((pz)*(pz))))+((((IkReal)(-1.00000000000000))*((cj0)*(cj0))*((px)*(px)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x2223=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2224=((cj0)*(px));
gconst45=IKsign((((((IkReal)(-1.00000000000000))*(x2223)))+((((IkReal)(-0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)*(x2224)))+((((IkReal)(-0.550000000000000))*(x2224)))+(((cj3)*(x2223)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x2224)))));
IkReal x2225=((cj0)*(px));
dummyeval[0]=(((((IkReal)(-6.66666666666667))*(cj3)*(x2225)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2225)))+((((IkReal)(-1.00000000000000))*(pz)))+(((cj3)*(pz)))+((((IkReal)(-12.2222222222222))*(x2225)))+((((IkReal)(-6.66666666666667))*(pz)*(sj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2226=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2226))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2226))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2227=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x2227)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x2227))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x2227)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x2227)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x2227)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x2227)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2228=IKcos(j1);
IkReal x2229=IKsin(j1);
IkReal x2230=((pz)*(x2229));
IkReal x2231=((pz)*(x2228));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2231));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x2228)))+(pz));
evalcond[2]=x2230;
evalcond[3]=(((IkReal)(0.850000000000000))*(x2229));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2231)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x2230))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(-1700.00000000000))*(pp)))+((((IkReal)(2200.00000000000))*((pz)*(pz))))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2232=IKcos(j1);
IkReal x2233=IKsin(j1);
IkReal x2234=((pz)*(x2233));
IkReal x2235=((pz)*(x2232));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2235));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x2232)))+(pz));
evalcond[2]=x2234;
evalcond[3]=(((IkReal)(0.850000000000000))*(x2233));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2235)))+((((IkReal)(-0.0900000000000000))*(x2234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2236=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2236)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2236))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2237=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2237));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2237))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2238=IKsin(j1);
IkReal x2239=IKcos(j1);
IkReal x2240=(((IkReal)(0.0450000000000000))*(x2239));
evalcond[0]=(((((IkReal)(0.550000000000000))*(x2238)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2238)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2240)))+((((IkReal)(0.300000000000000))*(cj3)*(x2238)))+((((IkReal)(0.300000000000000))*(sj3)*(x2239)))+(x2240));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2241=(((IkReal)(1.00000000000000))*(pp));
IkReal x2242=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2241)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x2242;
evalcond[4]=x2242;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2241))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2243=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2243));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2243))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2244=IKsin(j1);
IkReal x2245=IKcos(j1);
IkReal x2246=(((IkReal)(0.0450000000000000))*(x2245));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x2244)))+((((IkReal)(0.300000000000000))*(sj3)*(x2245)))+((((IkReal)(0.550000000000000))*(x2244)))+((((IkReal)(0.300000000000000))*(cj3)*(x2244)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2246)))+(x2246));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2247=(cj3)*(cj3);
IkReal x2248=(sj3)*(sj3);
IkReal x2249=((cj3)*(sj3));
if( IKabs(((gconst45)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0270000000000000))*(x2249)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x2248)))+((((IkReal)(-0.0900000000000000))*(x2247)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*(x2248)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(-0.0879750000000000))*(x2249)))+((((IkReal)(0.0135000000000000))*(x2247))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst45)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.0270000000000000))*(x2249)))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x2248)))+((((IkReal)(-0.0900000000000000))*(x2247)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst45)*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*(x2248)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(-0.0879750000000000))*(x2249)))+((((IkReal)(0.0135000000000000))*(x2247)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2250=IKsin(j1);
IkReal x2251=IKcos(j1);
IkReal x2252=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2253=((cj0)*(px));
IkReal x2254=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2255=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2256=((sj3)*(x2251));
IkReal x2257=((pz)*(x2250));
IkReal x2258=(((IkReal)(0.0450000000000000))*(x2250));
IkReal x2259=((pz)*(x2251));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x2252)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(x2259)+(((x2250)*(x2253))));
evalcond[1]=(((((IkReal)(-0.550000000000000))*(x2251)))+(((x2250)*(x2255)))+((((IkReal)(-0.0450000000000000))*(x2256)))+((((IkReal)(-1.00000000000000))*(x2250)*(x2254)))+((((IkReal)(-1.00000000000000))*(x2251)*(x2252)))+(pz)+(x2258));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2254)))+((((IkReal)(-1.00000000000000))*(x2251)*(x2253)))+(x2257)+(x2255));
evalcond[3]=((((sj3)*(x2258)))+(((x2250)*(x2252)))+((((IkReal)(-1.00000000000000))*(x2253)))+((((IkReal)(0.0450000000000000))*(x2251)))+(((x2251)*(x2255)))+((((IkReal)(0.550000000000000))*(x2250)))+((((IkReal)(-1.00000000000000))*(x2251)*(x2254))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2250)*(x2253)))+((((IkReal)(-0.0900000000000000))*(x2257)))+((((IkReal)(1.10000000000000))*(x2259)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x2251)*(x2253))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2260=((cj0)*(px));
IkReal x2261=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2262=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2263=(((IkReal)(0.300000000000000))*(cj3));
if( IKabs(((gconst44)*((((((IkReal)(-0.550000000000000))*(x2260)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2262)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x2260)))+(x2262)+((((IkReal)(-1.00000000000000))*(x2260)*(x2263)))+(((pz)*(x2261))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*((((((IkReal)(-0.0450000000000000))*(x2260)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2260)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pz)*(x2263)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2262)))+((((IkReal)(-1.00000000000000))*(x2260)*(x2261))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst44)*((((((IkReal)(-0.550000000000000))*(x2260)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2262)))+((((IkReal)(-0.0450000000000000))*(sj3)*(x2260)))+(x2262)+((((IkReal)(-1.00000000000000))*(x2260)*(x2263)))+(((pz)*(x2261)))))), ((gconst44)*((((((IkReal)(-0.0450000000000000))*(x2260)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2260)))+((((IkReal)(-0.550000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(pz)*(x2263)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2262)))+((((IkReal)(-1.00000000000000))*(x2260)*(x2261)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2264=IKsin(j1);
IkReal x2265=IKcos(j1);
IkReal x2266=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2267=((cj0)*(px));
IkReal x2268=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2269=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2270=((sj3)*(x2265));
IkReal x2271=((pz)*(x2264));
IkReal x2272=(((IkReal)(0.0450000000000000))*(x2264));
IkReal x2273=((pz)*(x2265));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2266)))+(x2273)+(((x2264)*(x2267))));
evalcond[1]=(((((IkReal)(-0.550000000000000))*(x2265)))+((((IkReal)(-0.0450000000000000))*(x2270)))+(x2272)+(pz)+((((IkReal)(-1.00000000000000))*(x2264)*(x2268)))+(((x2264)*(x2269)))+((((IkReal)(-1.00000000000000))*(x2265)*(x2266))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2265)*(x2267)))+(x2269)+(x2271)+((((IkReal)(-1.00000000000000))*(x2268))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2265)*(x2268)))+((((IkReal)(0.550000000000000))*(x2264)))+((((IkReal)(0.0450000000000000))*(x2265)))+((((IkReal)(-1.00000000000000))*(x2267)))+(((sj3)*(x2272)))+(((x2264)*(x2266)))+(((x2265)*(x2269))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x2271)))+((((IkReal)(1.10000000000000))*(x2273)))+((((IkReal)(1.10000000000000))*(x2264)*(x2267)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x2265)*(x2267))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2274=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x2274;
evalcond[3]=(((IkReal)(-1.00000000000000))*(x2274));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign((((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz))));
dummyeval[0]=(((((cj0)*(cj0))*((px)*(px))))+((pz)*(pz)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
IkReal x2275=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2276=((cj0)*(px));
gconst47=IKsign((((((IkReal)(-0.0450000000000000))*(sj3)*(x2276)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2275)))+(x2275)+((((IkReal)(0.300000000000000))*(pz)*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)*(x2276)))+((((IkReal)(-0.550000000000000))*(x2276)))));
IkReal x2277=((cj0)*(px));
dummyeval[0]=(((((IkReal)(6.66666666666667))*(pz)*(sj3)))+((((IkReal)(-6.66666666666667))*(cj3)*(x2277)))+((((IkReal)(-1.00000000000000))*(sj3)*(x2277)))+(pz)+((((IkReal)(-12.2222222222222))*(x2277)))+((((IkReal)(-1.00000000000000))*(cj3)*(pz))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(IkReal)(0);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=pz;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2278=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(pz);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2278))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2278))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2279=((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30);
if( IKabs((((IkReal)(0.0555555555555556))*(x2279)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.850000000000000))*(x2279))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.0555555555555556))*(x2279)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))+IKsqr((((IkReal)(0.850000000000000))*(x2279)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.0555555555555556))*(x2279)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))), (((IkReal)(0.850000000000000))*(x2279)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2280=IKcos(j1);
IkReal x2281=IKsin(j1);
IkReal x2282=((pz)*(x2281));
IkReal x2283=((pz)*(x2280));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2283));
evalcond[1]=((pz)+((((IkReal)(-0.850000000000000))*(x2280))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2282));
evalcond[3]=(((IkReal)(0.850000000000000))*(x2281));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2283)))+((((IkReal)(0.0900000000000000))*(x2282))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(1.17647058823529))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))))+IKsqr((((IkReal)(1.17647058823529))*(pz)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.00653594771241830))*(((IKabs(pz) != 0)?((IkReal)1/(pz)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((pz)*(pz))))+((((IkReal)(1700.00000000000))*(pp)))))), (((IkReal)(1.17647058823529))*(pz)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2284=IKcos(j1);
IkReal x2285=IKsin(j1);
IkReal x2286=((pz)*(x2285));
IkReal x2287=((pz)*(x2284));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2287));
evalcond[1]=(((((IkReal)(-0.850000000000000))*(x2284)))+(pz));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2286));
evalcond[3]=(((IkReal)(0.850000000000000))*(x2285));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x2286)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2287))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2288=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x2288)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2288))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2289=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2289));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2289))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2290=IKsin(j1);
IkReal x2291=IKcos(j1);
IkReal x2292=(((IkReal)(0.0450000000000000))*(x2291));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x2290)))+(((cj3)*(x2292)))+((((IkReal)(-1.00000000000000))*(x2292)))+((((IkReal)(0.300000000000000))*(cj3)*(x2290)))+((((IkReal)(0.550000000000000))*(x2290)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2291))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2293=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x2293)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2293))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2294=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2294));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2294))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2295=IKsin(j1);
IkReal x2296=IKcos(j1);
IkReal x2297=(((IkReal)(0.0450000000000000))*(x2296));
evalcond[0]=((((cj3)*(x2297)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2295)))+((((IkReal)(0.550000000000000))*(x2295)))+((((IkReal)(0.300000000000000))*(cj3)*(x2295)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2296)))+((((IkReal)(-1.00000000000000))*(x2297))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2298=(sj3)*(sj3);
IkReal x2299=(cj3)*(cj3);
IkReal x2300=((cj3)*(sj3));
if( IKabs(((gconst47)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0270000000000000))*(x2300)))+((pz)*(pz))+((((IkReal)(-0.0900000000000000))*(x2299)))+((((IkReal)(-0.00202500000000000))*(x2298)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0135000000000000))*(x2298)))+((((IkReal)(-0.0135000000000000))*(x2299)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(0.0879750000000000))*(x2300)))+((((IkReal)(0.167025000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst47)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((((IkReal)(-0.0270000000000000))*(x2300)))+((pz)*(pz))+((((IkReal)(-0.0900000000000000))*(x2299)))+((((IkReal)(-0.00202500000000000))*(x2298)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst47)*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0135000000000000))*(x2298)))+((((IkReal)(-0.0135000000000000))*(x2299)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(pz)))+((((IkReal)(0.0879750000000000))*(x2300)))+((((IkReal)(0.167025000000000))*(sj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2301=IKsin(j1);
IkReal x2302=IKcos(j1);
IkReal x2303=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2304=((cj0)*(px));
IkReal x2305=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2306=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2307=((sj3)*(x2302));
IkReal x2308=((pz)*(x2301));
IkReal x2309=(((IkReal)(0.0450000000000000))*(x2301));
IkReal x2310=((pz)*(x2302));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2301)*(x2304)))+((((IkReal)(-1.00000000000000))*(x2303)))+(x2310));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x2309)))+(((x2301)*(x2305)))+((((IkReal)(-0.0450000000000000))*(x2307)))+(pz)+((((IkReal)(-1.00000000000000))*(x2302)*(x2303)))+((((IkReal)(-1.00000000000000))*(x2301)*(x2306)))+((((IkReal)(-0.550000000000000))*(x2302))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2308)))+((((IkReal)(-1.00000000000000))*(x2305)))+(((x2302)*(x2304)))+(x2306));
evalcond[3]=((((x2301)*(x2303)))+((((IkReal)(-1.00000000000000))*(x2304)))+((((IkReal)(-1.00000000000000))*(x2302)*(x2306)))+(((x2302)*(x2305)))+(((sj3)*(x2309)))+((((IkReal)(0.550000000000000))*(x2301)))+((((IkReal)(-0.0450000000000000))*(x2302))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x2308)))+((((IkReal)(1.10000000000000))*(x2301)*(x2304)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x2302)*(x2304)))+((((IkReal)(1.10000000000000))*(x2310))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2311=((cj0)*(px));
IkReal x2312=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2313=(((IkReal)(0.0450000000000000))*(pz));
IkReal x2314=(((IkReal)(0.300000000000000))*(cj3));
if( IKabs(((gconst46)*(((((x2311)*(x2314)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2311)))+(((pz)*(x2312)))+(x2313)+((((IkReal)(-1.00000000000000))*(cj3)*(x2313)))+((((IkReal)(0.550000000000000))*(x2311))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj3)*(x2313)))+((((IkReal)(-0.0450000000000000))*(x2311)))+((((IkReal)(0.550000000000000))*(pz)))+(((pz)*(x2314)))+((((IkReal)(-1.00000000000000))*(x2311)*(x2312)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2311))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst46)*(((((x2311)*(x2314)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2311)))+(((pz)*(x2312)))+(x2313)+((((IkReal)(-1.00000000000000))*(cj3)*(x2313)))+((((IkReal)(0.550000000000000))*(x2311)))))), ((gconst46)*(((((sj3)*(x2313)))+((((IkReal)(-0.0450000000000000))*(x2311)))+((((IkReal)(0.550000000000000))*(pz)))+(((pz)*(x2314)))+((((IkReal)(-1.00000000000000))*(x2311)*(x2312)))+((((IkReal)(0.0450000000000000))*(cj3)*(x2311)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2315=IKsin(j1);
IkReal x2316=IKcos(j1);
IkReal x2317=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2318=((cj0)*(px));
IkReal x2319=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2320=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2321=((sj3)*(x2316));
IkReal x2322=((pz)*(x2315));
IkReal x2323=(((IkReal)(0.0450000000000000))*(x2315));
IkReal x2324=((pz)*(x2316));
evalcond[0]=(((IkReal)(-0.550000000000000))+(x2324)+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2317)))+(((x2315)*(x2318))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x2316)*(x2317)))+((((IkReal)(-0.0450000000000000))*(x2321)))+((((IkReal)(-0.550000000000000))*(x2316)))+(pz)+(((x2315)*(x2319)))+((((IkReal)(-1.00000000000000))*(x2315)*(x2320)))+((((IkReal)(-1.00000000000000))*(x2323))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x2320)+((((IkReal)(-1.00000000000000))*(x2322)))+(((x2316)*(x2318)))+((((IkReal)(-1.00000000000000))*(x2319))));
evalcond[3]=(((((IkReal)(0.550000000000000))*(x2315)))+((((IkReal)(-1.00000000000000))*(x2316)*(x2320)))+(((x2316)*(x2319)))+((((IkReal)(-1.00000000000000))*(x2318)))+(((sj3)*(x2323)))+(((x2315)*(x2317)))+((((IkReal)(-0.0450000000000000))*(x2316))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2324)))+((((IkReal)(1.10000000000000))*(x2315)*(x2318)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x2316)*(x2318)))+((((IkReal)(0.0900000000000000))*(x2322))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2325=(((((IkReal)(-1.00000000000000))*(cj0)*(py)))+(((px)*(sj0))));
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=x2325;
evalcond[3]=x2325;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign(((((py)*(sj0)))+(((cj0)*(px)))));
dummyeval[0]=((((py)*(sj0)))+(((cj0)*(px))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2326=((cj0)*(px));
IkReal x2327=(((IkReal)(6.66666666666667))*(cj3));
IkReal x2328=((py)*(sj0));
IkReal x2329=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=((x2326)+(x2328));
dummyeval[1]=(((((IkReal)(-12.2222222222222))*(x2328)))+((((IkReal)(-1.00000000000000))*(x2326)*(x2329)))+((((IkReal)(-12.2222222222222))*(x2326)))+((((IkReal)(-1.00000000000000))*(x2328)*(x2329)))+((((IkReal)(-1.00000000000000))*(x2327)*(x2328)))+((((IkReal)(-1.00000000000000))*(x2326)*(x2327))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2330=((py)*(sj0));
IkReal x2331=((cj0)*(px));
IkReal x2332=(((IkReal)(6.66666666666667))*(sj3));
IkReal x2333=(((IkReal)(1.00000000000000))*(x2330));
IkReal x2334=(((IkReal)(1.00000000000000))*(x2331));
IkReal x2335=((x2333)+(x2334));
dummyeval[0]=((((cj3)*(x2331)))+((((IkReal)(-1.00000000000000))*(x2335)))+((((IkReal)(-1.00000000000000))*(x2330)*(x2332)))+(((cj3)*(x2330)))+((((IkReal)(-1.00000000000000))*(x2331)*(x2332))));
dummyeval[1]=(((IkReal)(-1.00000000000000))*(x2335));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2336=x2325;
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x2336;
evalcond[3]=x2336;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((py)*(sj0)))+(((cj0)*(px))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2337=((cj0)*(px));
IkReal x2338=((py)*(sj0));
dummyeval[0]=((x2337)+(x2338));
dummyeval[1]=(((x2337)*(x2337))+((((IkReal)(2.00000000000000))*(x2337)*(x2338)))+((x2338)*(x2338)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2339=(((IkReal)(1.00000000000000))*(pp));
IkReal x2340=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2339))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x2340;
evalcond[4]=x2340;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2339))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2341=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2341))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2341))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2342=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2342))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2342))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2343=(((IkReal)(1.00000000000000))*(pp));
IkReal x2344=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2343))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x2344;
evalcond[4]=x2344;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2343))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2345=((py)*(sj0));
IkReal x2346=((cj0)*(px));
IkReal x2347=(((IkReal)(20.0000000000000))*(pp));
if( IKabs((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x2346)))+((((IkReal)(20.0000000000000))*(x2345))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x2346)))+((((IkReal)(20.0000000000000))*(x2345)))))):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(3.60000000000000))*(x2345)*(x2346)))+((((IkReal)(1.80000000000000))*((x2345)*(x2345))))+((((IkReal)(1.80000000000000))*((x2346)*(x2346)))))) != 0)?((IkReal)1/((((((IkReal)(3.60000000000000))*(x2345)*(x2346)))+((((IkReal)(1.80000000000000))*((x2345)*(x2345))))+((((IkReal)(1.80000000000000))*((x2346)*(x2346))))))):(IkReal)1.0e30))*(((((x2346)*(x2347)))+((((IkReal)(-14.4500000000000))*(x2345)))+((((IkReal)(-14.4500000000000))*(x2346)))+(((x2345)*(x2347))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x2346)))+((((IkReal)(20.0000000000000))*(x2345))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x2346)))+((((IkReal)(20.0000000000000))*(x2345)))))):(IkReal)1.0e30))))+IKsqr(((((IKabs((((((IkReal)(3.60000000000000))*(x2345)*(x2346)))+((((IkReal)(1.80000000000000))*((x2345)*(x2345))))+((((IkReal)(1.80000000000000))*((x2346)*(x2346)))))) != 0)?((IkReal)1/((((((IkReal)(3.60000000000000))*(x2345)*(x2346)))+((((IkReal)(1.80000000000000))*((x2345)*(x2345))))+((((IkReal)(1.80000000000000))*((x2346)*(x2346))))))):(IkReal)1.0e30))*(((((x2346)*(x2347)))+((((IkReal)(-14.4500000000000))*(x2345)))+((((IkReal)(-14.4500000000000))*(x2346)))+(((x2345)*(x2347)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x2346)))+((((IkReal)(20.0000000000000))*(x2345))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x2346)))+((((IkReal)(20.0000000000000))*(x2345)))))):(IkReal)1.0e30))), ((((IKabs((((((IkReal)(3.60000000000000))*(x2345)*(x2346)))+((((IkReal)(1.80000000000000))*((x2345)*(x2345))))+((((IkReal)(1.80000000000000))*((x2346)*(x2346)))))) != 0)?((IkReal)1/((((((IkReal)(3.60000000000000))*(x2345)*(x2346)))+((((IkReal)(1.80000000000000))*((x2345)*(x2345))))+((((IkReal)(1.80000000000000))*((x2346)*(x2346))))))):(IkReal)1.0e30))*(((((x2346)*(x2347)))+((((IkReal)(-14.4500000000000))*(x2345)))+((((IkReal)(-14.4500000000000))*(x2346)))+(((x2345)*(x2347)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2348=IKsin(j1);
IkReal x2349=IKcos(j1);
IkReal x2350=((py)*(sj0));
IkReal x2351=((cj0)*(px));
IkReal x2352=(((IkReal)(1.10000000000000))*(x2348));
IkReal x2353=((x2349)*(x2351));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2348)*(x2350)))+(((x2348)*(x2351))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2349));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x2349)*(x2350)))+((((IkReal)(-1.00000000000000))*(x2353))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2350)))+((((IkReal)(0.850000000000000))*(x2348)))+((((IkReal)(-1.00000000000000))*(x2351))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x2349)*(x2350)))+((((IkReal)(0.0900000000000000))*(x2353)))+(((x2351)*(x2352)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2350)*(x2352))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2354=((cj0)*(px));
IkReal x2355=((py)*(sj0));
if( IKabs((((((IkReal)(1.17647058823529))*(x2354)))+((((IkReal)(1.17647058823529))*(x2355))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(1.53000000000000))*(x2355)))+((((IkReal)(1.53000000000000))*(x2354))))) != 0)?((IkReal)1/((((((IkReal)(1.53000000000000))*(x2355)))+((((IkReal)(1.53000000000000))*(x2354)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x2354)*(x2354))))+((((IkReal)(-44.0000000000000))*(x2354)*(x2355)))+((((IkReal)(-22.0000000000000))*((x2355)*(x2355))))+((((IkReal)(17.0000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((((IkReal)(1.17647058823529))*(x2354)))+((((IkReal)(1.17647058823529))*(x2355)))))+IKsqr(((((IKabs((((((IkReal)(1.53000000000000))*(x2355)))+((((IkReal)(1.53000000000000))*(x2354))))) != 0)?((IkReal)1/((((((IkReal)(1.53000000000000))*(x2355)))+((((IkReal)(1.53000000000000))*(x2354)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x2354)*(x2354))))+((((IkReal)(-44.0000000000000))*(x2354)*(x2355)))+((((IkReal)(-22.0000000000000))*((x2355)*(x2355))))+((((IkReal)(17.0000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((((IkReal)(1.17647058823529))*(x2354)))+((((IkReal)(1.17647058823529))*(x2355)))), ((((IKabs((((((IkReal)(1.53000000000000))*(x2355)))+((((IkReal)(1.53000000000000))*(x2354))))) != 0)?((IkReal)1/((((((IkReal)(1.53000000000000))*(x2355)))+((((IkReal)(1.53000000000000))*(x2354)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x2354)*(x2354))))+((((IkReal)(-44.0000000000000))*(x2354)*(x2355)))+((((IkReal)(-22.0000000000000))*((x2355)*(x2355))))+((((IkReal)(17.0000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2356=IKsin(j1);
IkReal x2357=IKcos(j1);
IkReal x2358=((py)*(sj0));
IkReal x2359=((cj0)*(px));
IkReal x2360=(((IkReal)(1.10000000000000))*(x2356));
IkReal x2361=((x2357)*(x2359));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2356)*(x2359)))+(((x2356)*(x2358))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2357));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x2361)))+((((IkReal)(-1.00000000000000))*(x2357)*(x2358))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2358)))+((((IkReal)(0.850000000000000))*(x2356)))+((((IkReal)(-1.00000000000000))*(x2359))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x2357)*(x2358)))+(((x2359)*(x2360)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x2361)))+(((x2358)*(x2360))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2362=(((IkReal)(-1.00000000000000))*(cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x2362;
evalcond[3]=x2362;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2363=(((IkReal)(1.00000000000000))*(pp));
IkReal x2364=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2363))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x2364;
evalcond[4]=x2364;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2363))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2365=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2365))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2365))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2366=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(py);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2366))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2366))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2367=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x2368=((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30);
IkReal x2369=((x2367)*(x2368));
if( IKabs((((IkReal)(0.850000000000000))*(x2369))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x2369)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x2369)))+IKsqr((((IkReal)(0.0555555555555556))*(x2369)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x2369)), (((IkReal)(0.0555555555555556))*(x2369)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2370=IKcos(j1);
IkReal x2371=IKsin(j1);
IkReal x2372=((py)*(sj0));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2371)*(x2372))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2370));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2370)*(x2372));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x2371)))+((((IkReal)(-1.00000000000000))*(x2372))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2371)*(x2372)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.0900000000000000))*(x2370)*(x2372))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(py)*(sj0))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(py)*(sj0)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(py)*(sj0)), (((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2373=IKcos(j1);
IkReal x2374=IKsin(j1);
IkReal x2375=((py)*(sj0));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2374)*(x2375))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2373));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2373)*(x2375));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2375)))+((((IkReal)(0.850000000000000))*(x2374))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x2373)*(x2375)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2374)*(x2375))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2376=(((IkReal)(1.00000000000000))*(pp));
IkReal x2377=(((IkReal)(-1.00000000000000))*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x2376))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x2377;
evalcond[4]=x2377;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2376))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2378=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2378));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2378))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2379=IKsin(j1);
IkReal x2380=IKcos(j1);
IkReal x2381=(((IkReal)(0.0450000000000000))*(x2380));
evalcond[0]=((x2381)+((((IkReal)(0.300000000000000))*(cj3)*(x2379)))+((((IkReal)(0.550000000000000))*(x2379)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2379)))+((((IkReal)(0.300000000000000))*(sj3)*(x2380)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2381))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2382=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2382)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2382))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2383=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2383));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2383))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2384=IKsin(j1);
IkReal x2385=IKcos(j1);
IkReal x2386=(((IkReal)(0.0450000000000000))*(x2385));
evalcond[0]=((x2386)+((((IkReal)(-1.00000000000000))*(cj3)*(x2386)))+((((IkReal)(0.300000000000000))*(sj3)*(x2385)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2384)))+((((IkReal)(0.300000000000000))*(cj3)*(x2384)))+((((IkReal)(0.550000000000000))*(x2384))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2387=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x2387;
evalcond[3]=x2387;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2388=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2388))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2388))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2389=(((IkReal)(1.00000000000000))*(pp));
IkReal x2390=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2389))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=x2390;
evalcond[4]=x2390;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2389))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2391=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(px);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2391))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2391))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2392=((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30);
IkReal x2393=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x2394=((x2392)*(x2393));
if( IKabs((((IkReal)(0.850000000000000))*(x2394))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x2394)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x2394)))+IKsqr((((IkReal)(0.0555555555555556))*(x2394)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x2394)), (((IkReal)(0.0555555555555556))*(x2394)*((((IkReal)(-144.500000000000))+((((IkReal)(200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2395=IKcos(j1);
IkReal x2396=IKsin(j1);
IkReal x2397=((cj0)*(px));
IkReal x2398=((x2395)*(x2397));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2396)*(x2397))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2395));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2398));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2397)))+((((IkReal)(0.850000000000000))*(x2396))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(0.0900000000000000))*(x2398)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2396)*(x2397))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(cj0)*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(cj0)*(px)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(cj0)*(px)), (((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(361.250000000000))+((((IkReal)(-2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2399=IKcos(j1);
IkReal x2400=IKsin(j1);
IkReal x2401=((cj0)*(px));
IkReal x2402=((x2399)*(x2401));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2400)*(x2401))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2399));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2402));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x2400)))+((((IkReal)(-1.00000000000000))*(x2401))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2400)*(x2401)))+((((IkReal)(0.0900000000000000))*(x2402)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2403=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2403)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2403))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2404=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2404));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2404))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2405=IKsin(j1);
IkReal x2406=IKcos(j1);
IkReal x2407=(((IkReal)(0.0450000000000000))*(x2406));
evalcond[0]=(((((IkReal)(0.550000000000000))*(x2405)))+((((IkReal)(0.300000000000000))*(sj3)*(x2406)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2407)))+(x2407)+((((IkReal)(0.0450000000000000))*(sj3)*(x2405)))+((((IkReal)(0.300000000000000))*(cj3)*(x2405))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2408=(((IkReal)(1.00000000000000))*(pp));
IkReal x2409=(((IkReal)(-1.00000000000000))*(px));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2408)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=x2409;
evalcond[4]=x2409;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2408))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2410=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2410));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2410))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2411=IKsin(j1);
IkReal x2412=IKcos(j1);
IkReal x2413=(((IkReal)(0.0450000000000000))*(x2412));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(cj3)*(x2413)))+((((IkReal)(0.300000000000000))*(cj3)*(x2411)))+((((IkReal)(0.300000000000000))*(sj3)*(x2412)))+(x2413)+((((IkReal)(0.550000000000000))*(x2411)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2411))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2414=((cj0)*(px));
IkReal x2415=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2416=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2417=((py)*(sj0));
if( IKabs(((((IKabs((((((IkReal)(-0.0450000000000000))*(x2414)))+(((x2414)*(x2416)))+((((IkReal)(-1.00000000000000))*(x2414)*(x2415)))+(((x2416)*(x2417)))+((((IkReal)(-0.0450000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2415)*(x2417))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x2414)))+(((x2414)*(x2416)))+((((IkReal)(-1.00000000000000))*(x2414)*(x2415)))+(((x2416)*(x2417)))+((((IkReal)(-0.0450000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2415)*(x2417)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.00000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2414))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2414)))))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2415)))+(x2416))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs((((((IkReal)(-0.0450000000000000))*(x2414)))+(((x2414)*(x2416)))+((((IkReal)(-1.00000000000000))*(x2414)*(x2415)))+(((x2416)*(x2417)))+((((IkReal)(-0.0450000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2415)*(x2417))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x2414)))+(((x2414)*(x2416)))+((((IkReal)(-1.00000000000000))*(x2414)*(x2415)))+(((x2416)*(x2417)))+((((IkReal)(-0.0450000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2415)*(x2417)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))))+IKsqr(((((IKabs((((((IkReal)(-1.00000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2414))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2414)))))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2415)))+(x2416)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs((((((IkReal)(-0.0450000000000000))*(x2414)))+(((x2414)*(x2416)))+((((IkReal)(-1.00000000000000))*(x2414)*(x2415)))+(((x2416)*(x2417)))+((((IkReal)(-0.0450000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2415)*(x2417))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x2414)))+(((x2414)*(x2416)))+((((IkReal)(-1.00000000000000))*(x2414)*(x2415)))+(((x2416)*(x2417)))+((((IkReal)(-0.0450000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2415)*(x2417)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))), ((((IKabs((((((IkReal)(-1.00000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2414))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x2417)))+((((IkReal)(-1.00000000000000))*(x2414)))))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2415)))+(x2416)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2418=IKsin(j1);
IkReal x2419=IKcos(j1);
IkReal x2420=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2421=((cj0)*(px));
IkReal x2422=((py)*(sj0));
IkReal x2423=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2424=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2425=((sj3)*(x2419));
IkReal x2426=(((IkReal)(1.00000000000000))*(x2419));
IkReal x2427=(((IkReal)(0.0450000000000000))*(x2418));
IkReal x2428=(((IkReal)(0.0900000000000000))*(x2419));
IkReal x2429=(((IkReal)(1.10000000000000))*(x2418));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x2418)*(x2421)))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2420)))+(((x2418)*(x2422))));
evalcond[1]=((((x2418)*(x2424)))+((((IkReal)(-0.550000000000000))*(x2419)))+(x2427)+((((IkReal)(-0.0450000000000000))*(x2425)))+((((IkReal)(-1.00000000000000))*(x2418)*(x2423)))+((((IkReal)(-1.00000000000000))*(x2419)*(x2420))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2422)*(x2426)))+(x2424)+((((IkReal)(-1.00000000000000))*(x2423)))+((((IkReal)(-1.00000000000000))*(x2421)*(x2426))));
evalcond[3]=((((x2419)*(x2424)))+((((IkReal)(0.0450000000000000))*(x2419)))+((((IkReal)(-1.00000000000000))*(x2419)*(x2423)))+(((sj3)*(x2427)))+(((x2418)*(x2420)))+((((IkReal)(-1.00000000000000))*(x2422)))+((((IkReal)(-1.00000000000000))*(x2421)))+((((IkReal)(0.550000000000000))*(x2418))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2422)*(x2428)))+(((x2421)*(x2429)))+(((x2421)*(x2428)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2422)*(x2429))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2430=((cj0)*(px));
IkReal x2431=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2432=((py)*(sj0));
IkReal x2433=(((IkReal)(0.0450000000000000))*(sj3));
if( IKabs(((((IKabs(((x2432)+(x2430))) != 0)?((IkReal)1/(((x2432)+(x2430)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x2433)+(x2431))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-0.550000000000000))*(x2432)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2433)))+((((IkReal)(-1.00000000000000))*(x2431)*(x2432)))+((((IkReal)(-1.00000000000000))*(x2432)*(x2433)))+((((IkReal)(-0.550000000000000))*(x2430)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2431))))) != 0)?((IkReal)1/((((((IkReal)(-0.550000000000000))*(x2432)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2433)))+((((IkReal)(-1.00000000000000))*(x2431)*(x2432)))+((((IkReal)(-1.00000000000000))*(x2432)*(x2433)))+((((IkReal)(-0.550000000000000))*(x2430)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2431)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x2432)+(x2430))) != 0)?((IkReal)1/(((x2432)+(x2430)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x2433)+(x2431)))))+IKsqr(((((IKabs((((((IkReal)(-0.550000000000000))*(x2432)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2433)))+((((IkReal)(-1.00000000000000))*(x2431)*(x2432)))+((((IkReal)(-1.00000000000000))*(x2432)*(x2433)))+((((IkReal)(-0.550000000000000))*(x2430)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2431))))) != 0)?((IkReal)1/((((((IkReal)(-0.550000000000000))*(x2432)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2433)))+((((IkReal)(-1.00000000000000))*(x2431)*(x2432)))+((((IkReal)(-1.00000000000000))*(x2432)*(x2433)))+((((IkReal)(-0.550000000000000))*(x2430)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2431)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((x2432)+(x2430))) != 0)?((IkReal)1/(((x2432)+(x2430)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x2433)+(x2431)))), ((((IKabs((((((IkReal)(-0.550000000000000))*(x2432)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2433)))+((((IkReal)(-1.00000000000000))*(x2431)*(x2432)))+((((IkReal)(-1.00000000000000))*(x2432)*(x2433)))+((((IkReal)(-0.550000000000000))*(x2430)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2431))))) != 0)?((IkReal)1/((((((IkReal)(-0.550000000000000))*(x2432)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2433)))+((((IkReal)(-1.00000000000000))*(x2431)*(x2432)))+((((IkReal)(-1.00000000000000))*(x2432)*(x2433)))+((((IkReal)(-0.550000000000000))*(x2430)))+((((IkReal)(-1.00000000000000))*(x2430)*(x2431)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2434=IKsin(j1);
IkReal x2435=IKcos(j1);
IkReal x2436=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2437=((cj0)*(px));
IkReal x2438=((py)*(sj0));
IkReal x2439=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2440=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2441=((sj3)*(x2435));
IkReal x2442=(((IkReal)(1.00000000000000))*(x2435));
IkReal x2443=(((IkReal)(0.0450000000000000))*(x2434));
IkReal x2444=(((IkReal)(0.0900000000000000))*(x2435));
IkReal x2445=(((IkReal)(1.10000000000000))*(x2434));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x2436)))+(((x2434)*(x2438)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2434)*(x2437))));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x2441)))+((((IkReal)(-0.550000000000000))*(x2435)))+(((x2434)*(x2440)))+(x2443)+((((IkReal)(-1.00000000000000))*(x2434)*(x2439)))+((((IkReal)(-1.00000000000000))*(x2435)*(x2436))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2437)*(x2442)))+((((IkReal)(-1.00000000000000))*(x2438)*(x2442)))+(x2440)+((((IkReal)(-1.00000000000000))*(x2439))));
evalcond[3]=(((((IkReal)(0.550000000000000))*(x2434)))+(((sj3)*(x2443)))+((((IkReal)(-1.00000000000000))*(x2437)))+((((IkReal)(0.0450000000000000))*(x2435)))+((((IkReal)(-1.00000000000000))*(x2438)))+(((x2434)*(x2436)))+(((x2435)*(x2440)))+((((IkReal)(-1.00000000000000))*(x2435)*(x2439))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2438)*(x2444)))+(((x2437)*(x2444)))+(((x2438)*(x2445)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2437)*(x2445))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs(((gconst48)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst48)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))), ((gconst48)*((((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2446=IKsin(j1);
IkReal x2447=IKcos(j1);
IkReal x2448=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2449=((cj0)*(px));
IkReal x2450=((py)*(sj0));
IkReal x2451=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2452=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2453=((sj3)*(x2447));
IkReal x2454=(((IkReal)(1.00000000000000))*(x2447));
IkReal x2455=(((IkReal)(0.0450000000000000))*(x2446));
IkReal x2456=(((IkReal)(0.0900000000000000))*(x2447));
IkReal x2457=(((IkReal)(1.10000000000000))*(x2446));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2446)*(x2449)))+(((x2446)*(x2450)))+((((IkReal)(-1.00000000000000))*(x2448))));
evalcond[1]=(((((IkReal)(-0.550000000000000))*(x2447)))+((((IkReal)(-1.00000000000000))*(x2447)*(x2448)))+((((IkReal)(-1.00000000000000))*(x2446)*(x2451)))+(x2455)+((((IkReal)(-0.0450000000000000))*(x2453)))+(((x2446)*(x2452))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2451)))+((((IkReal)(-1.00000000000000))*(x2449)*(x2454)))+(x2452)+((((IkReal)(-1.00000000000000))*(x2450)*(x2454))));
evalcond[3]=(((((IkReal)(0.0450000000000000))*(x2447)))+((((IkReal)(0.550000000000000))*(x2446)))+((((IkReal)(-1.00000000000000))*(x2450)))+((((IkReal)(-1.00000000000000))*(x2449)))+(((sj3)*(x2455)))+(((x2447)*(x2452)))+((((IkReal)(-1.00000000000000))*(x2447)*(x2451)))+(((x2446)*(x2448))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2449)*(x2456)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2450)*(x2456)))+(((x2449)*(x2457)))+(((x2450)*(x2457))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2458=((px)*(sj0));
IkReal x2459=((cj0)*(py));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x2459)))+(x2458));
evalcond[3]=((x2459)+((((IkReal)(-1.00000000000000))*(x2458))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign(((((py)*(sj0)))+(((cj0)*(px)))));
dummyeval[0]=((((py)*(sj0)))+(((cj0)*(px))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2460=((cj0)*(px));
IkReal x2461=(((IkReal)(6.66666666666667))*(cj3));
IkReal x2462=((py)*(sj0));
IkReal x2463=(((IkReal)(1.00000000000000))*(sj3));
dummyeval[0]=((x2460)+(x2462));
dummyeval[1]=(((((IkReal)(-1.00000000000000))*(x2461)*(x2462)))+((((IkReal)(-1.00000000000000))*(x2460)*(x2463)))+((((IkReal)(-1.00000000000000))*(x2460)*(x2461)))+((((IkReal)(-12.2222222222222))*(x2462)))+((((IkReal)(-12.2222222222222))*(x2460)))+((((IkReal)(-1.00000000000000))*(x2462)*(x2463))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2464=((cj0)*(px));
IkReal x2465=((py)*(sj0));
IkReal x2466=(((IkReal)(6.66666666666667))*(sj3));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x2465)*(x2466)))+((((IkReal)(-1.00000000000000))*(x2464)))+((((IkReal)(-1.00000000000000))*(x2465)))+(((cj3)*(x2465)))+(((cj3)*(x2464)))+((((IkReal)(-1.00000000000000))*(x2464)*(x2466))));
dummyeval[1]=((x2464)+(x2465));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2467=((px)*(sj0));
IkReal x2468=((cj0)*(py));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=((x2467)+((((IkReal)(-1.00000000000000))*(x2468))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2467)))+(x2468));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(cj0)*(px)))+((((IkReal)(-1.00000000000000))*(py)*(sj0))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2469=((cj0)*(px));
IkReal x2470=((py)*(sj0));
dummyeval[0]=((x2470)+(x2469));
dummyeval[1]=(((((IkReal)(-2.00000000000000))*(x2469)*(x2470)))+((((IkReal)(-1.00000000000000))*((x2469)*(x2469))))+((((IkReal)(-1.00000000000000))*((x2470)*(x2470)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2471=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2471))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2471))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2472=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2472))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2472))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2473=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2473))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2473))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2474=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2474))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2474))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2475=((py)*(sj0));
IkReal x2476=((cj0)*(px));
IkReal x2477=(((IkReal)(20.0000000000000))*(pp));
if( IKabs((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x2476)))+((((IkReal)(20.0000000000000))*(x2475))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x2476)))+((((IkReal)(20.0000000000000))*(x2475)))))):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.80000000000000))*((x2475)*(x2475))))+((((IkReal)(-1.80000000000000))*((x2476)*(x2476))))+((((IkReal)(-3.60000000000000))*(x2475)*(x2476))))) != 0)?((IkReal)1/((((((IkReal)(-1.80000000000000))*((x2475)*(x2475))))+((((IkReal)(-1.80000000000000))*((x2476)*(x2476))))+((((IkReal)(-3.60000000000000))*(x2475)*(x2476)))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x2475)))+(((x2475)*(x2477)))+(((x2476)*(x2477)))+((((IkReal)(-14.4500000000000))*(x2476))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x2476)))+((((IkReal)(20.0000000000000))*(x2475))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x2476)))+((((IkReal)(20.0000000000000))*(x2475)))))):(IkReal)1.0e30))))+IKsqr(((((IKabs((((((IkReal)(-1.80000000000000))*((x2475)*(x2475))))+((((IkReal)(-1.80000000000000))*((x2476)*(x2476))))+((((IkReal)(-3.60000000000000))*(x2475)*(x2476))))) != 0)?((IkReal)1/((((((IkReal)(-1.80000000000000))*((x2475)*(x2475))))+((((IkReal)(-1.80000000000000))*((x2476)*(x2476))))+((((IkReal)(-3.60000000000000))*(x2475)*(x2476)))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x2475)))+(((x2475)*(x2477)))+(((x2476)*(x2477)))+((((IkReal)(-14.4500000000000))*(x2476)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(17.0000000000000))*(((IKabs((((((IkReal)(20.0000000000000))*(x2476)))+((((IkReal)(20.0000000000000))*(x2475))))) != 0)?((IkReal)1/((((((IkReal)(20.0000000000000))*(x2476)))+((((IkReal)(20.0000000000000))*(x2475)))))):(IkReal)1.0e30))), ((((IKabs((((((IkReal)(-1.80000000000000))*((x2475)*(x2475))))+((((IkReal)(-1.80000000000000))*((x2476)*(x2476))))+((((IkReal)(-3.60000000000000))*(x2475)*(x2476))))) != 0)?((IkReal)1/((((((IkReal)(-1.80000000000000))*((x2475)*(x2475))))+((((IkReal)(-1.80000000000000))*((x2476)*(x2476))))+((((IkReal)(-3.60000000000000))*(x2475)*(x2476)))))):(IkReal)1.0e30))*((((((IkReal)(-14.4500000000000))*(x2475)))+(((x2475)*(x2477)))+(((x2476)*(x2477)))+((((IkReal)(-14.4500000000000))*(x2476)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2478=IKsin(j1);
IkReal x2479=IKcos(j1);
IkReal x2480=((cj0)*(px));
IkReal x2481=((py)*(sj0));
IkReal x2482=(((IkReal)(0.0900000000000000))*(x2479));
IkReal x2483=((x2478)*(x2481));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2483)+(((x2478)*(x2480))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2479));
evalcond[2]=((((x2479)*(x2480)))+(((x2479)*(x2481))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2480)))+((((IkReal)(0.850000000000000))*(x2478)))+((((IkReal)(-1.00000000000000))*(x2481))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2480)*(x2482)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2483)))+((((IkReal)(1.10000000000000))*(x2478)*(x2480)))+((((IkReal)(-1.00000000000000))*(x2481)*(x2482))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2484=((cj0)*(px));
IkReal x2485=((py)*(sj0));
if( IKabs((((((IkReal)(1.17647058823529))*(x2485)))+((((IkReal)(1.17647058823529))*(x2484))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.53000000000000))*(x2485)))+((((IkReal)(-1.53000000000000))*(x2484))))) != 0)?((IkReal)1/((((((IkReal)(-1.53000000000000))*(x2485)))+((((IkReal)(-1.53000000000000))*(x2484)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x2485)*(x2485))))+((((IkReal)(-44.0000000000000))*(x2484)*(x2485)))+((((IkReal)(-22.0000000000000))*((x2484)*(x2484))))+((((IkReal)(17.0000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((((IkReal)(1.17647058823529))*(x2485)))+((((IkReal)(1.17647058823529))*(x2484)))))+IKsqr(((((IKabs((((((IkReal)(-1.53000000000000))*(x2485)))+((((IkReal)(-1.53000000000000))*(x2484))))) != 0)?((IkReal)1/((((((IkReal)(-1.53000000000000))*(x2485)))+((((IkReal)(-1.53000000000000))*(x2484)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x2485)*(x2485))))+((((IkReal)(-44.0000000000000))*(x2484)*(x2485)))+((((IkReal)(-22.0000000000000))*((x2484)*(x2484))))+((((IkReal)(17.0000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((((IkReal)(1.17647058823529))*(x2485)))+((((IkReal)(1.17647058823529))*(x2484)))), ((((IKabs((((((IkReal)(-1.53000000000000))*(x2485)))+((((IkReal)(-1.53000000000000))*(x2484))))) != 0)?((IkReal)1/((((((IkReal)(-1.53000000000000))*(x2485)))+((((IkReal)(-1.53000000000000))*(x2484)))))):(IkReal)1.0e30))*((((IkReal)(3.61250000000000))+((((IkReal)(-22.0000000000000))*((x2485)*(x2485))))+((((IkReal)(-44.0000000000000))*(x2484)*(x2485)))+((((IkReal)(-22.0000000000000))*((x2484)*(x2484))))+((((IkReal)(17.0000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2486=IKsin(j1);
IkReal x2487=IKcos(j1);
IkReal x2488=((cj0)*(px));
IkReal x2489=((py)*(sj0));
IkReal x2490=(((IkReal)(0.0900000000000000))*(x2487));
IkReal x2491=((x2486)*(x2489));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2486)*(x2488)))+(x2491));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2487));
evalcond[2]=((((x2487)*(x2489)))+(((x2487)*(x2488))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2489)))+((((IkReal)(-1.00000000000000))*(x2488)))+((((IkReal)(0.850000000000000))*(x2486))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2489)*(x2490)))+((((IkReal)(1.10000000000000))*(x2486)*(x2488)))+((((IkReal)(-1.00000000000000))*(x2488)*(x2490)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2491))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2492=((cj0)*(py));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(((IkReal)(-1.00000000000000))*(x2492));
evalcond[3]=x2492;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=py;
dummyeval[1]=sj0;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2493=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2493))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2493))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2494=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2494))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2494))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2495=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(py);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2495))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2495))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2496=((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30);
IkReal x2497=((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30);
IkReal x2498=((x2496)*(x2497));
if( IKabs((((IkReal)(0.850000000000000))*(x2498))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x2498)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x2498)))+IKsqr((((IkReal)(0.0555555555555556))*(x2498)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x2498)), (((IkReal)(0.0555555555555556))*(x2498)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2499=IKcos(j1);
IkReal x2500=IKsin(j1);
IkReal x2501=((py)*(sj0));
IkReal x2502=((x2500)*(x2501));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2502));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2499));
evalcond[2]=((x2499)*(x2501));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2501)))+((((IkReal)(0.850000000000000))*(x2500))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-0.0900000000000000))*(x2499)*(x2501)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(1.10000000000000))*(x2502))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(py)*(sj0))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(py)*(sj0)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(py)*(sj0)), (((IkReal)(0.00653594771241830))*(((IKabs(py) != 0)?((IkReal)1/(py)):(IkReal)1.0e30))*(((IKabs(sj0) != 0)?((IkReal)1/(sj0)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((py)*(py))*((sj0)*(sj0))))+((((IkReal)(-1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2503=IKcos(j1);
IkReal x2504=IKsin(j1);
IkReal x2505=((py)*(sj0));
IkReal x2506=((x2504)*(x2505));
evalcond[0]=(((IkReal)(-0.850000000000000))+(x2506));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2503));
evalcond[2]=((x2503)*(x2505));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2505)))+((((IkReal)(0.850000000000000))*(x2504))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(1.10000000000000))*(x2506)))+((((IkReal)(-0.0900000000000000))*(x2503)*(x2505)))+((((IkReal)(-1.00000000000000))*(pp))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2507=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j0)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2507)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(py));
evalcond[4]=py;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2507))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2508=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2508));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2508))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2509=IKsin(j1);
IkReal x2510=IKcos(j1);
IkReal x2511=(((IkReal)(0.0450000000000000))*(x2510));
evalcond[0]=((((cj3)*(x2511)))+((((IkReal)(-1.00000000000000))*(x2511)))+((((IkReal)(0.550000000000000))*(x2509)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2510)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2509)))+((((IkReal)(0.300000000000000))*(cj3)*(x2509))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2512=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs(px))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j0, (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x2512)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=py;
evalcond[4]=(((IkReal)(-1.00000000000000))*(py));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2512))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2513=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2513));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2513))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2514=IKsin(j1);
IkReal x2515=IKcos(j1);
IkReal x2516=(((IkReal)(0.0450000000000000))*(x2515));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x2514)))+(((cj3)*(x2516)))+((((IkReal)(0.550000000000000))*(x2514)))+((((IkReal)(0.300000000000000))*(cj3)*(x2514)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2515)))+((((IkReal)(-1.00000000000000))*(x2516))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2517=((px)*(sj0));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j3)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=x2517;
evalcond[3]=(((IkReal)(-1.00000000000000))*(x2517));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj0;
dummyeval[1]=px;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2518=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2518))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2518))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2519=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))));
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2519))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(IkReal)(0);
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2519))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
IkReal x2520=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=IKabs(px);
evalcond[1]=(((IkReal)(0.722500000000000))+((((IkReal)(-1.00000000000000))*(x2520))));
evalcond[2]=(IkReal)(-0.850000000000000);
evalcond[3]=(IkReal)(0);
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2520))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(IkReal)(1.00000000000000);
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
static IkReal op[2+1], zeror[2];
int numroots;
op[0]=(IkReal)(1.00000000000000);
op[1]=(IkReal)(0);
op[2]=(IkReal)(-1.00000000000000);
polyroots2(op,zeror,&numroots);
static IkReal j1array[2], cj1array[2], sj1array[2], tempj1array[1];
int numsolutions = 0;
int ij1;
for(ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=(((IkReal)(2.00000000000000))*(atan(htj1)));
int kj1;
for(kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[2]={true,true};
_nj1 = 2;
for(ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
rotationfunction0(solutions);
    }

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2521=((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30);
IkReal x2522=((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30);
IkReal x2523=((x2521)*(x2522));
if( IKabs((((IkReal)(0.850000000000000))*(x2523))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.0555555555555556))*(x2523)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(0.850000000000000))*(x2523)))+IKsqr((((IkReal)(0.0555555555555556))*(x2523)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(0.850000000000000))*(x2523)), (((IkReal)(0.0555555555555556))*(x2523)*((((IkReal)(144.500000000000))+((((IkReal)(-200.000000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2524=IKcos(j1);
IkReal x2525=IKsin(j1);
IkReal x2526=((cj0)*(px));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2525)*(x2526))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2524));
evalcond[2]=((x2524)*(x2526));
evalcond[3]=(((((IkReal)(0.850000000000000))*(x2525)))+((((IkReal)(-1.00000000000000))*(x2526))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x2524)*(x2526)))+((((IkReal)(1.10000000000000))*(x2525)*(x2526))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs((((IkReal)(1.17647058823529))*(cj0)*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(-1700.00000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(1.17647058823529))*(cj0)*(px)))+IKsqr((((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(-1700.00000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((IkReal)(1.17647058823529))*(cj0)*(px)), (((IkReal)(0.00653594771241830))*(((IKabs(cj0) != 0)?((IkReal)1/(cj0)):(IkReal)1.0e30))*(((IKabs(px) != 0)?((IkReal)1/(px)):(IkReal)1.0e30))*((((IkReal)(-361.250000000000))+((((IkReal)(2200.00000000000))*((cj0)*(cj0))*((px)*(px))))+((((IkReal)(-1700.00000000000))*(pp)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2527=IKcos(j1);
IkReal x2528=IKsin(j1);
IkReal x2529=((cj0)*(px));
evalcond[0]=(((IkReal)(-0.850000000000000))+(((x2528)*(x2529))));
evalcond[1]=(((IkReal)(-0.850000000000000))*(x2527));
evalcond[2]=((x2527)*(x2529));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2529)))+((((IkReal)(0.850000000000000))*(x2528))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.0900000000000000))*(x2527)*(x2529)))+((((IkReal)(1.10000000000000))*(x2528)*(x2529))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x2530=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2530)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=px;
evalcond[4]=(((IkReal)(-1.00000000000000))*(px));
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2530))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2531=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2531));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2531))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2532=IKsin(j1);
IkReal x2533=IKcos(j1);
IkReal x2534=(((IkReal)(0.0450000000000000))*(x2533));
evalcond[0]=(((((IkReal)(0.550000000000000))*(x2532)))+((((IkReal)(-1.00000000000000))*(x2534)))+((((IkReal)(0.300000000000000))*(cj3)*(x2532)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2533)))+((((IkReal)(0.0450000000000000))*(sj3)*(x2532)))+(((cj3)*(x2534))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
IkReal x2535=(((IkReal)(1.00000000000000))*(pp));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j0)), (IkReal)(6.28318530717959))))))+(IKabs(py)));
evalcond[1]=(((IkReal)(0.396550000000000))+((((IkReal)(-1.00000000000000))*(x2535)))+((((IkReal)(0.0765000000000000))*(sj3)))+((((IkReal)(0.325950000000000))*(cj3))));
evalcond[2]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))));
evalcond[3]=(((IkReal)(-1.00000000000000))*(px));
evalcond[4]=px;
evalcond[5]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-0.0450000000000000))*(cj3))));
evalcond[6]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2535))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2536=IKatan2((((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-0.300000000000000))*(cj3)))), (((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))));
j1array[0]=(((IkReal)(-1.00000000000000))*(x2536));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x2536))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x2537=IKsin(j1);
IkReal x2538=IKcos(j1);
IkReal x2539=(((IkReal)(0.0450000000000000))*(x2538));
evalcond[0]=(((((IkReal)(0.0450000000000000))*(sj3)*(x2537)))+((((IkReal)(-1.00000000000000))*(x2539)))+((((IkReal)(-0.300000000000000))*(sj3)*(x2538)))+((((IkReal)(0.550000000000000))*(x2537)))+((((IkReal)(0.300000000000000))*(cj3)*(x2537)))+(((cj3)*(x2539))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2540=((cj0)*(px));
IkReal x2541=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2542=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2543=((py)*(sj0));
if( IKabs(((((IKabs((((((IkReal)(-0.0450000000000000))*(x2540)))+((((IkReal)(-1.00000000000000))*(x2540)*(x2541)))+((((IkReal)(-1.00000000000000))*(x2541)*(x2543)))+(((x2540)*(x2542)))+(((x2542)*(x2543)))+((((IkReal)(-0.0450000000000000))*(x2543))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x2540)))+((((IkReal)(-1.00000000000000))*(x2540)*(x2541)))+((((IkReal)(-1.00000000000000))*(x2541)*(x2543)))+(((x2540)*(x2542)))+(((x2542)*(x2543)))+((((IkReal)(-0.0450000000000000))*(x2543)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x2543)+(x2540))) != 0)?((IkReal)1/(((x2543)+(x2540)))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x2542)+((((IkReal)(-1.00000000000000))*(x2541))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs((((((IkReal)(-0.0450000000000000))*(x2540)))+((((IkReal)(-1.00000000000000))*(x2540)*(x2541)))+((((IkReal)(-1.00000000000000))*(x2541)*(x2543)))+(((x2540)*(x2542)))+(((x2542)*(x2543)))+((((IkReal)(-0.0450000000000000))*(x2543))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x2540)))+((((IkReal)(-1.00000000000000))*(x2540)*(x2541)))+((((IkReal)(-1.00000000000000))*(x2541)*(x2543)))+(((x2540)*(x2542)))+(((x2542)*(x2543)))+((((IkReal)(-0.0450000000000000))*(x2543)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))))+IKsqr(((((IKabs(((x2543)+(x2540))) != 0)?((IkReal)1/(((x2543)+(x2540)))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x2542)+((((IkReal)(-1.00000000000000))*(x2541)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs((((((IkReal)(-0.0450000000000000))*(x2540)))+((((IkReal)(-1.00000000000000))*(x2540)*(x2541)))+((((IkReal)(-1.00000000000000))*(x2541)*(x2543)))+(((x2540)*(x2542)))+(((x2542)*(x2543)))+((((IkReal)(-0.0450000000000000))*(x2543))))) != 0)?((IkReal)1/((((((IkReal)(-0.0450000000000000))*(x2540)))+((((IkReal)(-1.00000000000000))*(x2540)*(x2541)))+((((IkReal)(-1.00000000000000))*(x2541)*(x2543)))+(((x2540)*(x2542)))+(((x2542)*(x2543)))+((((IkReal)(-0.0450000000000000))*(x2543)))))):(IkReal)1.0e30))*((((IkReal)(-0.0247500000000000))+((((IkReal)(0.0112500000000000))*(cj3)))+((((IkReal)(-0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((cj3)*(cj3))))+((((IkReal)(-0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((sj3)*(sj3))))))), ((((IKabs(((x2543)+(x2540))) != 0)?((IkReal)1/(((x2543)+(x2540)))):(IkReal)1.0e30))*((((IkReal)(-0.0450000000000000))+(x2542)+((((IkReal)(-1.00000000000000))*(x2541)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2544=IKsin(j1);
IkReal x2545=IKcos(j1);
IkReal x2546=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2547=((cj0)*(px));
IkReal x2548=((py)*(sj0));
IkReal x2549=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2550=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2551=((sj3)*(x2545));
IkReal x2552=(((IkReal)(0.0450000000000000))*(x2544));
IkReal x2553=(((IkReal)(1.10000000000000))*(x2544));
IkReal x2554=(((IkReal)(0.0900000000000000))*(x2545));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x2544)*(x2548)))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2546)))+(((x2544)*(x2547))));
evalcond[1]=(((((IkReal)(-0.0450000000000000))*(x2551)))+((((IkReal)(-1.00000000000000))*(x2545)*(x2546)))+(((x2544)*(x2549)))+((((IkReal)(-0.550000000000000))*(x2545)))+((((IkReal)(-1.00000000000000))*(x2552)))+((((IkReal)(-1.00000000000000))*(x2544)*(x2550))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(x2550)+(((x2545)*(x2547)))+((((IkReal)(-1.00000000000000))*(x2549)))+(((x2545)*(x2548))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x2548)))+((((IkReal)(-1.00000000000000))*(x2545)*(x2550)))+((((IkReal)(0.550000000000000))*(x2544)))+(((x2545)*(x2549)))+(((sj3)*(x2552)))+((((IkReal)(-0.0450000000000000))*(x2545)))+(((x2544)*(x2546)))+((((IkReal)(-1.00000000000000))*(x2547))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2548)*(x2553)))+((((IkReal)(-1.00000000000000))*(x2548)*(x2554)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x2547)*(x2554)))+(((x2547)*(x2553))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2555=((cj0)*(px));
IkReal x2556=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2557=((py)*(sj0));
IkReal x2558=(((IkReal)(0.0450000000000000))*(sj3));
if( IKabs(((((IKabs(((x2555)+(x2557))) != 0)?((IkReal)1/(((x2555)+(x2557)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x2556)+(x2558))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1.00000000000000))*(x2556)*(x2557)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2556)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2557)))+((((IkReal)(-1.00000000000000))*(x2557)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2555))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x2556)*(x2557)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2556)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2557)))+((((IkReal)(-1.00000000000000))*(x2557)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2555)))))):(IkReal)1.0e30))*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((sj3)*(sj3))))+((((IkReal)(0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((cj3)*(cj3)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x2555)+(x2557))) != 0)?((IkReal)1/(((x2555)+(x2557)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x2556)+(x2558)))))+IKsqr(((((IKabs((((((IkReal)(-1.00000000000000))*(x2556)*(x2557)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2556)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2557)))+((((IkReal)(-1.00000000000000))*(x2557)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2555))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x2556)*(x2557)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2556)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2557)))+((((IkReal)(-1.00000000000000))*(x2557)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2555)))))):(IkReal)1.0e30))*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((sj3)*(sj3))))+((((IkReal)(0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((cj3)*(cj3))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((x2555)+(x2557))) != 0)?((IkReal)1/(((x2555)+(x2557)))):(IkReal)1.0e30))*((((IkReal)(0.550000000000000))+(x2556)+(x2558)))), ((((IKabs((((((IkReal)(-1.00000000000000))*(x2556)*(x2557)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2556)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2557)))+((((IkReal)(-1.00000000000000))*(x2557)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2555))))) != 0)?((IkReal)1/((((((IkReal)(-1.00000000000000))*(x2556)*(x2557)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2556)))+((((IkReal)(-1.00000000000000))*(x2555)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2557)))+((((IkReal)(-1.00000000000000))*(x2557)*(x2558)))+((((IkReal)(-0.550000000000000))*(x2555)))))):(IkReal)1.0e30))*((((IkReal)(0.0247500000000000))+((((IkReal)(-0.0112500000000000))*(cj3)))+((((IkReal)(0.0879750000000000))*(cj3)*(sj3)))+((((IkReal)(0.0135000000000000))*((sj3)*(sj3))))+((((IkReal)(0.167025000000000))*(sj3)))+((((IkReal)(-0.0135000000000000))*((cj3)*(cj3))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2559=IKsin(j1);
IkReal x2560=IKcos(j1);
IkReal x2561=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2562=((cj0)*(px));
IkReal x2563=((py)*(sj0));
IkReal x2564=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2565=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2566=((sj3)*(x2560));
IkReal x2567=(((IkReal)(0.0450000000000000))*(x2559));
IkReal x2568=(((IkReal)(1.10000000000000))*(x2559));
IkReal x2569=(((IkReal)(0.0900000000000000))*(x2560));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-1.00000000000000))*(x2561)))+(((x2559)*(x2563)))+((((IkReal)(-0.0450000000000000))*(sj3)))+(((x2559)*(x2562))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x2567)))+(((x2559)*(x2564)))+((((IkReal)(-0.550000000000000))*(x2560)))+((((IkReal)(-0.0450000000000000))*(x2566)))+((((IkReal)(-1.00000000000000))*(x2559)*(x2565)))+((((IkReal)(-1.00000000000000))*(x2560)*(x2561))));
evalcond[2]=(((IkReal)(0.0450000000000000))+(((x2560)*(x2563)))+(x2565)+((((IkReal)(-1.00000000000000))*(x2564)))+(((x2560)*(x2562))));
evalcond[3]=((((x2559)*(x2561)))+((((IkReal)(-1.00000000000000))*(x2562)))+(((sj3)*(x2567)))+((((IkReal)(-1.00000000000000))*(x2560)*(x2565)))+((((IkReal)(-0.0450000000000000))*(x2560)))+((((IkReal)(0.550000000000000))*(x2559)))+(((x2560)*(x2564)))+((((IkReal)(-1.00000000000000))*(x2563))));
evalcond[4]=(((IkReal)(-0.212500000000000))+(((x2563)*(x2568)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x2563)*(x2569)))+((((IkReal)(-1.00000000000000))*(x2562)*(x2569)))+(((x2562)*(x2568))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
if( IKabs(((gconst49)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst49)*((((IkReal)(0.550000000000000))+((((IkReal)(0.0450000000000000))*(sj3)))+((((IkReal)(0.300000000000000))*(cj3)))))), ((gconst49)*((((IkReal)(-0.0450000000000000))+((((IkReal)(-0.300000000000000))*(sj3)))+((((IkReal)(0.0450000000000000))*(cj3)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x2570=IKsin(j1);
IkReal x2571=IKcos(j1);
IkReal x2572=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2573=((cj0)*(px));
IkReal x2574=((py)*(sj0));
IkReal x2575=(((IkReal)(0.0450000000000000))*(cj3));
IkReal x2576=(((IkReal)(0.300000000000000))*(sj3));
IkReal x2577=((sj3)*(x2571));
IkReal x2578=(((IkReal)(0.0450000000000000))*(x2570));
IkReal x2579=(((IkReal)(1.10000000000000))*(x2570));
IkReal x2580=(((IkReal)(0.0900000000000000))*(x2571));
evalcond[0]=(((IkReal)(-0.550000000000000))+((((IkReal)(-0.0450000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(x2572)))+(((x2570)*(x2574)))+(((x2570)*(x2573))));
evalcond[1]=(((((IkReal)(-0.550000000000000))*(x2571)))+((((IkReal)(-1.00000000000000))*(x2570)*(x2576)))+((((IkReal)(-0.0450000000000000))*(x2577)))+((((IkReal)(-1.00000000000000))*(x2571)*(x2572)))+((((IkReal)(-1.00000000000000))*(x2578)))+(((x2570)*(x2575))));
evalcond[2]=(((IkReal)(0.0450000000000000))+((((IkReal)(-1.00000000000000))*(x2575)))+(((x2571)*(x2573)))+(((x2571)*(x2574)))+(x2576));
evalcond[3]=((((x2571)*(x2575)))+((((IkReal)(-1.00000000000000))*(x2573)))+(((x2570)*(x2572)))+((((IkReal)(-1.00000000000000))*(x2574)))+(((sj3)*(x2578)))+((((IkReal)(0.550000000000000))*(x2570)))+((((IkReal)(-1.00000000000000))*(x2571)*(x2576)))+((((IkReal)(-0.0450000000000000))*(x2571))));
evalcond[4]=(((IkReal)(-0.212500000000000))+((((IkReal)(-1.00000000000000))*(x2574)*(x2580)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2574)*(x2579)))+(((x2573)*(x2579)))+((((IkReal)(-1.00000000000000))*(x2573)*(x2580))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2581=((cj2)*(pz));
IkReal x2582=(((IkReal)(1.00000000000000))*(cj0));
IkReal x2583=((pz)*(sj2));
IkReal x2584=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x2585=(((IkReal)(0.550000000000000))*(sj2));
IkReal x2586=((py)*(sj0));
IkReal x2587=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2588=((cj2)*(sj0));
IkReal x2589=((cj2)*(px)*(py));
IkReal x2590=((cj0)*(px)*(sj2));
if( IKabs(((gconst35)*(((((sj2)*(x2584)*(x2586)))+(((cj0)*(px)*(x2585)))+(((px)*(sj0)*(x2581)))+(((sj2)*(x2586)*(x2587)))+(((x2585)*(x2586)))+((((IkReal)(-1.00000000000000))*(py)*(x2581)*(x2582)))+(((x2584)*(x2590)))+(((x2587)*(x2590))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*((((((IkReal)(-1.00000000000000))*(x2582)*(x2588)*((px)*(px))))+(((cj0)*(cj2)*(py)*(x2586)))+(((x2589)*((cj0)*(cj0))))+(((x2583)*(x2587)))+((((IkReal)(0.550000000000000))*(x2583)))+(((x2583)*(x2584)))+((((IkReal)(-1.00000000000000))*(px)*(x2586)*(x2588))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst35)*(((((sj2)*(x2584)*(x2586)))+(((cj0)*(px)*(x2585)))+(((px)*(sj0)*(x2581)))+(((sj2)*(x2586)*(x2587)))+(((x2585)*(x2586)))+((((IkReal)(-1.00000000000000))*(py)*(x2581)*(x2582)))+(((x2584)*(x2590)))+(((x2587)*(x2590)))))), ((gconst35)*((((((IkReal)(-1.00000000000000))*(x2582)*(x2588)*((px)*(px))))+(((cj0)*(cj2)*(py)*(x2586)))+(((x2589)*((cj0)*(cj0))))+(((x2583)*(x2587)))+((((IkReal)(0.550000000000000))*(x2583)))+(((x2583)*(x2584)))+((((IkReal)(-1.00000000000000))*(px)*(x2586)*(x2588)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x2591=IKsin(j1);
IkReal x2592=IKcos(j1);
IkReal x2593=((px)*(sj2));
IkReal x2594=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2595=(((IkReal)(0.0900000000000000))*(cj2));
IkReal x2596=(((IkReal)(0.0450000000000000))*(cj2));
IkReal x2597=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x2598=((py)*(sj0));
IkReal x2599=((cj0)*(px));
IkReal x2600=(((IkReal)(1.00000000000000))*(cj2));
IkReal x2601=((cj0)*(x2592));
IkReal x2602=(((IkReal)(1.00000000000000))*(cj0)*(py));
IkReal x2603=(((IkReal)(1.10000000000000))*(x2591));
IkReal x2604=((pz)*(x2592));
IkReal x2605=((pz)*(x2591));
IkReal x2606=(((IkReal)(0.300000000000000))*(cj2)*(sj3));
IkReal x2607=((x2592)*(x2598));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x2591)*(x2598)))+((((IkReal)(-1.00000000000000))*(x2597)))+((((IkReal)(-1.00000000000000))*(x2594)))+(x2604)+(((x2591)*(x2599))));
evalcond[1]=((((x2593)*(x2601)))+((((IkReal)(-1.00000000000000))*(sj2)*(x2605)))+(((sj2)*(x2607)))+(((cj2)*(px)*(sj0)))+((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x2600))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj3)*(x2591)*(x2596)))+((((IkReal)(-1.00000000000000))*(x2592)*(x2594)))+((((IkReal)(-1.00000000000000))*(x2592)*(x2597)))+(((x2591)*(x2606)))+(pz)+(((x2591)*(x2596)))+((((IkReal)(-0.550000000000000))*(x2592))));
evalcond[3]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+((((IkReal)(-1.00000000000000))*(sj2)*(x2602)))+((((IkReal)(-0.0450000000000000))*(cj3)))+(((cj2)*(x2605)))+(((sj0)*(x2593)))+((((IkReal)(-1.00000000000000))*(x2600)*(x2607)))+((((IkReal)(-1.00000000000000))*(x2592)*(x2599)*(x2600))));
evalcond[4]=((((x2591)*(x2594)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2592)*(x2596)))+(((x2592)*(x2606)))+((((IkReal)(-1.00000000000000))*(x2598)))+((((IkReal)(0.550000000000000))*(x2591)))+(((x2592)*(x2596)))+(((x2591)*(x2597)))+((((IkReal)(-1.00000000000000))*(x2599))));
evalcond[5]=(((IkReal)(-0.212500000000000))+(((x2595)*(x2607)))+((((IkReal)(0.0900000000000000))*(cj0)*(py)*(sj2)))+((((IkReal)(-0.0900000000000000))*(sj0)*(x2593)))+((((IkReal)(-1.00000000000000))*(x2595)*(x2605)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x2599)*(x2603)))+((((IkReal)(1.10000000000000))*(x2604)))+(((x2592)*(x2595)*(x2599)))+(((x2598)*(x2603))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2608=(cj3)*(cj3);
IkReal x2609=(sj3)*(sj3);
IkReal x2610=((cj2)*(cj3));
IkReal x2611=(((IkReal)(0.0135000000000000))*(cj2));
IkReal x2612=(((IkReal)(1.00000000000000))*(pz));
if( IKabs(((gconst34)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x2609)))+((((IkReal)(-0.0900000000000000))*(x2608)))+((((IkReal)(-0.0270000000000000))*(cj3)*(sj3)))+((((IkReal)(-0.0495000000000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((x2608)*(x2611)))+((((IkReal)(-0.0879750000000000))*(sj3)*(x2610)))+((((IkReal)(-0.0247500000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x2612)))+((((IkReal)(-0.167025000000000))*(cj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(x2609)*(x2611)))+((((IkReal)(0.0112500000000000))*(x2610)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x2612))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst34)*((((IkReal)(-0.302500000000000))+((((IkReal)(-0.330000000000000))*(cj3)))+((pz)*(pz))+((((IkReal)(-0.00202500000000000))*(x2609)))+((((IkReal)(-0.0900000000000000))*(x2608)))+((((IkReal)(-0.0270000000000000))*(cj3)*(sj3)))+((((IkReal)(-0.0495000000000000))*(sj3)))))), ((gconst34)*(((((x2608)*(x2611)))+((((IkReal)(-0.0879750000000000))*(sj3)*(x2610)))+((((IkReal)(-0.0247500000000000))*(cj2)))+((((IkReal)(-1.00000000000000))*(cj0)*(px)*(x2612)))+((((IkReal)(-0.167025000000000))*(cj2)*(sj3)))+((((IkReal)(-1.00000000000000))*(x2609)*(x2611)))+((((IkReal)(0.0112500000000000))*(x2610)))+((((IkReal)(-1.00000000000000))*(py)*(sj0)*(x2612)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x2613=IKsin(j1);
IkReal x2614=IKcos(j1);
IkReal x2615=((px)*(sj2));
IkReal x2616=(((IkReal)(0.300000000000000))*(cj3));
IkReal x2617=(((IkReal)(0.0900000000000000))*(cj2));
IkReal x2618=(((IkReal)(0.0450000000000000))*(cj2));
IkReal x2619=(((IkReal)(0.0450000000000000))*(sj3));
IkReal x2620=((py)*(sj0));
IkReal x2621=((cj0)*(px));
IkReal x2622=(((IkReal)(1.00000000000000))*(cj2));
IkReal x2623=((cj0)*(x2614));
IkReal x2624=(((IkReal)(1.00000000000000))*(cj0)*(py));
IkReal x2625=(((IkReal)(1.10000000000000))*(x2613));
IkReal x2626=((pz)*(x2614));
IkReal x2627=((pz)*(x2613));
IkReal x2628=(((IkReal)(0.300000000000000))*(cj2)*(sj3));
IkReal x2629=((x2614)*(x2620));
evalcond[0]=(((IkReal)(-0.550000000000000))+(((x2613)*(x2621)))+((((IkReal)(-1.00000000000000))*(x2616)))+(x2626)+(((x2613)*(x2620)))+((((IkReal)(-1.00000000000000))*(x2619))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj2)*(x2627)))+((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x2622)))+(((cj2)*(px)*(sj0)))+(((x2615)*(x2623)))+(((sj2)*(x2629))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x2614)*(x2619)))+(((x2613)*(x2618)))+((((IkReal)(-1.00000000000000))*(x2614)*(x2616)))+(pz)+((((IkReal)(-0.550000000000000))*(x2614)))+((((IkReal)(-1.00000000000000))*(cj3)*(x2613)*(x2618)))+(((x2613)*(x2628))));
evalcond[3]=(((IkReal)(0.0450000000000000))+((((IkReal)(0.300000000000000))*(sj3)))+(((sj0)*(x2615)))+((((IkReal)(-0.0450000000000000))*(cj3)))+((((IkReal)(-1.00000000000000))*(x2622)*(x2629)))+(((cj2)*(x2627)))+((((IkReal)(-1.00000000000000))*(x2614)*(x2621)*(x2622)))+((((IkReal)(-1.00000000000000))*(sj2)*(x2624))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(cj3)*(x2614)*(x2618)))+((((IkReal)(-1.00000000000000))*(x2620)))+(((x2614)*(x2618)))+(((x2614)*(x2628)))+((((IkReal)(-1.00000000000000))*(x2621)))+(((x2613)*(x2619)))+((((IkReal)(0.550000000000000))*(x2613)))+(((x2613)*(x2616))));
evalcond[5]=(((IkReal)(-0.212500000000000))+(((x2621)*(x2625)))+((((IkReal)(0.0900000000000000))*(cj0)*(py)*(sj2)))+((((IkReal)(-0.0900000000000000))*(sj0)*(x2615)))+(((x2614)*(x2617)*(x2621)))+((((IkReal)(1.10000000000000))*(x2626)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x2617)*(x2627)))+(((x2617)*(x2629)))+(((x2620)*(x2625))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}
}
}
}
return IkSolutionList_GetNumSolutions(solutions)>0;
}


IKFAST_API const char* GetKinematicsHash() { return "2ac375a0aaf420715f482953e36187a5"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }


#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList solutions;
    IkSolutionList_Init( &solutions );
    IkReal vfree[IKFAST_NUM_FREE_VARS];
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    size_t i = 0;
    for(i = 0; i < countof(vfree); ++i)
        vfree[i] = atof(argv[13+i]);
    int bSuccess = ComputeIk(eetrans, eerot, countof(vfree) > 0 ? vfree : NULL, &solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)IkSolutionList_GetNumSolutions(&solutions));
    IkReal solvalues[IKFAST_NUM_JOINTS];
    for(i = 0; i < IkSolutionList_GetNumSolutions(&solutions); ++i) 
    {
        int sol_count;
        int free_count;
        IkSolution * sol = IkSolutionList_GetSolution(&solutions, i);
        IkSolution_GetSolution(sol, solvalues, &sol_count, vfree);
        const int *vsolfree = IkSolution_GetFree( sol, &free_count );
        printf("sol%d (free=%d): ", i, free_count);
        size_t j = 0;
        for( j = 0; j < sol_count; ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
